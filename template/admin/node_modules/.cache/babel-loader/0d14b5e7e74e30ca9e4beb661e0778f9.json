{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/pages/notify/smsTemplateApply/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/pages/notify/smsTemplateApply/index.vue","mtime":1689324015240},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/babel.config.js","mtime":1689324015052},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/.babelrc","mtime":1689324015050},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapState","tempListApi","tempCreateApi","isLoginApi","serveInfoApi","editFrom","name","components","data","grid","xl","lg","md","sm","xs","loading","columns1","levelFrom","type","status","title","page","limit","levelFrom2","is_have","total","FromData","delfromData","levelLists","watch","$route","to","from","getList","created","onIsLogin","mounted","_this","then","res","sms","open","$router","push","$routeProStr","path","computed","_objectSpread","labelWidth","isMobile","undefined","labelPosition","methods","_this2","spinShow","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$Message","warning","stop","_x","apply","arguments","catch","error","msg","_this3","url","key","sortable","width","minWidth","slot","Object","assign","slice","concat","_ref2","_callee2","_callee2$","_context2","count","_x2","pageChange","index","add","_this4","_ref3","_callee3","_callee3$","_context3","$refs","edits","modals","_x3","userSearchs","submitFail"],"sources":["src/pages/notify/smsTemplateApply/index.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"i-layout-page-header header_top\">\n      <div class=\"i-layout-page-header fl_header\">\n        <router-link :to=\"{ path: $routeProStr + '/setting/sms/sms_config/index' }\"\n          ><Button icon=\"ios-arrow-back\" size=\"small\" type=\"text\">返回</Button></router-link\n        >\n        <Divider type=\"vertical\" />\n        <span class=\"ivu-page-header-title mr20\" style=\"padding: 0\">{{ $route.meta.title }}</span>\n      </div>\n    </div>\n    <Card :bordered=\"false\" dis-hover class=\"ivu-mt\">\n      <Form\n        ref=\"levelFrom\"\n        :model=\"levelFrom\"\n        :label-width=\"labelWidth\"\n        :label-position=\"labelPosition\"\n        @submit.native.prevent\n      >\n        <Row type=\"flex\" :gutter=\"24\" v-if=\"$route.path === $routeProStr + '/setting/sms/sms_template_apply/index'\">\n          <!--                    <Col v-bind=\"grid\">-->\n          <!--                        <FormItem label=\"模板类型：\">-->\n          <!--                            <Select v-model=\"levelFrom.type\" placeholder=\"请选择\" clearable  @on-change=\"userSearchs\">-->\n          <!--                                <Option value=\"1\">验证码</Option>-->\n          <!--                                <Option value=\"2\">通知</Option>-->\n          <!--                                <Option value=\"3\">推广</Option>-->\n          <!--                            </Select>-->\n          <!--                        </FormItem>-->\n          <!--                    </Col>-->\n          <!--                    <Col v-bind=\"grid\">-->\n          <!--                        <FormItem label=\"模板状态：\">-->\n          <!--                            <Select v-model=\"levelFrom.status\" placeholder=\"请选择\" clearable  @on-change=\"userSearchs\">-->\n          <!--                                <Option value=\"1\">可用</Option>-->\n          <!--                                <Option value=\"0\">不可用</Option>-->\n          <!--                            </Select>-->\n          <!--                        </FormItem>-->\n          <!--                    </Col>-->\n          <!--                    <Col v-bind=\"grid\">-->\n          <!--                        <FormItem label=\"模板名称：\" >-->\n          <!--                            <Input search enter-button  v-model=\"levelFrom.title\" placeholder=\"请输入模板名称\" @on-search=\"userSearchs\"/>-->\n          <!--                        </FormItem>-->\n          <!--                    </Col>-->\n          <Col span=\"24\">\n            <Button type=\"primary\" icon=\"md-add\" @click=\"add\">申请模板</Button>\n          </Col>\n        </Row>\n        <Row type=\"flex\" :gutter=\"24\" v-else>\n          <Col v-bind=\"grid\">\n            <FormItem label=\"是否拥有：\">\n              <Select v-model=\"levelFrom.is_have\" placeholder=\"请选择\" clearable @on-change=\"userSearchs\">\n                <Option value=\"1\">有</Option>\n                <Option value=\"0\">没有</Option>\n              </Select>\n            </FormItem>\n          </Col>\n        </Row>\n      </Form>\n      <Table\n        :columns=\"columns1\"\n        :data=\"levelLists\"\n        ref=\"table\"\n        class=\"mt25\"\n        :loading=\"loading\"\n        no-userFrom-text=\"暂无数据\"\n        no-filtered-userFrom-text=\"暂无筛选结果\"\n      >\n        <template slot-scope=\"{ row, index }\" slot=\"status\">\n          <span v-show=\"row.status === 1\">可用</span>\n          <span v-show=\"row.status === 0\">不可用</span>\n        </template>\n        <template\n          slot-scope=\"{ row, index }\"\n          slot=\"is_have\"\n          v-if=\"$route.path === $routeProStr + '/setting/sms/sms_template_apply/commons'\"\n        >\n          <span v-show=\"row.status === 1\">有</span>\n          <span v-show=\"row.status === 0\">没有</span>\n        </template>\n      </Table>\n      <div class=\"acea-row row-right page\">\n        <Page\n          :total=\"total\"\n          :current=\"levelFrom.page\"\n          show-elevator\n          show-total\n          @on-change=\"pageChange\"\n          :page-size=\"levelFrom.limit\"\n        />\n      </div>\n    </Card>\n\n    <!-- 新建表单-->\n    <edit-from ref=\"edits\" :FromData=\"FromData\" @submitFail=\"submitFail\"></edit-from>\n  </div>\n</template>\n<script>\nimport { mapState } from 'vuex';\nimport { tempListApi, tempCreateApi, isLoginApi, serveInfoApi } from '@/api/setting';\nimport editFrom from '@/components/from/from';\nexport default {\n  name: 'smsTemplateApply',\n  components: { editFrom },\n  data() {\n    return {\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      loading: false,\n      columns1: [],\n      levelFrom: {\n        type: '',\n        status: '',\n        title: '',\n        page: 1,\n        limit: 20,\n      },\n      levelFrom2: {\n        is_have: '',\n        page: 1,\n        limit: 20,\n      },\n      total: 0,\n      FromData: null,\n      delfromData: {},\n      levelLists: [],\n    };\n  },\n  watch: {\n    $route(to, from) {\n      this.getList();\n    },\n  },\n  created() {\n    this.onIsLogin();\n  },\n  mounted() {\n    serveInfoApi().then((res) => {\n      if (res.data.sms.open != 1) {\n        this.$router.push(this.$routeProStr + '/setting/sms/sms_config/index?url=' + this.$route.path);\n      }\n    });\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : 75;\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n  },\n  methods: {\n    // 查看是否登录\n    onIsLogin() {\n      this.spinShow = true;\n      isLoginApi()\n        .then(async (res) => {\n          let data = res.data;\n          if (!data.status) {\n            this.$Message.warning('请先登录');\n            this.$router.push(this.$routeProStr + '/setting/sms/sms_config/index?url=' + this.$route.path);\n          } else {\n            this.getList();\n          }\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 等级列表\n    getList() {\n      this.loading = true;\n      this.levelFrom.status = this.levelFrom.status || '';\n      this.levelFrom.is_have = this.levelFrom.is_have || '';\n      let data = {\n        data:\n          this.$route.path === this.$routeProStr + '/setting/sms/sms_template_apply/index'\n            ? this.levelFrom\n            : this.levelFrom2,\n        url:\n          this.$route.path === this.$routeProStr + '/setting/sms/sms_template_apply/index'\n            ? 'serve/sms/temps'\n            : 'notify/sms/public_temp',\n      };\n      let columns1 = [\n        {\n          title: 'ID',\n          key: 'id',\n          sortable: true,\n          width: 80,\n        },\n        {\n          title: '模板ID',\n          key: 'templateid',\n          minWidth: 110,\n        },\n        {\n          title: '模板名称',\n          key: 'title',\n          minWidth: 150,\n        },\n        {\n          title: '模板内容',\n          key: 'content',\n          minWidth: 550,\n        },\n        {\n          title: '模板类型',\n          key: 'type',\n          minWidth: 100,\n        },\n        {\n          title: '模板状态',\n          slot: 'status',\n          minWidth: 100,\n        },\n      ];\n      if (this.$route.path === this.$routeProStr + '/setting/sms/sms_template_apply/commons') {\n        this.columns1 = Object.assign([], columns1)\n          .slice(0, 6)\n          .concat([\n            {\n              title: '是否拥有',\n              slot: 'is_have',\n              minWidth: 110,\n            },\n          ]);\n      } else {\n        this.columns1 = columns1;\n      }\n      tempListApi(data)\n        .then(async (res) => {\n          let data = res.data;\n          this.levelLists = data.data;\n          this.total = data.count;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    pageChange(index) {\n      this.levelFrom.page = index;\n      this.getList();\n    },\n    // 添加\n    add() {\n      tempCreateApi()\n        .then(async (res) => {\n          this.FromData = res.data;\n          this.$refs.edits.modals = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 表格搜索\n    userSearchs() {\n      this.levelFrom.page = 1;\n      this.getList();\n    },\n    // 修改成功\n    submitFail() {\n      this.getList();\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"stylus\">\n.tabBox_img\n    width 36px\n    height 36px\n    border-radius:4px\n    cursor pointer\n    img\n        width 100%\n        height 100%\n</style>\n"],"mappings":"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"}]}