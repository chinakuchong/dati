{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js!/Volumes/mac/webwork/2023/dati/template/admin/src/store/module/user.js","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/store/module/user.js","mtime":1689324015353},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/babel.config.js","mtime":1689324015052},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/.babelrc","mtime":1689324015050},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["state","userName","userId","avatarImgPath","access","hasGetInfo","unreadCount","messageUnreadList","messageReadedList","messageTrashList","messageContentStore","mutations","setAvatar","avatarPath","setUserId","id","setUserName","name","setAccess","setHasGetInfo","status","setMessageCount","count","setMessageUnreadList","list","setMessageReadedList","setMessageTrashList","updateMessageContentStore","_ref","msg_id","content","moveMsg","_ref2","from","to","index","findIndex","_","msgItem","splice","loading","unshift","getters","messageUnreadCount","length","messageReadedCount","messageTrashCount","actions","getUnreadMessageCount","_ref3","commit"],"sources":["/Volumes/mac/webwork/2023/dati/template/admin/src/store/module/user.js"],"sourcesContent":["// +----------------------------------------------------------------------\n// | CRMEB [ CRMEB赋能开发者，助力企业发展 ]\n// +----------------------------------------------------------------------\n// | Copyright (c) 2016~2023 https://www.crmeb.com All rights reserved.\n// +----------------------------------------------------------------------\n// | Licensed CRMEB并不是自由软件，未经许可不能去掉CRMEB相关版权\n// +----------------------------------------------------------------------\n// | Author: CRMEB Team <admin@crmeb.com>\n// +----------------------------------------------------------------------\n\nimport // getMessage,\n// getContentByMsgId,\n// hasRead,\n// removeReaded,\n// restoreTrash,\n// getUnreadCount\n'@/api/user';\n\nexport default {\n  state: {\n    userName: '',\n    userId: '',\n    avatarImgPath: '',\n    access: '',\n    hasGetInfo: false,\n    unreadCount: 0,\n    messageUnreadList: [],\n    messageReadedList: [],\n    messageTrashList: [],\n    messageContentStore: {},\n  },\n  mutations: {\n    setAvatar(state, avatarPath) {\n      state.avatarImgPath = avatarPath;\n    },\n    setUserId(state, id) {\n      state.userId = id;\n    },\n    setUserName(state, name) {\n      state.userName = name;\n    },\n    setAccess(state, access) {\n      state.access = access;\n    },\n    setHasGetInfo(state, status) {\n      state.hasGetInfo = status;\n    },\n    setMessageCount(state, count) {\n      state.unreadCount = count;\n    },\n    setMessageUnreadList(state, list) {\n      state.messageUnreadList = list;\n    },\n    setMessageReadedList(state, list) {\n      state.messageReadedList = list;\n    },\n    setMessageTrashList(state, list) {\n      state.messageTrashList = list;\n    },\n    updateMessageContentStore(state, { msg_id, content }) {\n      state.messageContentStore[msg_id] = content;\n    },\n    moveMsg(state, { from, to, msg_id }) {\n      const index = state[from].findIndex((_) => _.msg_id === msg_id);\n      const msgItem = state[from].splice(index, 1)[0];\n      msgItem.loading = false;\n      state[to].unshift(msgItem);\n    },\n  },\n  getters: {\n    messageUnreadCount: (state) => state.messageUnreadList.length,\n    messageReadedCount: (state) => state.messageReadedList.length,\n    messageTrashCount: (state) => state.messageTrashList.length,\n  },\n  actions: {\n    // 此方法用来获取未读消息条数，接口只返回数值，不返回消息列表\n    getUnreadMessageCount({ state, commit }) {\n      // getUnreadCount().then(res => {\n      //   const { data } = res\n      //   commit('setMessageCount', data)\n      // })\n    },\n    // 获取消息列表，其中包含未读、已读、回收站三个列表\n    // getMessageList ({ state, commit }) {\n    //   return new Promise((resolve, reject) => {\n    //     getMessage().then(res => {\n    //       const { unread, readed, trash } = res.data\n    //       commit('setMessageUnreadList', unread.sort((a, b) => new Date(b.create_time) - new Date(a.create_time)))\n    //       commit('setMessageReadedList', readed.map(_ => {\n    //         _.loading = false\n    //         return _\n    //       }).sort((a, b) => new Date(b.create_time) - new Date(a.create_time)))\n    //       commit('setMessageTrashList', trash.map(_ => {\n    //         _.loading = false\n    //         return _\n    //       }).sort((a, b) => new Date(b.create_time) - new Date(a.create_time)))\n    //       resolve()\n    //     }).catch(error => {\n    //       reject(error)\n    //     })\n    //   })\n    // },\n    // 根据当前点击的消息的id获取内容\n    // getContentByMsgId ({ state, commit }, { msg_id }) {\n    //   return new Promise((resolve, reject) => {\n    //     let contentItem = state.messageContentStore[msg_id]\n    //     if (contentItem) {\n    //       resolve(contentItem)\n    //     } else {\n    //       getContentByMsgId(msg_id).then(res => {\n    //         const content = res.data\n    //         commit('updateMessageContentStore', { msg_id, content })\n    //         resolve(content)\n    //       })\n    //     }\n    //   })\n    // }\n    // 把一个未读消息标记为已读\n    // hasRead ({ state, commit }, { msg_id }) {\n    //   return new Promise((resolve, reject) => {\n    //     hasRead(msg_id).then(() => {\n    //       commit('moveMsg', {\n    //         from: 'messageUnreadList',\n    //         to: 'messageReadedList',\n    //         msg_id\n    //       })\n    //       commit('setMessageCount', state.unreadCount - 1)\n    //       resolve()\n    //     }).catch(error => {\n    //       reject(error)\n    //     })\n    //   })\n    // }\n    // 删除一个已读消息到回收站\n    // removeReaded ({ commit }, { msg_id }) {\n    //   return new Promise((resolve, reject) => {\n    //     removeReaded(msg_id).then(() => {\n    //       commit('moveMsg', {\n    //         from: 'messageReadedList',\n    //         to: 'messageTrashList',\n    //         msg_id\n    //       })\n    //       resolve()\n    //     }).catch(error => {\n    //       reject(error)\n    //     })\n    //   })\n    // }\n    // 还原一个已删除消息到已读消息\n    // restoreTrash ({ commit }, { msg_id }) {\n    //   return new Promise((resolve, reject) => {\n    //     restoreTrash(msg_id).then(() => {\n    //       commit('moveMsg', {\n    //         from: 'messageTrashList',\n    //         to: 'messageReadedList',\n    //         msg_id\n    //       })\n    //       resolve()\n    //     }).catch(error => {\n    //       reject(error)\n    //     })\n    //   })\n    // }\n  },\n};\n"],"mappings":"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"}]}