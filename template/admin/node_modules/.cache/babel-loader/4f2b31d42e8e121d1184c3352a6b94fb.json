{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/pages/user/label/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/pages/user/label/index.vue","mtime":1689324015284},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/babel.config.js","mtime":1689324015052},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/.babelrc","mtime":1689324015050},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapState","userLabelAll","userLabelApi","userLabelAddApi","userLabelEdit","userLabelCreate","name","data","grid1","xl","lg","md","sm","xs","grid2","loading","columns1","title","key","align","width","slot","fixed","labelFrom","page","limit","label_cate","labelLists","total","theme3","labelSort","sortName","current","computed","_objectSpread","labelWidth","isMobile","undefined","labelPosition","created","getUserLabelAll","methods","add","_this","$modalForm","then","getList","_this2","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_callee$","_context","prev","next","list","count","stop","_x","apply","arguments","catch","$Message","error","msg","pageChange","index","edit","id","_this3","del","row","tit","num","_this4","delfromData","url","concat","method","ids","$modalSure","success","splice","_this5","obj","unshift","forEach","el","status","showMenu","item","labelEdit","_this6","addSort","_this7","deleteSort","_this8","bindMenuItem"],"sources":["src/pages/user/label/index.vue"],"sourcesContent":["<template>\n  <div>\n    <Row class=\"ivu-mt box-wrapper\">\n      <Col v-bind=\"grid1\" class=\"left-wrapper\">\n        <Menu :theme=\"theme3\" :active-name=\"sortName\" width=\"auto\">\n          <MenuGroup>\n            <MenuItem\n              :name=\"item.id\"\n              class=\"menu-item\"\n              :class=\"index === current ? 'showOn' : ''\"\n              v-for=\"(item, index) in labelSort\"\n              :key=\"index\"\n              @click.native=\"bindMenuItem(item, index)\"\n            >\n              {{ item.name }}\n              <div class=\"icon-box\" v-if=\"index != 0\">\n                <Icon type=\"ios-more\" size=\"24\" @click.stop=\"showMenu(item)\" />\n              </div>\n              <div class=\"right-menu ivu-poptip-inner\" v-show=\"item.status\" v-if=\"index != 0\">\n                <div class=\"ivu-poptip-body\" @click=\"labelEdit(item)\">\n                  <div class=\"ivu-poptip-body-content\">\n                    <div class=\"ivu-poptip-body-content-inner\">编辑</div>\n                  </div>\n                </div>\n                <div class=\"ivu-poptip-body\" @click=\"deleteSort(item, '删除分类', index)\">\n                  <div class=\"ivu-poptip-body-content\">\n                    <div class=\"ivu-poptip-body-content-inner\">删除</div>\n                  </div>\n                </div>\n              </div>\n            </MenuItem>\n          </MenuGroup>\n        </Menu>\n      </Col>\n      <Col v-bind=\"grid2\" ref=\"rightBox\">\n        <Card :bordered=\"false\" dis-hover>\n          <Row type=\"flex\">\n            <Col>\n              <Button v-auth=\"['admin-user-label_add']\" type=\"primary\" icon=\"md-add\" @click=\"add\">添加标签</Button>\n              <Button\n                v-auth=\"['admin-user-label_add']\"\n                type=\"success\"\n                icon=\"md-add\"\n                @click=\"addSort\"\n                style=\"margin-left: 10px\"\n                >添加分类</Button\n              >\n            </Col>\n          </Row>\n          <Table\n            :columns=\"columns1\"\n            :data=\"labelLists\"\n            ref=\"table\"\n            class=\"mt25\"\n            :loading=\"loading\"\n            highlight-row\n            no-userFrom-text=\"暂无数据\"\n            no-filtered-userFrom-text=\"暂无筛选结果\"\n          >\n            <template slot-scope=\"{ row, index }\" slot=\"icons\">\n              <div class=\"tabBox_img\" v-viewer>\n                <img v-lazy=\"row.icon\" />\n              </div>\n            </template>\n            <template slot-scope=\"{ row, index }\" slot=\"action\">\n              <a @click=\"edit(row.id)\">修改</a>\n              <Divider type=\"vertical\" />\n              <a @click=\"del(row, '删除分组', index)\">删除</a>\n            </template>\n          </Table>\n          <div class=\"acea-row row-right page\">\n            <Page\n              :total=\"total\"\n              :model-value=\"labelFrom.page\"\n              show-elevator\n              show-total\n              @on-change=\"pageChange\"\n              :page-size=\"labelFrom.limit\"\n            />\n          </div>\n        </Card>\n      </Col>\n    </Row>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport { userLabelAll, userLabelApi, userLabelAddApi, userLabelEdit, userLabelCreate } from '@/api/user';\nexport default {\n  name: 'user_label',\n  data() {\n    return {\n      grid1: {\n        xl: 4,\n        lg: 4,\n        md: 6,\n        sm: 8,\n        xs: 0,\n      },\n      grid2: {\n        xl: 20,\n        lg: 20,\n        md: 18,\n        sm: 16,\n        xs: 24,\n      },\n\n      loading: false,\n      columns1: [\n        {\n          title: 'ID',\n          key: 'id',\n          align: 'center',\n          width: 80,\n        },\n        {\n          title: '标签名称',\n          key: 'label_name',\n          align: 'left',\n        },\n        {\n          title: '分类名称',\n          key: 'cate_name',\n          align: 'center',\n        },\n\n        {\n          title: '操作',\n          slot: 'action',\n          fixed: 'right',\n          width: 120,\n        },\n      ],\n      labelFrom: {\n        page: 1,\n        limit: 15,\n        label_cate: '',\n      },\n      labelLists: [],\n      total: 0,\n      theme3: 'light',\n      labelSort: [],\n      sortName: '',\n      current: 0,\n    };\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : 75;\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n  },\n  created() {\n    this.getUserLabelAll();\n  },\n  methods: {\n    // 添加\n    add() {\n      this.$modalForm(userLabelAddApi(0, this.labelFrom.label_cate)).then(() => this.getList());\n    },\n    // 分组列表\n    getList() {\n      this.loading = true;\n      userLabelApi(this.labelFrom)\n        .then(async (res) => {\n          let data = res.data;\n          this.labelLists = data.list;\n          this.total = data.count;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    pageChange(index) {\n      this.labelFrom.page = index;\n      this.getList();\n    },\n    // 修改\n    edit(id) {\n      this.$modalForm(userLabelAddApi(id)).then(() => this.getList());\n    },\n    // 删除\n    del(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `user/user_label/del/${row.id}`,\n        method: 'DELETE',\n        ids: '',\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.labelLists.splice(num, 1);\n          this.getList();\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 标签分类\n    getUserLabelAll(key) {\n      userLabelAll().then((res) => {\n        let obj = {\n          name: '全部',\n          id: '',\n        };\n        res.data.unshift(obj);\n        res.data.forEach((el) => {\n          el.status = false;\n        });\n        if (!key) {\n          this.sortName = res.data[0].id;\n          this.labelFrom.label_cate = res.data[0].id;\n          this.getList();\n        }\n        this.labelSort = res.data;\n      });\n    },\n    // 显示标签小菜单\n    showMenu(item) {\n      this.labelSort.forEach((el) => {\n        if (el.id == item.id) {\n          el.status = item.status ? false : true;\n        } else {\n          el.status = false;\n        }\n      });\n    },\n    //编辑标签\n    labelEdit(item) {\n      this.$modalForm(userLabelEdit(item.id)).then(() => this.getUserLabelAll(1));\n    },\n    // 添加分类\n    addSort() {\n      this.$modalForm(userLabelCreate()).then(() => this.getUserLabelAll());\n    },\n    deleteSort(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `user/user_label_cate/${row.id}`,\n        method: 'DELETE',\n        ids: '',\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.labelSort.splice(num, 1);\n          this.labelSort = [];\n          this.getUserLabelAll();\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    bindMenuItem(name, index) {\n      this.labelFrom.page = 1;\n      this.current = index;\n      this.labelSort.forEach((el) => {\n        el.status = false;\n      });\n      this.labelFrom.label_cate = name.id;\n      this.getList();\n    },\n  },\n};\n</script>\n\n<style lang=\"stylus\" scoped>\n.showOn {\n  color: #2d8cf0;\n  background: #f0faff;\n  z-index: 2;\n}\n\n/deep/ .ivu-menu-vertical .ivu-menu-item-group-title {\n  display: none;\n}\n\n/deep/ .ivu-menu-vertical.ivu-menu-light:after {\n  display: none;\n}\n\n.left-wrapper {\n  height: 920px;\n  background: #fff;\n  border-right: 1px solid #f2f2f2;\n}\n\n.menu-item {\n  z-index: 50;\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  word-break: break-all;\n\n  .icon-box {\n    z-index: 3;\n    position: absolute;\n    right: 20px;\n    top: 50%;\n    transform: translateY(-50%);\n    display: none;\n  }\n\n  &:hover .icon-box {\n    display: block;\n  }\n\n  .right-menu {\n    z-index: 10;\n    position: absolute;\n    right: -106px;\n    top: -11px;\n    width: auto;\n    min-width: 121px;\n  }\n}\n</style>\n"],"mappings":"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"}]}