{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/pages/statistic/user/components/userRegion.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/pages/statistic/user/components/userRegion.vue","mtime":1689324015269},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/babel.config.js","mtime":1689324015052},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/.babelrc","mtime":1689324015050},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["echarts","statisticWechatRegionApi","statisticWechatSexApi","echartsNew","name","components","props","formInline","type","Object","default","_default","channel_type","data","chart","resdata","resdataList","columns1","title","key","sortable","style","height","optionData","mounted","getTrend","getSex","beforeDestroy","dispose","methods","chinaConfigure","myChart","init","$refs","myEchart","window","onresize","resize","setOption","backgroundColor","tooltip","trigger","formatter","params","concat","value","newNum","visitNum","payPrice","dataRange","show","min","max","text","realtime","calculable","color","geo","map","roam","label","normal","textStyle","itemStyle","borderColor","emphasis","areaColor","shadowOffsetX","shadowOffsetY","shadowBlur","borderWidth","shadowColor","series","zoom","aspectScale","coordinateSystem","geoIndex","_this","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_callee$","_context","prev","next","item","jsonData","province","allNum","stop","_x","apply","arguments","catch","$Message","error","msg","_this2","_ref2","_callee2","totalSumAll","_callee2$","_context2","forEach","subtext","x","y","fontSize","subtextStyle","fontWeight","legend","orient","left","radius","avoidLabelOverlap","position","labelLine","colorList","dataIndex","_x2"],"sources":["src/pages/statistic/user/components/userRegion.vue"],"sourcesContent":["<template>\n  <Row :gutter=\"16\">\n    <Col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"18\">\n      <Card :bordered=\"false\" dis-hover class=\"ivu-mt-16\">\n        <div class=\"acea-row row-between-wrapper\">\n          <div class=\"header-title mb20\">用户地域分布</div>\n        </div>\n        <Row>\n          <Col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"10\">\n            <div class=\"echarts\">\n              <div :style=\"{ height: '400px', width: '100%' }\" ref=\"myEchart\"></div>\n            </div>\n          </Col>\n          <Col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"14\">\n            <div class=\"tables\">\n              <Table height=\"400\" :columns=\"columns1\" :data=\"resdataList\"></Table>\n            </div>\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n    <Col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"6\">\n      <Card :bordered=\"false\" dis-hover class=\"ivu-mt-16\">\n        <div class=\"acea-row row-between-wrapper\">\n          <div class=\"header-title mb20\">用户性别比例</div>\n        </div>\n        <echarts-new\n          :option-data=\"optionData\"\n          :styles=\"style\"\n          height=\"100%\"\n          width=\"100%\"\n          v-if=\"optionData\"\n        ></echarts-new>\n      </Card>\n    </Col>\n  </Row>\n</template>\n\n<script>\nimport echarts from 'echarts';\nimport '../../../../../node_modules/echarts/map/js/china.js'; // 引入中国地图数据\nimport { statisticWechatRegionApi, statisticWechatSexApi } from '@/api/statistic';\nimport echartsNew from '@/components/echartsNew/index';\nexport default {\n  name: 'userRegion',\n  components: {\n    echartsNew,\n  },\n  props: {\n    formInline: {\n      type: Object,\n      default: function () {\n        return {\n          channel_type: '',\n          data: '',\n        };\n      },\n    },\n  },\n  data() {\n    return {\n      chart: null,\n      resdata: [],\n      resdataList: [],\n      columns1: [\n        {\n          title: 'TOP省份',\n          key: 'province',\n        },\n        {\n          title: '累积用户数',\n          key: 'allNum',\n          sortable: true,\n        },\n        {\n          title: '新增用户数',\n          key: 'newNum',\n          sortable: true,\n        },\n        {\n          title: '访客数',\n          key: 'visitNum',\n          sortable: true,\n        },\n        {\n          title: '支付金额',\n          key: 'payPrice',\n          sortable: true,\n        },\n      ],\n      style: { height: '400px' },\n      optionData: {},\n    };\n  },\n  mounted() {\n    this.getTrend();\n    this.getSex();\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    chinaConfigure() {\n      let myChart = echarts.init(this.$refs.myEchart); //这里是为了获得容器所在位置\n      window.onresize = myChart.resize;\n      myChart.setOption({\n        // 进行相关配置\n        backgroundColor: '#fff',\n        tooltip: {\n          trigger: 'item',\n          formatter: function (params) {\n            return params.data\n              ? `地区:${params.name}</br>累计用户: ${params.data.value}</br>新增用户: ${params.data.newNum}</br>访客数: ${params.data.visitNum}</br>支付金额: ${params.data.payPrice}`\n              : `地区:${params.name}</br>累计用户: 0</br>新增用户: 0</br>访客数: 0</br>支付金额: 0`;\n          },\n        }, // 鼠标移到图里面的浮动提示框\n        dataRange: {\n          show: false,\n          min: 0,\n          max: 1000,\n          text: ['High', 'Low'],\n          realtime: true,\n          calculable: true,\n          color: ['orangered', 'yellow', 'lightskyblue'],\n        },\n        geo: {\n          // 这个是重点配置区\n          map: 'china', // 表示中国地图\n          roam: false,\n          label: {\n            normal: {\n              show: false, // 是否显示对应地名\n              textStyle: {\n                color: 'rgba(0,0,0,0.4)',\n              },\n            },\n          },\n          itemStyle: {\n            normal: {\n              borderColor: 'rgba(0, 0, 0, 0.2)',\n            },\n            emphasis: {\n              areaColor: null,\n              shadowOffsetX: 0,\n              shadowOffsetY: 0,\n              shadowBlur: 20,\n              borderWidth: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)',\n            },\n          },\n        },\n        series: [\n          {\n            type: 'scatter',\n            zoom: 1.2,\n            aspectScale: 1.75, //长宽比\n            coordinateSystem: 'geo', // 对应上方配置\n          },\n          {\n            type: 'map',\n            geoIndex: 0,\n            data: this.resdata,\n          },\n        ],\n      });\n    },\n    // 统计图\n    getTrend() {\n      statisticWechatRegionApi(this.formInline)\n        .then(async (res) => {\n          this.resdataList = res.data;\n          this.resdata = res.data.map((item) => {\n            let jsonData = {};\n            jsonData.name = item.province;\n            jsonData.value = item.allNum;\n            jsonData.newNum = item.newNum;\n            jsonData.payPrice = item.payPrice;\n            jsonData.visitNum = item.visitNum;\n            return jsonData;\n          });\n          this.chinaConfigure();\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    //性别\n    getSex() {\n      statisticWechatSexApi(this.formInline)\n        .then(async (res) => {\n          let totalSumAll = 0;\n          res.data.forEach((item) => {\n            totalSumAll += item.value;\n          });\n          this.optionData = {\n            title: {\n              show: true,\n              text: '总用户数', // 当前写死\n              subtext: totalSumAll, // 当前写死\n              x: 'center',\n              y: 'center',\n              textStyle: {\n                fontSize: '14',\n                color: '#666666',\n              },\n              subtextStyle: {\n                fontSize: '30',\n                fontWeight: 'bold',\n                color: '#333333',\n              },\n            },\n            tooltip: {\n              trigger: 'item',\n              formatter: '{a} <br/>{b}: {c} ({d}%)',\n            },\n            legend: {\n              orient: 'vertical',\n              left: 10,\n              data: ['未知', '男', '女'],\n            },\n            series: [\n              {\n                name: '访问来源',\n                type: 'pie',\n                radius: ['50%', '70%'],\n                avoidLabelOverlap: false,\n                label: {\n                  show: false,\n                  position: 'center',\n                },\n                labelLine: {\n                  show: false,\n                },\n                data: res.data,\n                itemStyle: {\n                  emphasis: {\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowColor: 'rgba(0, 0, 0, 0.5)',\n                  },\n                  normal: {\n                    color: function (params) {\n                      //自定义颜色\n                      var colorList = ['#999999', '#1890FF', '#FFAB2B'];\n                      return colorList[params.dataIndex];\n                    },\n                  },\n                },\n              },\n            ],\n          };\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"less\">\n.echarts {\n  width: 100%;\n}\n.tables {\n  width: 100%;\n  /deep/.ivu-table-overflowY {\n    &::-webkit-scrollbar {\n      width: 0;\n    }\n    &::-webkit-scrollbar-track {\n      background-color: transparent;\n    }\n    &::-webkit-scrollbar-thumb {\n      background: #e8eaec;\n    }\n  }\n}\n</style>\n"],"mappings":"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"}]}