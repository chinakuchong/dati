{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/pages/statistic/integral/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/pages/statistic/integral/index.vue","mtime":1689324015266},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/babel.config.js","mtime":1689324015052},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/.babelrc","mtime":1689324015050},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["cardsData","echartsNew","name","components","data","timeVal","style","height","fromList","title","custom","fromTxt","text","val","formValidate","status","date","cardLists","col","count","className","optionData","spinShow","created","methods","onchangeTime","e","dataTime","join","getTrend","_this","statisticUserTrendApi","formInline","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","legend","xAxis","series","wrap","_callee$","_context","prev","next","map","item","index","push","type","value","itemStyle","normal","color","smooth","tooltip","trigger","axisPointer","label","backgroundColor","x","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","boundaryGap","axisLabel","interval","rotate","textStyle","yAxis","axisLine","show","axisTick","splitLine","lineStyle","stop","_x","apply","arguments","catch","$Message","error","msg"],"sources":["src/pages/statistic/integral/index.vue"],"sourcesContent":["<template>\n  <div>\n    <Card :bordered=\"false\" dis-hover class=\"ivu-mt\">\n      <Form ref=\"formValidate\" :model=\"formValidate\" class=\"tabform\" @submit.native.prevent>\n        <Row :gutter=\"24\" type=\"flex\">\n          <Col span=\"24\">\n            <FormItem label=\"订单时间：\">\n              <RadioGroup\n                v-model=\"formValidate.data\"\n                type=\"button\"\n                @on-change=\"selectChange(formValidate.data)\"\n                class=\"mr\"\n              >\n                <Radio :label=\"item.val\" v-for=\"(item, i) in fromList.fromTxt\" :key=\"i\">{{ item.text }}</Radio>\n              </RadioGroup>\n              <DatePicker\n                :editable=\"false\"\n                @on-change=\"onchangeTime\"\n                :value=\"timeVal\"\n                format=\"yyyy/MM/dd\"\n                type=\"daterange\"\n                placement=\"bottom-end\"\n                placeholder=\"请选择时间\"\n                style=\"width: 200px\"\n              ></DatePicker>\n            </FormItem> </Col\n        ></Row>\n      </Form>\n    </Card>\n    <cards-data :cardLists=\"cardLists\" v-if=\"cardLists.length >= 0\"></cards-data>\n    <echarts-new :option-data=\"optionData\" :styles=\"style\" height=\"100%\" width=\"100%\" v-if=\"optionData\"></echarts-new>\n    <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\n    <div class=\"code-row-bg\">\n      <Card :bordered=\"false\" dis-hover class=\"ivu-mt\">\n        <div class=\"acea-row row-between-wrapper\">\n          <div class=\"header-title\">积分来源</div>\n          <div>切换样式</div>\n        </div>\n        <echarts-new\n          :option-data=\"optionData\"\n          :styles=\"style\"\n          height=\"100%\"\n          width=\"100%\"\n          v-if=\"optionData\"\n        ></echarts-new>\n      </Card>\n      <Card :bordered=\"false\" dis-hover class=\"ivu-mt\">\n        <div class=\"acea-row row-between-wrapper\">\n          <div class=\"header-title\">积分消耗</div>\n          <div>切换样式</div>\n        </div>\n        <echarts-new\n          :option-data=\"optionData\"\n          :styles=\"style\"\n          height=\"100%\"\n          width=\"100%\"\n          v-if=\"optionData\"\n        ></echarts-new>\n      </Card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport cardsData from '@/components/cards/cards';\nimport echartsNew from '@/components/echartsNew/index';\n\nexport default {\n  name: 'index',\n  components: { cardsData, echartsNew },\n  data() {\n    return {\n      timeVal: [],\n      style: { height: '400px' },\n\n      fromList: {\n        title: '选择时间',\n        custom: true,\n        fromTxt: [\n          { text: '全部', val: '' },\n          { text: '今天', val: 'today' },\n          { text: '本周', val: 'week' },\n          { text: '本月', val: 'month' },\n          { text: '本季度', val: 'quarter' },\n          { text: '本年', val: 'year' },\n        ],\n      },\n      formValidate: {\n        status: '',\n        date: '',\n      },\n      cardLists: [\n        {\n          col: 6,\n          count: 0,\n          name: '参与人数(人)',\n          className: 'ios-speedometer-outline',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '成团数量(个)',\n          className: 'md-rose',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '参与人数(人)',\n          className: 'ios-speedometer-outline',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '成团数量(个)',\n          className: 'md-rose',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '参与人数(人)',\n          className: 'ios-speedometer-outline',\n        },\n        {\n          col: 6,\n          count: 0,\n          name: '成团数量(个)',\n          className: 'md-rose',\n        },\n      ],\n      optionData: {},\n      spinShow: false,\n    };\n  },\n  created() {\n    // this.getTrend();\n  },\n  methods: {\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e;\n      this.dataTime = this.timeVal.join('-');\n      this.name = this.dataTime;\n    },\n    // 统计图\n    getTrend() {\n      this.spinShow = true;\n      statisticUserTrendApi(this.formInline)\n        .then(async (res) => {\n          let legend = res.data.series.map((item) => {\n            return item.name;\n          });\n          let xAxis = res.data.xAxis;\n          let col = ['#5B8FF9', '#5AD8A6', '#FFAB2B', '#5D7092'];\n          let series = [];\n          res.data.series.map((item, index) => {\n            series.push({\n              name: item.name,\n              type: 'line',\n              data: item.value,\n              itemStyle: {\n                normal: {\n                  color: col[index],\n                },\n              },\n              smooth: 0,\n            });\n          });\n          this.optionData = {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                label: {\n                  backgroundColor: '#6a7985',\n                },\n              },\n            },\n            legend: {\n              x: 'center',\n              data: legend,\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true,\n            },\n            toolbox: {\n              feature: {\n                saveAsImage: {},\n              },\n            },\n            xAxis: {\n              type: 'category',\n              boundaryGap: true,\n              // axisTick:{\n              //     show:false\n              // },\n              // axisLine:{\n              //     show:false\n              // },\n              // splitLine: {\n              //     show: false\n              // },\n              axisLabel: {\n                interval: 0,\n                rotate: 40,\n                textStyle: {\n                  color: '#000000',\n                },\n              },\n              data: xAxis,\n            },\n            yAxis: {\n              type: 'value',\n              axisLine: {\n                show: false,\n              },\n              axisTick: {\n                show: false,\n              },\n              axisLabel: {\n                textStyle: {\n                  color: '#7F8B9C',\n                },\n              },\n              splitLine: {\n                show: true,\n                lineStyle: {\n                  color: '#F5F7F9',\n                },\n              },\n            },\n            series: series,\n          };\n          this.spinShow = false;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n          this.spinShow = false;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.cl {\n  margin-right: 20px;\n}\n.code-row-bg {\n  display: flex;\n  flex-wrap: nowrap;\n}\n.code-row-bg .ivu-mt {\n  width: 100%;\n  margin: 0 5px;\n}\n</style>\n"],"mappings":"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"}]}