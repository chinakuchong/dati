{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/components/verifition/Verify/VerifyPoints.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/components/verifition/Verify/VerifyPoints.vue","mtime":1689324015174},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/babel.config.js","mtime":1689324015052},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/.babelrc","mtime":1689324015050},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["resetSize","_code_chars","_code_color1","_code_color2","aesEncrypt","ajCaptcha","ajCaptchaCheck","name","props","mode","type","String","default","captchaType","vSpace","Number","imgSize","Object","_default","width","height","barSize","defaultImg","data","secretKey","checkNum","fontPos","checkPosArr","num","pointBackImgBase","poinTextList","backToken","setSize","imgHeight","imgWidth","barHeight","barWidth","tempPoints","text","barAreaColor","undefined","barAreaBorderColor","showRefresh","bindingClick","computed","watch","immediate","handler","init","mounted","$el","onselectstart","methods","_this","splice","length","getPictrue","$nextTick","$parent","$emit","canvasClick","e","_this2","push","getMousePos","$refs","canvas","createPoint","pointTransfrom","setTimeout","captchaVerification","JSON","stringify","pointJson","token","then","res","repCode","clickShow","refresh","obj","x","offsetX","y","offsetY","pos","assign","_this3","clientUid","localStorage","getItem","ts","Date","now","repData","originalImageBase64","wordList","join","repMsg","pointArr","newPointArr","map","p","Math","round","parseInt"],"sources":["src/components/verifition/Verify/VerifyPoints.vue"],"sourcesContent":["<template>\n  <div style=\"position: relative\">\n    <div class=\"verify-img-out\">\n      <div\n        class=\"verify-img-panel\"\n        :style=\"{\n          width: setSize.imgWidth,\n          height: setSize.imgHeight,\n          'background-size': setSize.imgWidth + ' ' + setSize.imgHeight,\n          'margin-bottom': vSpace + 'px',\n        }\"\n      >\n        <div v-show=\"showRefresh\" class=\"verify-refresh\" style=\"z-index: 3\" @click=\"refresh\">\n          <i class=\"iconfont icon-refresh\" />\n        </div>\n        <img\n          ref=\"canvas\"\n          :src=\"pointBackImgBase ? 'data:image/png;base64,' + pointBackImgBase : defaultImg\"\n          alt=\"\"\n          style=\"width: 100%; height: 100%; display: block\"\n          @click=\"bindingClick ? canvasClick($event) : undefined\"\n        />\n\n        <div\n          v-for=\"(tempPoint, index) in tempPoints\"\n          :key=\"index\"\n          class=\"point-area\"\n          :style=\"{\n            'background-color': '#1abd6c',\n            color: '#fff',\n            'z-index': 9999,\n            width: '20px',\n            height: '20px',\n            'text-align': 'center',\n            'line-height': '20px',\n            'border-radius': '50%',\n            position: 'absolute',\n            top: parseInt(tempPoint.y - 10) + 'px',\n            left: parseInt(tempPoint.x - 10) + 'px',\n          }\"\n        >\n          {{ index + 1 }}\n        </div>\n      </div>\n    </div>\n    <!-- 'height': this.barSize.height, -->\n    <div\n      class=\"verify-bar-area\"\n      :style=\"{\n        width: setSize.imgWidth,\n        color: this.barAreaColor,\n        'border-color': this.barAreaBorderColor,\n        'line-height': this.barSize.height,\n      }\"\n    >\n      <span class=\"verify-msg\">{{ text }}</span>\n    </div>\n  </div>\n</template>\n<script type=\"text/babel\">\n/**\n * VerifyPoints\n * @description 点选\n * */\nimport { resetSize, _code_chars, _code_color1, _code_color2 } from './../utils/util';\nimport { aesEncrypt } from './../utils/ase';\nimport { ajCaptcha, ajCaptchaCheck } from '../../../api/common';\n\nexport default {\n  name: 'VerifyPoints',\n  props: {\n    // 弹出式pop，固定fixed\n    mode: {\n      type: String,\n      default: 'fixed',\n    },\n    captchaType: {\n      type: String,\n    },\n    // 间隔\n    vSpace: {\n      type: Number,\n      default: 5,\n    },\n    imgSize: {\n      type: Object,\n      default() {\n        return {\n          width: '310px',\n          height: '155px',\n        };\n      },\n    },\n    barSize: {\n      type: Object,\n      default() {\n        return {\n          width: '310px',\n          height: '40px',\n        };\n      },\n    },\n    defaultImg: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      secretKey: '', // 后端返回的ase加密秘钥\n      checkNum: 3, // 默认需要点击的字数\n      fontPos: [], // 选中的坐标信息\n      checkPosArr: [], // 用户点击的坐标\n      num: 1, // 点击的记数\n      pointBackImgBase: '', // 后端获取到的背景图片\n      poinTextList: [], // 后端返回的点击字体顺序\n      backToken: '', // 后端返回的token值\n      setSize: {\n        imgHeight: 0,\n        imgWidth: 0,\n        barHeight: 0,\n        barWidth: 0,\n      },\n      tempPoints: [],\n      text: '',\n      barAreaColor: undefined,\n      barAreaBorderColor: undefined,\n      showRefresh: true,\n      bindingClick: true,\n    };\n  },\n  computed: {\n    resetSize() {\n      return resetSize;\n    },\n  },\n  watch: {\n    // type变化则全面刷新\n    type: {\n      immediate: true,\n      handler() {\n        this.init();\n      },\n    },\n  },\n  mounted() {\n    // 禁止拖拽\n    this.$el.onselectstart = function () {\n      return false;\n    };\n  },\n  methods: {\n    init() {\n      // 加载页面\n      this.fontPos.splice(0, this.fontPos.length);\n      this.checkPosArr.splice(0, this.checkPosArr.length);\n      this.num = 1;\n      this.getPictrue();\n      this.$nextTick(() => {\n        this.setSize = this.resetSize(this); // 重新设置宽度高度\n        this.$parent.$emit('ready', this);\n      });\n    },\n    canvasClick(e) {\n      this.checkPosArr.push(this.getMousePos(this.$refs.canvas, e));\n      if (this.num == this.checkNum) {\n        this.num = this.createPoint(this.getMousePos(this.$refs.canvas, e));\n        // 按比例转换坐标值\n        this.checkPosArr = this.pointTransfrom(this.checkPosArr, this.setSize);\n        // 等创建坐标执行完\n        setTimeout(() => {\n          // var flag = this.comparePos(this.fontPos, this.checkPosArr);\n          // 发送后端请求\n          var captchaVerification = this.secretKey\n            ? aesEncrypt(this.backToken + '---' + JSON.stringify(this.checkPosArr), this.secretKey)\n            : this.backToken + '---' + JSON.stringify(this.checkPosArr);\n          const data = {\n            captchaType: this.captchaType,\n            pointJson: this.secretKey\n              ? aesEncrypt(JSON.stringify(this.checkPosArr), this.secretKey)\n              : JSON.stringify(this.checkPosArr),\n            token: this.backToken,\n          };\n          ajCaptchaCheck(data).then((res) => {\n            if (res.repCode == '0000') {\n              this.barAreaColor = '#4cae4c';\n              this.barAreaBorderColor = '#5cb85c';\n              this.text = '验证成功';\n              this.bindingClick = false;\n              if (this.mode == 'pop') {\n                setTimeout(() => {\n                  this.$parent.clickShow = false;\n                  this.refresh();\n                }, 1500);\n              }\n              this.$parent.$emit('success', { captchaVerification });\n            } else {\n              this.$parent.$emit('error', this);\n              this.barAreaColor = '#d9534f';\n              this.barAreaBorderColor = '#d9534f';\n              this.text = '验证失败';\n              setTimeout(() => {\n                this.refresh();\n              }, 700);\n            }\n          });\n        }, 400);\n      }\n      if (this.num < this.checkNum) {\n        this.num = this.createPoint(this.getMousePos(this.$refs.canvas, e));\n      }\n    },\n\n    // 获取坐标\n    getMousePos: function (obj, e) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      return { x, y };\n    },\n    // 创建坐标点\n    createPoint: function (pos) {\n      this.tempPoints.push(Object.assign({}, pos));\n      return ++this.num;\n    },\n    refresh: function () {\n      this.tempPoints.splice(0, this.tempPoints.length);\n      this.barAreaColor = '#000';\n      this.barAreaBorderColor = '#ddd';\n      this.bindingClick = true;\n      this.fontPos.splice(0, this.fontPos.length);\n      this.checkPosArr.splice(0, this.checkPosArr.length);\n      this.num = 1;\n      this.getPictrue();\n      this.text = '验证失败';\n      this.showRefresh = true;\n    },\n\n    // 请求背景图片和验证图片\n    getPictrue() {\n      const data = {\n        captchaType: this.captchaType,\n        clientUid: localStorage.getItem('point'),\n        ts: Date.now(), // 现在的时间戳\n      };\n      ajCaptcha(data).then((res) => {\n        if (res.repCode == '0000') {\n          this.pointBackImgBase = res.repData.originalImageBase64;\n          this.backToken = res.repData.token;\n          this.secretKey = res.repData.secretKey;\n          this.poinTextList = res.repData.wordList;\n          this.text = '请依次点击【' + this.poinTextList.join(',') + '】';\n        } else {\n          this.text = res.repMsg;\n        }\n\n        // 判断接口请求次数是否失效\n        if (res.repCode == '6201') {\n          this.pointBackImgBase = null;\n        }\n      });\n    },\n    // 坐标转换函数\n    pointTransfrom(pointArr, imgSize) {\n      var newPointArr = pointArr.map((p) => {\n        const x = Math.round((310 * p.x) / parseInt(imgSize.imgWidth));\n        const y = Math.round((155 * p.y) / parseInt(imgSize.imgHeight));\n        return { x, y };\n      });\n      return newPointArr;\n    },\n  },\n};\n</script>\n"],"mappings":"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"}]}