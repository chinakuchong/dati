{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/pages/statistic/transaction/components/transaction.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/pages/statistic/transaction/components/transaction.vue","mtime":1689324015268},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/babel.config.js","mtime":1689324015052},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/.babelrc","mtime":1689324015050},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["statisticBottomTradeApi","statisticTrendApi","echartsNew","formatDate","name","components","data","grid","xl","lg","md","sm","xs","options","$timeOptions","timeVal","dataTime","list","optionData","style","height","getExcel","spinShow","created","end","Date","start","setTime","getFullYear","getMonth","getDate","mounted","getStatistics","methods","onSeach","onchangeTime","e","join","_this","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","cardLists","incons","i","wrap","_callee$","_context","prev","next","series","length","$set","export","get","stop","_x","apply","arguments","catch","$Message","error","msg","extract","dataList","filter","item","type","legend","map","col","seriesData","index","Object","keys","value","forEach","key","push","Number","itemStyle","normal","color","smooth","tooltip","trigger","axisPointer","label","backgroundColor","x","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","boundaryGap","axisLabel","interval","rotate","textStyle","yAxis","axisLine","show","axisTick","splitLine","lineStyle","excel","window","location","href","getTrend","_this2","_ref2","_callee2","_callee2$","_context2","y","_x2"],"sources":["src/pages/statistic/transaction/components/transaction.vue"],"sourcesContent":["<template>\n  <Card :bordered=\"false\" dis-hover class=\"ivu-mt-16\">\n    <div class=\"acea-row row-between-wrapper mb20\">\n      <div class=\"header-title\">\n        交易概况\n        <Poptip word-wrap width=\"500\" trigger=\"hover\" placement=\"right-start\">\n          <Icon type=\"ios-information-circle-outline\" />\n          <div slot=\"content\">\n            <div>营业额</div>\n            <div>商品支付金额、充值金额、购买付费会员金额、线下收银金额</div>\n            <br />\n            <div>交易毛利金额</div>\n            <div>交易毛利金额 = 营业额 - 支出金额</div>\n            <br />\n            <div>商品支付金额</div>\n            <div>选定条件下，用户购买商品的实际支付金额，包括微信支付、余额支付、支付宝支付、线下支付金额（拼团商品在成团之后计入，线下支付订单在后台确认支付后计入）</div>\n            <br />\n            <div>购买会员金额</div>\n            <div>选定条件下，用户成功购买付费会员的金额</div>\n            <br />\n            <div>充值金额</div>\n            <div>选定条件下，用户成功充值的金额</div>\n            <br />\n            <div>线下收银金额</div>\n            <div>选定条件下，用户在线下扫码支付的金额</div>\n            <br />\n            <div>支出金额</div>\n            <div>余额支付金额、支付佣金金额、商品退款金额</div>\n            <br />\n            <div>余额支付金额</div>\n            <div>用户下单时使用余额实际支付的金额</div>\n            <br />\n            <div>佣金支付金额</div>\n            <div>后台给推广员支付的推广佣金，以实际支付为准</div>\n            <br />\n            <div>商品退款金额</div>\n            <div>用户成功退款的商品金额</div>\n          </div>\n        </Poptip>\n      </div>\n      <div class=\"acea-row\">\n        <DatePicker\n          :editable=\"false\"\n          :clearable=\"false\"\n          @on-change=\"onchangeTime\"\n          :value=\"timeVal\"\n          format=\"yyyy/MM/dd\"\n          type=\"daterange\"\n          placement=\"bottom-start\"\n          placeholder=\"请选择时间\"\n          style=\"width: 200px\"\n          class=\"mr20\"\n          :options=\"options\"\n        ></DatePicker>\n        <Button type=\"primary\" class=\"mr20\" @click=\"onSeach\">查询</Button>\n        <Button type=\"primary\" @click=\"excel\">导出</Button>\n      </div>\n    </div>\n    <div class=\"acea-row mb20\">\n      <div class=\"infoBox acea-row mb30\" v-for=\"(item, index) in list\" :key=\"index\">\n        <div\n          class=\"iconCrl mr15\"\n          :class=\"{\n            one: index % 4 == 0,\n            two: index % 4 == 1,\n            three: index % 4 == 2,\n            four: index % 4 == 3,\n          }\"\n        >\n          <i class=\"iconfont\" :class=\"item.icon\"></i>\n        </div>\n        <div class=\"info\">\n          <span class=\"sp1\" v-text=\"item.name\"></span>\n          <span\n            class=\"sp2\"\n            v-if=\"index === list.length - 1\"\n            v-text=\"item.money ? (parseInt(item.money * 100) / 100).toFixed(2) : '0.00'\"\n          ></span>\n          <span class=\"sp2\" v-else v-text=\"item.money ? (parseInt(item.money * 100) / 100).toFixed(2) : '0.00'\"></span>\n          <span class=\"content-time spBlock\"\n            >环比增长：<i class=\"content-is\" :class=\"Number(item.rate) >= 0 ? 'up' : 'down'\">{{ item.rate }}%</i\n            ><Icon\n              :color=\"Number(item.rate) >= 0 ? '#F5222D' : '#39C15B'\"\n              :type=\"Number(item.rate) >= 0 ? 'md-arrow-dropup' : 'md-arrow-dropdown'\"\n          /></span>\n        </div>\n      </div>\n    </div>\n    <echarts-new :option-data=\"optionData\" :styles=\"style\" height=\"100%\" width=\"100%\" v-if=\"optionData\"></echarts-new>\n    <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\n  </Card>\n</template>\n\n<script>\nimport { statisticBottomTradeApi, statisticTrendApi } from '@/api/statistic';\nimport echartsNew from '@/components/echartsNew/index';\nimport { formatDate } from '@/utils/validate';\nexport default {\n  name: 'transaction',\n  components: {\n    echartsNew,\n  },\n  data() {\n    return {\n      grid: {\n        xl: 8,\n        lg: 8,\n        md: 8,\n        sm: 24,\n        xs: 24,\n      },\n      options: this.$timeOptions,\n      name: '近30天',\n      timeVal: [],\n      dataTime: '',\n      list: {},\n      optionData: {},\n      style: { height: '400px' },\n      getExcel: '',\n      spinShow: false,\n    };\n  },\n  created() {\n    const end = new Date();\n    const start = new Date();\n    start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 29)));\n    this.timeVal = [start, end];\n    this.dataTime = formatDate(start, 'yyyy/MM/dd') + '-' + formatDate(end, 'yyyy/MM/dd');\n  },\n  mounted() {\n    this.getStatistics();\n  },\n  methods: {\n    onSeach() {\n      this.getStatistics();\n    },\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e;\n      this.dataTime = this.timeVal.join('-');\n      this.name = this.dataTime;\n    },\n    // 统计\n    getStatistics() {\n      this.spinShow = true;\n      statisticBottomTradeApi({ data: this.dataTime })\n        .then(async (res) => {\n          const cardLists = res.data;\n          const incons = [\n            'iconyingyee',\n            'iconjiaoyijine',\n            'iconshangpinzhifujine',\n            'icongoumaihuiyuanjine',\n            'iconchongzhijianshu',\n            'iconxianxiashouyinjine',\n            'iconzhichujine',\n            'iconyuezhifujine',\n            'iconzhifuyongjinjine',\n            'iconshangpintuikuanjine',\n          ];\n          for (var i = 0; i < cardLists.series.length; i++) {\n            this.$set(cardLists.series[i], 'icon', incons[i]);\n          }\n          this.list = cardLists.series;\n          this.getExcel = cardLists.export;\n          this.get(cardLists);\n          this.spinShow = false;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n          this.spinShow = false;\n        });\n    },\n    get(extract) {\n      let dataList = extract.series.filter((item) => {\n        return item.type === 1;\n      });\n      let legend = dataList.map((item) => {\n        return item.name;\n      });\n      let col = ['#5B8FF9', '#5AD8A6', '#5D7092', '#F5222D', '#FFAB2B', '#B37FEB'];\n      let seriesData = [];\n      dataList.map((item, index) => {\n        let series = [];\n        Object.keys(item.value).forEach((key) => {\n          series.push(Number(item.value[key]));\n        });\n        seriesData.push({\n          name: item.name,\n          type: 'line',\n          data: series,\n          itemStyle: {\n            normal: {\n              color: col[index],\n            },\n          },\n          smooth: true,\n        });\n      });\n      this.optionData = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985',\n            },\n          },\n        },\n        legend: {\n          x: 'center',\n          data: legend,\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true,\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {},\n          },\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: true,\n          axisLabel: {\n            interval: 0,\n            rotate: 40,\n            textStyle: {\n              color: '#000000',\n            },\n          },\n          data: extract.x,\n        },\n        yAxis: {\n          type: 'value',\n          axisLine: {\n            show: false,\n          },\n          axisTick: {\n            show: false,\n          },\n          axisLabel: {\n            textStyle: {\n              color: '#7F8B9C',\n            },\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#F5F7F9',\n            },\n          },\n        },\n        series: seriesData,\n      };\n    },\n    excel() {\n      window.location.href = this.getExcel;\n    },\n    // 统计图\n    getTrend() {\n      statisticTrendApi({ data: this.dataTime })\n        .then(async (res) => {\n          let legend = res.data.series.map((item) => {\n            return item.name;\n          });\n          let xAxis = res.data.xAxis;\n          let col = ['#5B8FF9', '#5AD8A6', '#5D7092', '#5D7092'];\n          let series = [];\n          res.data.series.map((item, index) => {\n            series.push({\n              name: item.name,\n              type: 'line',\n              data: item.value,\n              itemStyle: {\n                normal: {\n                  color: col[index],\n                },\n              },\n            });\n          });\n          this.optionData = {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                label: {\n                  backgroundColor: '#6a7985',\n                },\n              },\n            },\n            legend: {\n              x: '1px',\n              y: '10px',\n              data: legend,\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true,\n            },\n            toolbox: {\n              feature: {\n                saveAsImage: {},\n              },\n            },\n            xAxis: {\n              type: 'category',\n              boundaryGap: true,\n              // axisTick:{\n              //     show:false\n              // },\n              // axisLine:{\n              //     show:false\n              // },\n              // splitLine: {\n              //     show: false\n              // },\n              axisLabel: {\n                interval: 0,\n                rotate: 40,\n                textStyle: {\n                  color: '#000000',\n                },\n              },\n              data: xAxis,\n            },\n            yAxis: {\n              type: 'value',\n              splitLine: {\n                show: false,\n              },\n              axisLine: {\n                show: false,\n              },\n            },\n            series: series,\n          };\n          // this.TrendList =\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"less\">\n.one {\n  background: #1890ff;\n}\n.two {\n  background: #00c050;\n}\n.three {\n  background: #ffab2b;\n}\n.four {\n  background: #b37feb;\n}\n.up,\n.el-icon-caret-top {\n  color: #f5222d;\n  font-size: 12px;\n  opacity: 1 !important;\n}\n\n.down,\n.el-icon-caret-bottom {\n  color: #39c15b;\n  font-size: 12px;\n}\n.curP {\n  cursor: pointer;\n}\n.header {\n  &-title {\n    font-size: 16px;\n    color: rgba(0, 0, 0, 0.85);\n  }\n  &-time {\n    font-size: 12px;\n    color: #000000;\n    opacity: 0.45;\n  }\n}\n\n.iconfont {\n  font-size: 16px;\n  color: #fff;\n}\n\n.iconCrl {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 32px;\n  opacity: 0.7;\n}\n\n.lan {\n  background: #1890ff;\n}\n\n.iconshangpinliulanliang {\n  color: #fff;\n}\n\n.infoBox {\n  width: 20%;\n  @media screen and (max-width: 1300px) {\n    width: 25%;\n  }\n  @media screen and (max-width: 1200px) {\n    width: 33%;\n  }\n  @media screen and (max-width: 900px) {\n    width: 50%;\n  }\n}\n\n.info {\n  .sp1 {\n    color: #666;\n    font-size: 14px;\n    display: block;\n  }\n  .sp2 {\n    font-weight: 400;\n    font-size: 30px;\n    color: rgba(0, 0, 0, 0.85);\n    display: block;\n  }\n  .sp3 {\n    font-size: 12px;\n    font-weight: 400;\n    color: rgba(0, 0, 0, 0.45);\n    display: block;\n  }\n}\n</style>\n"],"mappings":"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"}]}