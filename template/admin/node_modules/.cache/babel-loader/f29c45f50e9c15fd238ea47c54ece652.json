{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/pages/system/backendRouting/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/pages/system/backendRouting/index.vue","mtime":1689324015271},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/babel.config.js","mtime":1689324015052},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/.babelrc","mtime":1689324015050},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["routeCate","syncRoute","routeList","routeDet","routeSave","interfaceEditName","routeDel","routeEdit","routeCateDel","VueTreeList","Tree","TreeNode","debugging","mapState","name","components","data","value","isEdit","nameModal","debuggingModal","formValidate","grid","xl","lg","md","sm","xs","ruleValidate","title","message","trigger","max","loading","intTypeList","label","typeList","requestTypeList","contextData","treeData","undefined","buttonProps","type","size","methodColor","apiType","paramsId","watch","_watch","_defineProperty","deep","handler","newVal","oldVal","console","log","method","toUpperCase","getInterfaceList","computed","_objectSpread","labelWidth","isMobile","labelPosition","created","methods","_methods","_this","$Modal","confirm","content","onOk","then","res","$Message","success","msg","remove","onClicksss","e","methodsColor","insertBefore","params","insertAfter","moveInto","addTableData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$$table$insertA","wrap","_callee$","_context","prev","next","$table","insertAt","newRow","sent","row","setActiveCell","stop","disk_type","_this2","length","expand","i","$nextTick","children","document","querySelectorAll","click","onClick","catch","err","error","id","getRoteData","_this3","handleSubmit","_this4","_callee2","_callee2$","_context2","abrupt","warning","path","$refs","xTable","getTableData","tableData","request","resTable","response","codeTable","error_code","insertEvent","_this5","_callee3","_yield$$table$insertA2","_callee3$","_context3","attribute","must","trip","code","solution","insertRow","currRow","_this6","_callee4","record","_yield$$table$insertA3","_callee4$","_context4","Date","now","parentId","setTreeExpand","setActiveRow","removeRow","_this7","_callee5","_callee5$","_context5","add","clickMenu","_this8","cate_id","$modalForm","onDel","addFac","asyncOK","_this9","handleContextMenu","event","position","left","Number","slice","handleContextCreateFolder","handleContextCreateFile","renderContent","h","_ref","_this10","root","node","that","style","display","width","resolveComponent","marginRight","float","icon","append","clickDir","navItem","pathname","push","$set","parentKey","find","el","parent","nodeKey","index","indexOf","splice","onMouseOver","d","_this11","onCancel","onChangeName","_this12","eventType","newName","onAddNode","addNode","isLeaf","addChildren","getNewTree","vm","_dfs","oldNode","newNode","k","len","newTree"],"sources":["src/pages/system/backendRouting/index.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <div class=\"tabs\">\n        <Tabs v-model=\"apiType\">\n          <TabPane label=\"管理端接口\" name=\"adminapi\"></TabPane>\n          <TabPane label=\"用户端接口\" name=\"api\"></TabPane>\n          <TabPane label=\"客服端接口\" name=\"kefuapi\"></TabPane>\n          <TabPane label=\"对外接口\" name=\"outapi\"></TabPane>\n        </Tabs>\n      </div>\n      <div class=\"main\">\n        <div class=\"ivu-mt mr20 card-tree\">\n          <div class=\"tree\">\n            <div class=\"main-btn\">\n              <Button class=\"mb5 mr10\" style=\"flex: 1\" type=\"primary\" @click=\"clickMenu(4)\" long>新增分类</Button>\n              <Button class=\"mr10\" type=\"success\" @click=\"syncRoute()\">同步</Button>\n            </div>\n\n            <vue-tree-list\n              class=\"tree-list\"\n              ref=\"treeList\"\n              @change-name=\"onChangeName\"\n              @delete-node=\"onDel\"\n              :model=\"treeData\"\n              default-tree-node-name=\"默认文件夹\"\n              default-leaf-node-name=\"默认接口名\"\n              v-bind:default-expanded=\"false\"\n              :expand-only-one=\"true\"\n            >\n              <template v-slot:leafNameDisplay=\"slotProps\">\n                <div></div>\n                <div\n                  class=\"tree-node\"\n                  :class=\"{\n                    node: slotProps.model.method,\n                    open: formValidate.path == slotProps.model.path && formValidate.method == slotProps.model.method,\n                  }\"\n                  @click.stop=\"onClick(slotProps.model)\"\n                >\n                  <span\n                    class=\"\"\n                    :class=\"{\n                      open: formValidate.path == slotProps.model.path && formValidate.method == slotProps.model.method,\n                    }\"\n                    >{{ slotProps.model.name }}</span\n                  >\n                  <Dropdown\n                    transfer\n                    @on-click=\"\n                      (name) => {\n                        clickMenu(name, slotProps.model);\n                      }\n                    \"\n                  >\n                    <a href=\"javascript:void(0)\">\n                      <Icon class=\"add\" type=\"ios-more\" />\n                    </a>\n                    <template #list>\n                      <DropdownMenu>\n                        <DropdownItem name=\"1\" v-if=\"!slotProps.model.method\">新增接口</DropdownItem>\n                        <DropdownItem name=\"2\" v-if=\"!slotProps.model.method\">编辑分类名</DropdownItem>\n                        <DropdownItem name=\"3\">删除</DropdownItem>\n                      </DropdownMenu>\n                    </template>\n                  </Dropdown>\n                </div>\n              </template>\n              <!-- 新建文件夹 -->\n\n              <span class=\"icon\" slot=\"addTreeNodeIcon\"></span>\n              <span class=\"icon\" slot=\"addLeafNodeIcon\">\n                <!-- <Icon type=\"md-create\" /> -->\n              </span>\n              <span class=\"icon\" slot=\"editNodeIcon\">\n                <!-- <Icon type=\"md-create\" /> -->\n              </span>\n              <span class=\"icon\" slot=\"delNodeIcon\">\n                <!-- <Icon type=\"ios-cut\" /> -->\n              </span>\n              <template v-slot:treeNodeIcon=\"slotProps\">\n                <span\n                  v-if=\"slotProps.model.method\"\n                  class=\"req-method\"\n                  :style=\"{\n                    color: methodsColor(slotProps.model.method),\n                    'font-weight': slotProps.model.pid == formValidate.pid ? '500' : '500',\n                  }\"\n                  >{{ slotProps.model.method }}</span\n                >\n\n                <!-- <span v-if=\"slotProps.model.method\"></span> -->\n              </template>\n            </vue-tree-list>\n          </div>\n        </div>\n        <Card :bordered=\"false\" dis-hover class=\"ivu-mt right-card\">\n          <div class=\"data\">\n            <div class=\"eidt-sub\">\n              <div class=\"name\">\n                {{ formValidate.name }}\n              </div>\n              <div>\n                <Button type=\"info\" class=\"submission mr20\" @click=\"debugging()\">调试</Button>\n                <Button v-if=\"formValidate.id\" type=\"primary\" class=\"submission mr20\" @click=\"isEdit = !isEdit\">{{\n                  isEdit ? '返回' : '编辑'\n                }}</Button>\n                <Button v-if=\"isEdit\" type=\"primary\" class=\"submission\" @click=\"handleSubmit('formValidate')\"\n                  >保存</Button\n                >\n              </div>\n            </div>\n            <Form\n              class=\"formValidate mt20\"\n              ref=\"formValidate\"\n              :rules=\"ruleValidate\"\n              :model=\"formValidate\"\n              :label-width=\"100\"\n              :label-position=\"labelPosition\"\n              @submit.native.prevent\n            >\n              <Row :gutter=\"24\" type=\"flex\">\n                <Col span=\"24\">\n                  <div class=\"title\">接口信息</div>\n                  <FormItem label=\"接口名称：\" prop=\"name\">\n                    <Input\n                      v-if=\"isEdit\"\n                      class=\"perW20\"\n                      type=\"text\"\n                      :rows=\"4\"\n                      v-model.trim=\"formValidate.name\"\n                      placeholder=\"请输入\"\n                    />\n                    <span v-else>{{ formValidate.name || '' }}</span>\n                  </FormItem>\n                  <FormItem label=\"请求类型：\" prop=\"name\">\n                    <Select v-if=\"isEdit\" v-model=\"formValidate.method\" style=\"width: 120px\">\n                      <Option v-for=\"(item, index) in requestTypeList\" :key=\"index\" :value=\"item.value\">{{\n                        item.label\n                      }}</Option>\n                    </Select>\n                    <span v-else class=\"req-method\" :style=\"'background-color:' + methodColor\">{{\n                      formValidate.method || ''\n                    }}</span>\n                  </FormItem>\n                  <FormItem label=\"功能描述：\" prop=\"name\">\n                    <Input\n                      v-if=\"isEdit\"\n                      class=\"perW20\"\n                      type=\"textarea\"\n                      :rows=\"4\"\n                      v-model.trim=\"formValidate.describe\"\n                      placeholder=\"请输入\"\n                    />\n                    <span v-else class=\"text-area\">{{ formValidate.describe || '--' }}</span>\n                  </FormItem>\n                  <FormItem label=\"所属分类：\" prop=\"name\" v-if=\"isEdit\">\n                    <el-cascader\n                      v-model=\"formValidate.cate_id\"\n                      size=\"small\"\n                      :options=\"formValidate.cate_tree\"\n                      :props=\"{ checkStrictly: true, multiple: false, emitPath: false, value: 'id', label: 'name' }\"\n                      clearable\n                    ></el-cascader>\n                  </FormItem>\n                  <FormItem label=\"是否公共：\" prop=\"name\">\n                    <i-switch v-if=\"isEdit\" v-model=\"formValidate.type\" :true-value=\"1\" :false-value=\"0\">\n                      <template #open>\n                        <span>是</span>\n                      </template>\n                      <template #close>\n                        <span>否</span>\n                      </template>\n                    </i-switch>\n                    <span v-else class=\"text-area\">{{ formValidate.type ? '是' : '否' }}</span>\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row :gutter=\"24\" type=\"flex\">\n                <Col span=\"24\">\n                  <div class=\"title\">调用方式</div>\n                  <FormItem label=\"路由地址：\" prop=\"path\">\n                    <span>{{ formValidate.path || '' }}</span>\n                  </FormItem>\n                  <FormItem label=\"文件地址：\" prop=\"path\">\n                    <span>{{ formValidate.file_path || '' }}</span>\n                  </FormItem>\n                  <FormItem label=\"方法名：\" prop=\"path\">\n                    <span>{{ formValidate.action || '' }}</span>\n                  </FormItem>\n                  <FormItem label=\"请求参数：\">\n                    <vxe-table\n                      resizable\n                      show-overflow\n                      keep-source\n                      ref=\"xTable\"\n                      row-id=\"id\"\n                      :print-config=\"{}\"\n                      :export-config=\"{}\"\n                      :loading=\"loading\"\n                      :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n                      :data=\"formValidate.request\"\n                    >\n                      <!-- <vxe-column type=\"checkbox\" width=\"60\"></vxe-column> -->\n                      <vxe-column field=\"attribute\" width=\"300\" title=\"属性\" tree-node :edit-render=\"{}\">\n                        <template #default=\"{ row }\">\n                          <vxe-input v-if=\"isEdit\" v-model=\"row.attribute\" type=\"text\"></vxe-input>\n                          <span v-else>{{ row.attribute || '' }}</span>\n                        </template>\n                      </vxe-column>\n                      <vxe-column field=\"type\" title=\"类型\" width=\"200\" :edit-render=\"{}\">\n                        <template #default=\"{ row }\">\n                          <!-- <vxe-select v-if=\"isEdit\" v-model=\"row.type\" type=\"text\" :optionGroups=\"typeList\"></vxe-select> -->\n                          <vxe-select v-if=\"isEdit\" v-model=\"row.type\" transfer>\n                            <vxe-option\n                              v-for=\"item in typeList\"\n                              :key=\"item.value\"\n                              :value=\"item.value\"\n                              :label=\"item.label\"\n                            ></vxe-option>\n                          </vxe-select>\n                          <span v-else>{{ row.type || '' }}</span>\n\n                          <!-- <vxe-select v-model=\"row.type\">\n                      <vxe-option v-for=\"num in 12\" :key=\"num\" :value=\"num\" :label=\"num\"></vxe-option>\n                    </vxe-select> -->\n                        </template>\n                      </vxe-column>\n                      <vxe-column field=\"must\" title=\"必填\" width=\"100\" :edit-render=\"{}\">\n                        <template #default=\"{ row }\">\n                          <vxe-checkbox\n                            v-if=\"isEdit\"\n                            v-model=\"row.must\"\n                            :unchecked-value=\"'0'\"\n                            :checked-value=\"'1'\"\n                          ></vxe-checkbox>\n                          <span v-else>{{ row.must == '1' ? '是' : '否' }}</span>\n                        </template>\n                      </vxe-column>\n                      <vxe-column field=\"trip\" title=\"说明\" :edit-render=\"{}\">\n                        <template #default=\"{ row }\">\n                          <vxe-input v-if=\"isEdit\" v-model=\"row.trip\" type=\"text\"></vxe-input>\n                          <span v-else>{{ row.trip || '' }}</span>\n                        </template>\n                      </vxe-column>\n                      <vxe-column title=\"操作\" width=\"200\" v-if=\"isEdit\">\n                        <template #default=\"{ row }\">\n                          <vxe-button\n                            type=\"text\"\n                            v-if=\"row.type === 'array' || row.type === 'object'\"\n                            status=\"primary\"\n                            @click=\"insertRow(row, 'xTable')\"\n                            >插入</vxe-button\n                          >\n                          <vxe-button type=\"text\" status=\"primary\" @click=\"removeRow(row, 'xTable')\">删除</vxe-button>\n                        </template>\n                      </vxe-column>\n                    </vxe-table>\n\n                    <Button class=\"mt10\" v-if=\"isEdit\" type=\"primary\" @click=\"insertEvent('xTable')\">添加参数</Button>\n                  </FormItem>\n                  <FormItem label=\"返回参数：\">\n                    <vxe-table\n                      resizable\n                      show-overflow\n                      keep-source\n                      ref=\"resTable\"\n                      row-id=\"id\"\n                      :print-config=\"{}\"\n                      :export-config=\"{}\"\n                      :loading=\"loading\"\n                      :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n                      :data=\"formValidate.response\"\n                    >\n                      <!-- <vxe-column type=\"checkbox\" width=\"60\"></vxe-column> -->\n                      <vxe-column field=\"attribute\" title=\"属性\" width=\"300\" tree-node :edit-render=\"{}\">\n                        <template #default=\"{ row }\">\n                          <vxe-input v-if=\"isEdit\" v-model=\"row.attribute\" type=\"text\"></vxe-input>\n                          <span v-else>{{ row.attribute || '' }}</span>\n                        </template>\n                      </vxe-column>\n                      <vxe-column field=\"type\" title=\"类型\" width=\"200\" :edit-render=\"{}\">\n                        <template #default=\"{ row }\">\n                          <vxe-select v-if=\"isEdit\" v-model=\"row.type\" transfer>\n                            <vxe-option\n                              v-for=\"item in typeList\"\n                              :key=\"item.value\"\n                              :value=\"item.value\"\n                              :label=\"item.label\"\n                            ></vxe-option>\n                          </vxe-select>\n                          <span v-else>{{ row.type || '' }}</span>\n                        </template>\n                      </vxe-column>\n                      <!-- <vxe-column field=\"type\" title=\"必填\" :edit-render=\"{}\">\n                  <template #default=\"{ row }\">\n                    <vxe-checkbox v-model=\"row.must\" :unchecked-value=\"0\" :checked-value=\"1\"></vxe-checkbox\n                    >{{ row.must }}\n                  </template>\n                </vxe-column> -->\n                      <vxe-column field=\"trip\" title=\"说明\" :edit-render=\"{}\">\n                        <template #default=\"{ row }\">\n                          <vxe-input v-if=\"isEdit\" v-model=\"row.trip\" type=\"text\"></vxe-input>\n                          <span v-else>{{ row.trip || '' }}</span>\n                        </template>\n                      </vxe-column>\n                      <vxe-column title=\"操作\" width=\"200\" v-if=\"isEdit\">\n                        <template #default=\"{ row }\">\n                          <vxe-button\n                            type=\"text\"\n                            v-if=\"row.type === 'array' || row.type === 'object'\"\n                            status=\"primary\"\n                            @click=\"insertRow(row, 'resTable')\"\n                            >插入</vxe-button\n                          >\n                          <vxe-button type=\"text\" status=\"primary\" @click=\"removeRow(row, 'resTable')\">删除</vxe-button>\n                        </template>\n                      </vxe-column>\n                    </vxe-table>\n                    <Button class=\"mt10\" v-if=\"isEdit\" type=\"primary\" @click=\"insertEvent('resTable')\">添加参数</Button>\n                  </FormItem>\n                </Col>\n              </Row>\n              <Row :gutter=\"24\" type=\"flex\">\n                <Col span=\"24\">\n                  <div class=\"title\">调用示例</div>\n                  <FormItem label=\"请求数据示例：\" prop=\"request_example\">\n                    <Input\n                      v-if=\"isEdit\"\n                      class=\"perW20\"\n                      type=\"textarea\"\n                      :rows=\"4\"\n                      v-model.trim=\"formValidate.request_example\"\n                      placeholder=\"请输入\"\n                    />\n                    <span v-else class=\"text-area\">{{ formValidate.request_example || '' }}</span>\n                  </FormItem>\n                  <FormItem label=\"返回数据示例：\" prop=\"response_example\">\n                    <Input\n                      v-if=\"isEdit\"\n                      class=\"perW20\"\n                      type=\"textarea\"\n                      :rows=\"4\"\n                      v-model.trim=\"formValidate.response_example\"\n                      placeholder=\"请输入\"\n                    />\n                    <span v-else class=\"text-area\">{{ formValidate.response_example || '' }}</span>\n                  </FormItem>\n                  <FormItem label=\"错误码：\">\n                    <vxe-table\n                      resizable\n                      show-overflow\n                      keep-source\n                      ref=\"codeTable\"\n                      row-id=\"id\"\n                      is-tree-view\n                      :print-config=\"{}\"\n                      :export-config=\"{}\"\n                      :loading=\"loading\"\n                      :tree-config=\"{ rowField: 'id', parentField: 'parentId' }\"\n                      :data=\"formValidate.error_code\"\n                    >\n                      <!-- <vxe-column type=\"checkbox\" width=\"60\"></vxe-column> -->\n                      <vxe-column field=\"code\" title=\"错误码\" tree-node :edit-render=\"{}\">\n                        <template #default=\"{ row }\">\n                          <vxe-input v-if=\"isEdit\" v-model=\"row.code\" type=\"text\"></vxe-input>\n                          <span v-else>{{ row.code || '' }}</span>\n                        </template>\n                      </vxe-column>\n                      <vxe-column field=\"value\" title=\"错误码取值\" :edit-render=\"{}\">\n                        <template #default=\"{ row }\">\n                          <vxe-input v-if=\"isEdit\" v-model=\"row.value\" type=\"text\"></vxe-input>\n                          <span v-else>{{ row.value || '' }}</span>\n                        </template>\n                      </vxe-column>\n                      <vxe-column field=\"solution\" title=\"解决方案\" :edit-render=\"{}\">\n                        <template #default=\"{ row }\">\n                          <vxe-input v-if=\"isEdit\" v-model=\"row.solution\" type=\"text\"></vxe-input>\n                          <span v-else>{{ row.solution || '' }}</span>\n                        </template>\n                      </vxe-column>\n                      <vxe-column title=\"操作\" v-if=\"isEdit\">\n                        <template #default=\"{ row }\">\n                          <vxe-button type=\"text\" status=\"primary\" @click=\"removeRow(row, 'codeTable')\"\n                            >删除</vxe-button\n                          >\n                        </template>\n                      </vxe-column>\n                    </vxe-table>\n                    <Button class=\"mt10\" v-if=\"isEdit\" type=\"primary\" @click=\"insertEvent('codeTable')\"\n                      >添加参数</Button\n                    >\n                  </FormItem>\n                </Col>\n              </Row>\n              <!-- <Row :gutter=\"24\" type=\"flex\">\n              <Col span=\"24\">\n                <FormItem>\n                  <Button type=\"primary\" class=\"submission\" @click=\"handleSubmit('formValidate')\">保存</Button>\n                </FormItem>\n              </Col>\n            </Row> -->\n            </Form>\n          </div>\n          <!-- <div v-else class=\"nothing\">\n          <div class=\"box\" @click=\"clickMenu(4)\">\n            <div class=\"icon\">\n              <Icon type=\"ios-folder\" />\n            </div>\n            <div class=\"text\">新建文件</div>\n          </div>\n          <div class=\"box\" @click=\"clickMenu(1)\">\n            <div class=\"icon\">\n              <Icon type=\"logo-linkedin\" />\n            </div>\n            <div class=\"text\">新建接口</div>\n          </div>\n        </div> -->\n        </Card>\n      </div>\n    </div>\n    <Modal v-model=\"nameModal\" title=\"分组名称\" :loading=\"loading\" @on-ok=\"asyncOK\">\n      <label>分组名称：</label>\n      <Input v-model=\"value\" placeholder=\"请输入分组名称\" style=\"width: 85%\" />\n    </Modal>\n    <Drawer v-model=\"debuggingModal\" :title=\"formValidate.name\" width=\"70%\" footer-hide :loading=\"loading\">\n      <debugging\n        v-if=\"debuggingModal\"\n        :formValidate=\"formValidate\"\n        :typeList=\"intTypeList\"\n        :requestTypeList=\"requestTypeList\"\n        :apiType=\"apiType\"\n      />\n    </Drawer>\n  </div>\n</template>\n\n<script>\nimport {\n  routeCate,\n  syncRoute,\n  routeList,\n  routeDet,\n  routeSave,\n  interfaceEditName,\n  routeDel,\n  routeEdit,\n  routeCateDel,\n} from '@/api/systemBackendRouting';\nimport { VueTreeList, Tree, TreeNode } from 'vue-tree-list';\nimport debugging from './debugging.vue';\n\nimport { mapState } from 'vuex';\nexport default {\n  name: 'systemOutInterface',\n  components: {\n    VueTreeList,\n    debugging,\n  },\n  data() {\n    return {\n      value: '',\n      isEdit: false,\n      nameModal: false,\n      debuggingModal: false,\n      formValidate: {},\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      ruleValidate: {\n        title: [{ message: '请输入正确的描述 (不能多于200位数)', trigger: 'blur', max: 200 }],\n      },\n      loading: false,\n      intTypeList: [\n        {\n          value: 'string',\n          label: 'String',\n        },\n        // {\n        //   value: 'array',\n        //   label: 'Array',\n        // },\n        // {\n        //   value: 'object',\n        //   label: 'Object',\n        // },\n        {\n          value: 'number',\n          label: 'Number',\n        },\n        {\n          value: 'boolean',\n          label: 'Boolean',\n        },\n        {\n          value: 'null',\n          label: 'Null',\n        },\n        {\n          value: 'any',\n          label: 'Any',\n        },\n      ],\n      typeList: [\n        {\n          value: 'string',\n          label: 'String',\n        },\n        {\n          value: 'array',\n          label: 'Array',\n        },\n        {\n          value: 'object',\n          label: 'Object',\n        },\n        {\n          value: 'number',\n          label: 'Number',\n        },\n        {\n          value: 'boolean',\n          label: 'Boolean',\n        },\n        {\n          value: 'null',\n          label: 'Null',\n        },\n        {\n          value: 'any',\n          label: 'Any',\n        },\n      ],\n      requestTypeList: [\n        {\n          value: 'GET',\n          label: 'GET',\n        },\n        {\n          value: 'POST',\n          label: 'POST',\n        },\n        {\n          value: 'DELETE',\n          label: 'DELETE',\n        },\n        {\n          value: 'PUT',\n          label: 'PUT',\n        },\n      ],\n      contextData: null, //左侧导航右键点击是产生的数据对象\n      treeData: undefined,\n      buttonProps: {\n        type: 'default',\n        size: 'small',\n      },\n      methodColor: '#fff',\n      apiType: 'adminapi',\n      paramsId: 0,\n    };\n  },\n  watch: {\n    ['formValidate.method']: {\n      deep: true,\n      handler(newVal, oldVal) {\n        console.log(newVal);\n        if (newVal) {\n          let method = newVal.toUpperCase();\n          if (method == 'GET') {\n            this.methodColor = '#61affe';\n          } else if (method == 'POST') {\n            this.methodColor = '#49cc90';\n          } else if (method == 'PUT') {\n            this.methodColor = '#fca130';\n          } else if (method == 'DEL' || method == 'DELETE') {\n            this.methodColor = '#f93e3e';\n          }\n        }\n      },\n    },\n    apiType(newVal) {\n      if (newVal) {\n        this.getInterfaceList('one');\n      }\n    },\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : 50;\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n  },\n  created() {\n    this.getInterfaceList('one');\n  },\n  methods: {\n    syncRoute() {\n      this.$Modal.confirm({\n        title: '立即同步',\n        content: '同步之后，路由文件中新增的接口添加到接口列表中，路由文件中删除的路由会同步的在接口列表中删除',\n        onOk: () => {\n          syncRoute(this.apiType).then((res) => {\n            this.getInterfaceList('one');\n            this.$Message.success(res.msg);\n            this.$Modal.remove();\n          });\n        },\n      });\n    },\n    debugging() {\n      this.debuggingModal = true;\n    },\n    onClicksss(e) {},\n    methodsColor(newVal) {\n      let method = newVal.toUpperCase();\n      if (method == 'GET') {\n        return '#61affe';\n      } else if (method == 'POST') {\n        return '#49cc90';\n      } else if (method == 'PUT') {\n        return '#fca130';\n      } else if (method == 'DEL' || method == 'DELETE') {\n        return '#f93e3e';\n      }\n    },\n    insertBefore(params) {},\n    insertAfter(params) {},\n    moveInto(params) {},\n    async addTableData() {\n      const { row: data } = await $table.insertAt(newRow, -1);\n      await $table.setActiveCell(data, 'name');\n    },\n    getInterfaceList(disk_type) {\n      try {\n        routeList(this.apiType)\n          .then((res) => {\n            if (res.data.length) {\n              res.data[0].expand = false;\n              this.treeData = new Tree(res.data);\n              let i;\n              this.$nextTick((e) => {\n                if (disk_type) {\n                  if (\n                    res.data[0].children &&\n                    res.data[0].children[0].children &&\n                    res.data[0].children[0].children.length\n                  ) {\n                    document.querySelectorAll('.vtl-icon-caret-right')[0].click();\n                    document.querySelectorAll('.vtl-icon-caret-right')[1].click();\n                    i = res.data[0].children[0].children[0];\n                  } else {\n                    document.querySelectorAll('.vtl-icon-caret-right')[0].click();\n                    i = res.data[0].children[0];\n                  }\n                  this.onClick(i);\n                }\n              });\n            } else {\n              // this.$refs.treeList.clear();\n              this.treeData = new Tree({});\n              this.formValidate = {};\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            this.$Message.error(err);\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    onClick(params) {\n      try {\n        if (params.method) {\n          this.isEdit = false;\n          this.paramsId = params.id;\n          this.getRoteData(params.id);\n        }\n      } catch (error) {}\n    },\n    getRoteData(id) {\n      routeDet(id)\n        .then((res) => {\n          this.formValidate = res.data;\n        })\n        .catch((err) => {\n          this.$Message.error(err);\n        });\n    },\n    async handleSubmit() {\n      if (!this.formValidate.name) {\n        return this.$Message.warning('请输入接口名称');\n      } else if (!this.formValidate.method) {\n        return this.$Message.warning('请选择请求类型');\n      } else if (!this.formValidate.path) {\n        return this.$Message.warning('请输入路由地址');\n      }\n      this.formValidate.request = await this.$refs.xTable.getTableData().tableData;\n      this.formValidate.response = await this.$refs.resTable.getTableData().tableData;\n      this.formValidate.error_code = await this.$refs.codeTable.getTableData().tableData;\n      this.formValidate.apiType = this.apiType;\n      await routeSave(this.formValidate)\n        .then((res) => {\n          this.isEdit = false;\n          this.$Message.success(res.msg);\n          this.getRoteData(this.paramsId);\n        })\n        .catch((err) => {\n          this.$Message.error(err);\n        });\n    },\n    async insertEvent(type) {\n      const $table = this.$refs[type];\n      let newRow;\n      if (type == 'xTable') {\n        newRow = {\n          attribute: '',\n          type: '',\n          must: 0,\n          trip: '',\n        };\n      } else if (type == 'resTable') {\n        newRow = {\n          attribute: '',\n          type: '',\n          trip: '',\n        };\n      } else {\n        newRow = {\n          code: '',\n          value: '',\n          solution: '',\n        };\n      }\n      // $table.insert(newRow).then(({ row }) => $table.setEditRow(row, -1));\n      const { row: data } = await $table.insertAt(newRow, -1);\n      await $table.setActiveCell(data, 'name');\n    },\n    async insertRow(currRow, type) {\n      const $table = this.$refs[type];\n      // 如果 null 则插入到目标节点顶部\n      // 如果 -1 则插入到目标节点底部\n      // 如果 row 则有插入到效的目标节点该行的位置\n      let record;\n      if (type == 'xTable') {\n        record = {\n          attribute: '',\n          type: '',\n          must: 0,\n          trip: '',\n          id: Date.now(),\n          parentId: currRow.id, // 需要指定父节点，自动插入该节点中\n        };\n      } else if (type == 'resTable') {\n        record = {\n          attribute: '',\n          type: '',\n          trip: '',\n          id: Date.now(),\n          parentId: currRow.id, // 需要指定父节点，自动插入该节点中\n        };\n      } else {\n        record = {\n          code: '',\n          value: '',\n          solution: '',\n          id: Date.now(),\n          parentId: currRow.id, // 需要指定父节点，自动插入该节点中\n        };\n      }\n      const { row: newRow } = await $table.insertAt(record, -1);\n      await $table.setTreeExpand(currRow, true); // 将父节点展开\n      await $table.setActiveRow(newRow); // 插入子节点\n    },\n    async removeRow(row, type) {\n      const $table = this.$refs[type];\n      await $table.remove(row);\n    },\n    // 修改名字\n    add() {\n      this.value = '';\n      this.formValidate.id = 0;\n      this.nameModal = true;\n    },\n    // 点击菜单\n    clickMenu(name, params) {\n      if (name == 1) {\n        this.formValidate = {};\n        this.formValidate.cate_id = params ? params.id : 0;\n        this.formValidate.id = 0;\n        this.isEdit = true;\n      } else if (name == 2) {\n        // this.value = params.name || '';\n        // this.formValidate.cate_id = params ? params.id : 0;\n        // this.nameModal = true;\n        // this.onEdit(params);\n        this.$modalForm(routeEdit(params.id, this.apiType)).then(() => this.getInterfaceList());\n      } else if (name == 3) {\n        this.onDel(params);\n      } else if (name == 4) {\n        // this.add();\n        this.$modalForm(routeCate(this.apiType)).then(() => this.getInterfaceList());\n      }\n    },\n\n    addFac(params) {\n      this.formValidate = {\n        id: params ? params.id : 0,\n      };\n      this.isEdit = true;\n    },\n    asyncOK() {\n      let data = {\n        id: this.formValidate.id || 0,\n        type: 0,\n        name: this.value,\n      };\n      routeSave(data)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.getInterfaceList();\n        })\n        .catch((err) => {\n          this.$Message.error(err);\n        });\n    },\n    //侧边栏右键点击事件\n    handleContextMenu(data, event, position) {\n      position.left = Number(position.left.slice(0, -2)) + 75 + 'px';\n      this.contextData = data;\n    },\n    handleContextCreateFolder() {},\n    handleContextCreateFile() {},\n    // 自定义显示\n    renderContent(h, { root, node, data }) {\n      let that = this;\n      return h(\n        'span',\n        {\n          style: {\n            display: 'inline-block',\n            width: '100%',\n          },\n        },\n        [\n          h('span', [\n            h(resolveComponent('Icon'), {\n              type: 'ios-paper-outline',\n              style: {\n                marginRight: '8px',\n              },\n            }),\n            h('span', data.title),\n          ]),\n          h(\n            'span',\n            {\n              style: {\n                display: 'inline-block',\n                float: 'right',\n                marginRight: '32px',\n              },\n            },\n            [\n              h(resolveComponent('Button'), {\n                ...this.buttonProps,\n                icon: 'ios-add',\n                style: {\n                  marginRight: '8px',\n                },\n                onClick: () => {\n                  this.append(data);\n                },\n              }),\n              h(resolveComponent('Button'), {\n                ...this.buttonProps,\n                icon: 'ios-remove',\n                onClick: () => {\n                  this.remove(root, node, data);\n                },\n              }),\n            ],\n          ),\n        ],\n      );\n    },\n    /**\n     * 侧边栏点击事件\n     * @param {Object} data\n     */\n    clickDir(data, root, node) {\n      let that = this;\n      that.navItem = data;\n      that.pathname = data.pathname;\n    },\n    append(data) {\n      const children = data.children || [];\n      children.push({\n        title: 'appended node',\n        expand: true,\n      });\n      this.$set(data, 'children', children);\n    },\n    remove(root, node, data) {\n      const parentKey = root.find((el) => el === node).parent;\n      const parent = root.find((el) => el.nodeKey === parentKey).node;\n      const index = parent.children.indexOf(data);\n      parent.children.splice(index, 1);\n    },\n    onMouseOver(root, node, data, e, d) {\n      console.log(root, node, data);\n    },\n    onMouseOver(root, node, data, e, d) {\n      console.log(root, node, data, e, d);\n    },\n    //\n    onDel(node) {\n      let method = node.cate_id ? routeDel : routeCateDel;\n      this.$Modal.confirm({\n        title: '警告',\n        content: '<p>删除后无法恢复，请确认后删除！</p>',\n        onOk: () => {\n          method(node.id)\n            .then((res) => {\n              this.$Message.success(res.msg);\n              node.remove();\n            })\n            .catch((err) => {\n              this.$Message.error(err);\n            });\n        },\n        onCancel: () => {},\n      });\n    },\n\n    onChangeName(params) {\n      if (params.eventType == 'blur') {\n        let data = {\n          name: params.newName,\n          id: params.id,\n        };\n        interfaceEditName(data)\n          .then((res) => {\n            this.$Message.success(res.msg);\n          })\n          .catch((err) => {\n            this.$Message.error(err);\n          });\n      }\n    },\n\n    onAddNode(params) {\n      // this.$router.push({\n      //   path: '/admin/setting/system_out_interface/add',\n      //   query: {\n      //     pid: params.pid,\n      //   },\n      // });\n    },\n\n    addNode() {\n      var node = new TreeNode({ name: 'new node', isLeaf: false });\n      if (!this.data.children) this.data.children = [];\n      this.data.addChildren(node);\n    },\n\n    getNewTree() {\n      var vm = this;\n      function _dfs(oldNode) {\n        var newNode = {};\n\n        for (var k in oldNode) {\n          if (k !== 'children' && k !== 'parent') {\n            newNode[k] = oldNode[k];\n          }\n        }\n\n        if (oldNode.children && oldNode.children.length > 0) {\n          newNode.children = [];\n          for (var i = 0, len = oldNode.children.length; i < len; i++) {\n            newNode.children.push(_dfs(oldNode.children[i]));\n          }\n        }\n        return newNode;\n      }\n\n      vm.newTree = _dfs(vm.data);\n    },\n  },\n};\n</script>\n\n<style lang=\"stylus\" scoped>\n.reset {\n  margin-left: 10px;\n}\n.card-tree {\n   background: #fff;\n   height: 72px;\n   box-sizing: border-box;\n   overflow-x: scroll; /* 设置溢出滚动 */\n   white-space: nowrap;\n   overflow-y: hidden;\n   /* 隐藏滚动条 */\n   border-radius: 4px;\n   scrollbar-width: none; /* firefox */\n   -ms-overflow-style: none; /* IE 10+ */\n}\n.card-tree::-webkit-scrollbar {\n    display: none; /* Chrome Safari */\n}\n.tabs{\n  background: #fff;\n  padding-top: 10px;\n  border-radius: 5px 5px 0 0;\n}\n.main {\n  width: 100%;\n  display: flex;\n  .main-btn {\n    display:flex;\n    position: sticky;\n    padding: 15px 15px 0 15px;\n    width: 100%;\n    background: #fff;\n    top: 0px;\n    background-color: rgba(255, 255, 255, 0.6);\n    backdrop-filter: blur(4px);\n  }\n  .card-tree{\n    width: 290px;\n    height: calc(100vh - 115px);\n    overflow-y: scroll;\n  }\n  >>> .tree {\n    .tree-list{\n      margin-left:10px;\n      padding: 0 15px;\n      margin-top: 10px;\n    }\n    .vtl-caret{\n      padding-right: 2px;\n    }\n    .req-method {\n      display:block;\n      padding: 0px 2px;\n      font-size: 13px;\n      line-height: 13px;\n      margin-right: 5px;\n      border-radius: 4px;\n\n      text-transform: uppercase;\n    }\n\n    .tree-node {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      cursor: pointer;\n      // width:200px;\n      padding: 3px 7px 3px 0;\n    }\n    .node{\n      padding:3px 2px 3px 0px;\n    }\n    .open {\n      // background-color: #fff1ef;\n      font-weight: 500;\n      color: #333;\n    }\n  }\n\n  >>> .vtl-node-main .vtl-operation {\n    position: absolute;\n    right: 20px;\n  }\n\n  >>> .vtl-node-content {\n    width: 100%;\n  }\n\n  .pop-menu {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  >>> .vtl-node-content .add {\n    display: none;\n    margin-right: 10px;\n  }\n\n  >>> .vtl-node-content:hover .add {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    width: 18px;\n    height: 18px;\n  }\n\n  >>> .vtl-node-content:hover .add:hover {\n    background-color: #fff;\n\n    .pop-menu {\n      font-size: 16px;\n    }\n  }\n  >>> .vtl-node-main{\n    padding:0;\n  }\n  >>> .line1 {\n    display: table-caption;\n    white-space: nowrap;\n    width: 120px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  >>> .ivu-form-item{\n    margin-bottom: 10px;\n  }\n  .right-card {\n    flex: 1;\n    max-height: calc(100vh - 115px);\n    overflow-y: scroll;\n  }\n\n  .data {\n    flex: 1;\n\n    .req-method {\n      text-transform: uppercase;\n      border-radius: 4px;\n      color: #fff;\n      padding: 3px 7px;\n    }\n\n    .eidt-sub {\n      display: flex;\n      justify-content: space-between;\n\n      .name {\n        font-size: 20px;\n        font-weight: 500;\n      }\n    }\n\n    .title {\n      font-size: 16px;\n      font-weight: 500;\n      margin-bottom: 15px;\n    }\n\n    .perW20 {\n      width: 500px;\n    }\n\n    .text-area {\n      white-space: pre-wrap;\n      word-break: break-word;\n    }\n  }\n\n  >>> .ivu-tree-title {\n    width: 100% !important;\n  }\n  >>> .vtl-tree-margin{\n    margin-left: 15px;\n  }\n  >>> .ivu-btn-icon-only.ivu-btn-small {\n    width: 28px;\n  }\n  >>> .tree-node > span{\n    font-size: 14px\n  }\n  >>> .tree-node.node > span{\n    font-size: 13px\n  }\n  .nothing {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 800px;\n\n    .box:hover {\n      border: 1px solid pink;\n    }\n\n    .box {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      width: 150px;\n      height: 200px;\n      margin: 0 20px;\n      border-radius: 10px;\n      cursor: pointer;\n      overflow: hidden;\n      border: 1px solid #fff;\n\n      .icon {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        height: 150px;\n        font-size: 40px;\n        color: #2d8cf0;\n        background: #f1f1f1;\n      }\n\n      .text {\n        width: 100%;\n        height: 50px;\n        background: #ddd;\n        text-align: center;\n        line-height: 50px;\n        font-size: 14px;\n        font-weight: 500;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"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"}]}