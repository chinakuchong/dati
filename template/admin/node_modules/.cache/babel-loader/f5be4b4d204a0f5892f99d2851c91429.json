{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/components/freightTemplate/city.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/components/freightTemplate/city.vue","mtime":1689324015146},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/babel.config.js","mtime":1689324015052},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/.babelrc","mtime":1689324015050},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IHRlbXBsYXRlc0NpdHlMaXN0QXBpIH0gZnJvbSAnQC9hcGkvc2V0dGluZyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnY2l0eScsCiAgcHJvcHM6IHsKICAgIHR5cGU6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9LAogICAgc2VsZWN0QXJyOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBbXQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlTc2VsZWN0OiBmYWxzZSwKICAgICAgYWRkcmVzc01vZGFsOiBmYWxzZSwKICAgICAgY2l0eUxpc3Q6IFtdLAogICAgICBhY3RpdmVDaXR5OiAtMSwKICAgICAgbG9hZGluZzogZmFsc2UKICAgIH07CiAgfSwKICBjb21wdXRlZDoge30sCiAgbWV0aG9kczogewogICAgZW50ZXI6IGZ1bmN0aW9uIGVudGVyKGluZGV4KSB7CiAgICAgIHRoaXMuYWN0aXZlQ2l0eSA9IGluZGV4OwogICAgfSwKICAgIGxlYXZlOiBmdW5jdGlvbiBsZWF2ZSgpIHsKICAgICAgdGhpcy5hY3RpdmVDaXR5ID0gbnVsbDsKICAgIH0sCiAgICBnZXRDaXR5TGlzdDogZnVuY3Rpb24gZ2V0Q2l0eUxpc3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIHRlbXBsYXRlc0NpdHlMaXN0QXBpKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIF90aGlzLnNlbGVjdEFyciA9IFtdOwogICAgICAgIHJlcy5kYXRhLmZvckVhY2goZnVuY3Rpb24gKGVsLCBpbmRleCwgYXJyKSB7CiAgICAgICAgICBlbC5pc1Nob3cgPSB0cnVlOwogICAgICAgICAgZWwuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQsIGopIHsKICAgICAgICAgICAgY2hpbGQuaXNTaG93ID0gdHJ1ZTsKICAgICAgICAgICAgaWYgKF90aGlzLnNlbGVjdEFyci5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgX3RoaXMuc2VsZWN0QXJyLmZvckVhY2goZnVuY3Rpb24gKHNlbCwgc2luZGV4KSB7CiAgICAgICAgICAgICAgICBzZWwuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoc2l0ZW0sIHNqKSB7CiAgICAgICAgICAgICAgICAgIGlmIChjaGlsZC5jaXR5X2lkID09IHNpdGVtLmNpdHlfaWQpIHsKICAgICAgICAgICAgICAgICAgICBjaGlsZC5pc1Nob3cgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICAgIHJlcy5kYXRhLmZvckVhY2goZnVuY3Rpb24gKGVsLCBpbmRleCwgYXJyKSB7CiAgICAgICAgICB2YXIgbnVtID0gMDsKICAgICAgICAgIHZhciBvbGROdW0gPSAwOwogICAgICAgICAgZWwuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQsIGopIHsKICAgICAgICAgICAgaWYgKCFjaGlsZC5pc1Nob3cpIHsKICAgICAgICAgICAgICBudW0rKzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBvbGROdW0rKzsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgICBpZiAobnVtID09IGVsLmNoaWxkcmVuLmxlbmd0aCkgewogICAgICAgICAgICBlbC5pc1Nob3cgPSBmYWxzZTsKICAgICAgICAgIH0KICAgICAgICAgIGVsLmNoaWxkTnVtID0gb2xkTnVtOwogICAgICAgIH0pOwogICAgICAgIF90aGlzLmNpdHlMaXN0ID0gcmVzLmRhdGE7CiAgICAgIH0pOwogICAgfSwKICAgIC8qKgogICAgICog5YWo6YCJ5oiW6ICF5Y+N6YCJCiAgICAgKiBAcGFyYW0gY2hlY2tlZAogICAgICovCiAgICBhbGxDaGVja2JveDogZnVuY3Rpb24gYWxsQ2hlY2tib3goKSB7CiAgICAgIHZhciB0aGF0ID0gdGhpcywKICAgICAgICBjaGVja2VkID0gdGhpcy5pU3NlbGVjdDsKICAgICAgdGhhdC5jaXR5TGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBrZXkpIHsKICAgICAgICB0aGF0LiRzZXQodGhhdC5jaXR5TGlzdFtrZXldLCAnY2hlY2tlZCcsIGNoZWNrZWQpOwogICAgICAgIGlmIChjaGVja2VkKSB7CiAgICAgICAgICB0aGF0LiRzZXQodGhhdC5jaXR5TGlzdFtrZXldLCAnY291bnQnLCB0aGF0LmNpdHlMaXN0W2tleV0uY2hpbGRyZW4ubGVuZ3RoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhhdC4kc2V0KHRoYXQuY2l0eUxpc3Rba2V5XSwgJ2NvdW50JywgMCk7CiAgICAgICAgfQogICAgICAgIHRoYXQuY2l0eUxpc3Rba2V5XS5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uICh2YWwsIGspIHsKICAgICAgICAgIHRoYXQuJHNldCh0aGF0LmNpdHlMaXN0W2tleV0uY2hpbGRyZW5ba10sICdjaGVja2VkJywgY2hlY2tlZCk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICAvLyB0aGlzLnJlbmRlcigpOwogICAgfSwKICAgIC8vIOa4heepuu+8mwogICAgZW1wdHk6IGZ1bmN0aW9uIGVtcHR5KCkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHRoYXQuY2l0eUxpc3QuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSwga2V5KSB7CiAgICAgICAgdGhhdC4kc2V0KHRoYXQuY2l0eUxpc3Rba2V5XSwgJ2NoZWNrZWQnLCBmYWxzZSk7CiAgICAgICAgdGhhdC5jaXR5TGlzdFtrZXldLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKHZhbCwgaykgewogICAgICAgICAgdGhhdC4kc2V0KHRoYXQuY2l0eUxpc3Rba2V5XS5jaGlsZHJlbltrXSwgJ2NoZWNrZWQnLCBmYWxzZSk7CiAgICAgICAgfSk7CiAgICAgICAgdGhhdC4kc2V0KHRoYXQuY2l0eUxpc3Rba2V5XSwgJ2NvdW50JywgMCk7CiAgICAgIH0pOwogICAgICB0aGlzLmlTc2VsZWN0ID0gZmFsc2U7CiAgICB9LAogICAgLyoqCiAgICAgKiDngrnlh7vnnIEKICAgICAqIEBwYXJhbSBpbmRleAogICAgICovCiAgICBjaGVja2VkQ2xpY2s6IGZ1bmN0aW9uIGNoZWNrZWRDbGljayhpbmRleCkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIGlmICh0aGF0LmNpdHlMaXN0W2luZGV4XS5jaGVja2VkKSB7CiAgICAgICAgdGhhdC4kc2V0KHRoYXQuY2l0eUxpc3RbaW5kZXhdLCAnY291bnQnLCB0aGF0LmNpdHlMaXN0W2luZGV4XS5jaGlsZE51bSk7CiAgICAgICAgdGhhdC5jaXR5TGlzdFtpbmRleF0uY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoaXRlbSwga2V5KSB7CiAgICAgICAgICB0aGF0LiRzZXQodGhhdC5jaXR5TGlzdFtpbmRleF0uY2hpbGRyZW5ba2V5XSwgJ2NoZWNrZWQnLCB0cnVlKTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGF0LiRzZXQodGhhdC5jaXR5TGlzdFtpbmRleF0sICdjb3VudCcsIDApOwogICAgICAgIHRoYXQuJHNldCh0aGF0LmNpdHlMaXN0W2luZGV4XSwgJ2NoZWNrZWQnLCBmYWxzZSk7CiAgICAgICAgdGhhdC5jaXR5TGlzdFtpbmRleF0uY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoaXRlbSwga2V5KSB7CiAgICAgICAgICB0aGF0LiRzZXQodGhhdC5jaXR5TGlzdFtpbmRleF0uY2hpbGRyZW5ba2V5XSwgJ2NoZWNrZWQnLCBmYWxzZSk7CiAgICAgICAgfSk7CiAgICAgICAgdGhhdC5pU3NlbGVjdCA9IGZhbHNlOwogICAgICB9CiAgICAgIC8vIHRoaXMucmVuZGVyKCk7CiAgICB9LAoKICAgIC8qKgogICAgICog54K55Ye75biC5Yy6CiAgICAgKiBAcGFyYW0gaW5kZXgKICAgICAqIEBwYXJhbSBpbmQKICAgICAqLwogICAgcHJpbWFyeTogZnVuY3Rpb24gcHJpbWFyeShpbmRleCwgaW5kKSB7CiAgICAgIHZhciBjaGVja2VkID0gZmFsc2UsCiAgICAgICAgY291bnQgPSAwOwogICAgICB0aGlzLmNpdHlMaXN0W2luZGV4XS5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBrZXkpIHsKICAgICAgICBpZiAoaXRlbS5jaGVja2VkKSB7CiAgICAgICAgICBjaGVja2VkID0gdHJ1ZTsKICAgICAgICAgIGNvdW50Kys7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy4kc2V0KHRoaXMuY2l0eUxpc3RbaW5kZXhdLCAnY291bnQnLCBjb3VudCk7CiAgICAgIHRoaXMuJHNldCh0aGlzLmNpdHlMaXN0W2luZGV4XSwgJ2NoZWNrZWQnLCBjaGVja2VkKTsKICAgICAgLy8gdGhpcy5yZW5kZXIoKTsKICAgIH0sCiAgICAvLyDnoa7lrpo7CiAgICBjb25maXJtOiBmdW5jdGlvbiBjb25maXJtKCkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIC8vIOiiq+mAieS4reeahOecgeW4gu+8mwogICAgICB2YXIgc2VsZWN0TGlzdCA9IFtdOwogICAgICB0aGF0LmNpdHlMaXN0LmZvckVhY2goZnVuY3Rpb24gKGl0ZW0sIGtleSkgewogICAgICAgIHZhciBkYXRhID0ge307CiAgICAgICAgaWYgKGl0ZW0uY2hlY2tlZCkgewogICAgICAgICAgZGF0YSA9IHsKICAgICAgICAgICAgbmFtZTogaXRlbS5uYW1lLAogICAgICAgICAgICBjaXR5X2lkOiBpdGVtLmNpdHlfaWQsCiAgICAgICAgICAgIGNoaWxkcmVuOiBbXQogICAgICAgICAgfTsKICAgICAgICB9CiAgICAgICAgdGhhdC5jaXR5TGlzdFtrZXldLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGksIGspIHsKICAgICAgICAgIGlmIChpLmNoZWNrZWQpIHsKICAgICAgICAgICAgZGF0YS5jaGlsZHJlbi5wdXNoKHsKICAgICAgICAgICAgICBjaXR5X2lkOiBpLmNpdHlfaWQKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgaWYgKGRhdGEuY2l0eV9pZCAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICBzZWxlY3RMaXN0LnB1c2goZGF0YSk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgaWYgKHNlbGVjdExpc3QubGVuZ3RoID09PSAwKSB7CiAgICAgICAgcmV0dXJuIHRoYXQuJE1lc3NhZ2UuZXJyb3IoJ+iHs+WwkemAieaLqeS4gOS4quecgeS7veaIluiAheWfjuW4gicpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJGVtaXQoJ3NlbGVjdENpdHknLCBzZWxlY3RMaXN0LCB0aGlzLnR5cGUpOwogICAgICAgIHRoYXQuYWRkcmVzc01vZGFsID0gZmFsc2U7CiAgICAgICAgdGhpcy5jaXR5TGlzdCA9IFtdOwogICAgICB9CiAgICAgIC8vIHBhcmVudC5zZWxlY3RDaXR5KHNlbGVjdExpc3QsdHlwZSk7CiAgICAgIC8vIHZhciBpbmRleCA9IHBhcmVudC5sYXllci5nZXRGcmFtZUluZGV4KHdpbmRvdy5uYW1lKTsKICAgICAgLy8gcGFyZW50LmxheWVyLmNsb3NlKGluZGV4KTsKICAgIH0sCiAgICBjbG9zZTogZnVuY3Rpb24gY2xvc2UoKSB7CiAgICAgIHRoaXMuYWRkcmVzc01vZGFsID0gZmFsc2U7CiAgICAgIHRoaXMuY2l0eUxpc3QgPSBbXTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyB0aGlzLmdldENpdHlMaXN0KCk7CiAgfQp9Ow=="},{"version":3,"names":["mapState","templatesCityListApi","name","props","type","Number","default","selectArr","Array","data","iSselect","addressModal","cityList","activeCity","loading","computed","methods","enter","index","leave","getCityList","_this","then","res","forEach","el","arr","isShow","children","child","j","length","sel","sindex","sitem","sj","city_id","num","oldNum","childNum","allCheckbox","that","checked","item","key","$set","val","k","empty","checkedClick","primary","ind","count","confirm","selectList","i","push","undefined","$Message","error","$emit","close","mounted"],"sources":["src/components/freightTemplate/city.vue"],"sourcesContent":["<template>\n  <div>\n    <Modal v-model=\"addressModal\" title=\"选择可配送区域\" width=\"50%\" class=\"modal\" :mask=\"true\">\n      <Row :gutter=\"24\" type=\"flex\">\n        <Col :xl=\"24\" :lg=\"24\" :md=\"24\" :sm=\"24\" :xs=\"24\" class=\"item\">\n          <div class=\"acea-row row-right row-middle\">\n            <Checkbox v-model=\"iSselect\" @on-change=\"allCheckbox\">全选</Checkbox>\n            <div class=\"empty\" @click=\"empty\">清空</div>\n          </div>\n        </Col>\n      </Row>\n      <Row :gutter=\"24\" type=\"flex\" :loading=\"loading\">\n        <Col\n          :xl=\"6\"\n          :lg=\"6\"\n          :md=\"6\"\n          :sm=\"8\"\n          :xs=\"6\"\n          class=\"item\"\n          v-for=\"(item, index) in cityList\"\n          :key=\"index\"\n          v-if=\"item.isShow\"\n        >\n          <div @mouseenter=\"enter(index)\" @mouseleave=\"leave()\">\n            <Checkbox v-model=\"item.checked\" :label=\"item.name\" @on-change=\"checkedClick(index)\">{{\n              item.name\n            }}</Checkbox\n            ><span class=\"red\">({{ (item.count || 0) + '/' + item.childNum }})</span>\n            <div class=\"city\" v-show=\"activeCity === index\">\n              <div class=\"checkBox\">\n                <div class=\"arrow\"></div>\n                <div>\n                  <Checkbox\n                    v-model=\"city.checked\"\n                    :label=\"city.name\"\n                    @on-change=\"primary(index, indexn)\"\n                    class=\"itemn\"\n                    v-for=\"(city, indexn) in item.children\"\n                    :key=\"indexn\"\n                    v-show=\"city.isShow\"\n                    >{{ city.name }}</Checkbox\n                  >\n                </div>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <div slot=\"footer\">\n        <Button @click=\"close\">取消</Button>\n        <Button type=\"primary\" @click=\"confirm\">确定</Button>\n      </div>\n      <Spin size=\"large\" fix v-if=\"loading\"></Spin>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport { templatesCityListApi } from '@/api/setting';\nexport default {\n  name: 'city',\n  props: {\n    type: {\n      type: Number,\n      default: 0,\n    },\n    selectArr: {\n      type: Array,\n      default: [],\n    },\n  },\n  data() {\n    return {\n      iSselect: false,\n      addressModal: false,\n      cityList: [],\n      activeCity: -1,\n      loading: false,\n    };\n  },\n  computed: {},\n  methods: {\n    enter(index) {\n      this.activeCity = index;\n    },\n    leave() {\n      this.activeCity = null;\n    },\n    getCityList() {\n      this.loading = true;\n      templatesCityListApi().then((res) => {\n        this.loading = false;\n        this.selectArr = [];\n        res.data.forEach((el, index, arr) => {\n          el.isShow = true;\n          el.children.forEach((child, j) => {\n            child.isShow = true;\n            if (this.selectArr.length > 0) {\n              this.selectArr.forEach((sel, sindex) => {\n                sel.children.forEach((sitem, sj) => {\n                  if (child.city_id == sitem.city_id) {\n                    child.isShow = false;\n                  }\n                });\n              });\n            }\n          });\n        });\n        res.data.forEach((el, index, arr) => {\n          let num = 0;\n          let oldNum = 0;\n          el.children.forEach((child, j) => {\n            if (!child.isShow) {\n              num++;\n            } else {\n              oldNum++;\n            }\n          });\n          if (num == el.children.length) {\n            el.isShow = false;\n          }\n          el.childNum = oldNum;\n        });\n        this.cityList = res.data;\n      });\n    },\n    /**\n     * 全选或者反选\n     * @param checked\n     */\n    allCheckbox: function () {\n      let that = this,\n        checked = this.iSselect;\n      that.cityList.forEach(function (item, key) {\n        that.$set(that.cityList[key], 'checked', checked);\n        if (checked) {\n          that.$set(that.cityList[key], 'count', that.cityList[key].children.length);\n        } else {\n          that.$set(that.cityList[key], 'count', 0);\n        }\n        that.cityList[key].children.forEach(function (val, k) {\n          that.$set(that.cityList[key].children[k], 'checked', checked);\n        });\n      });\n      // this.render();\n    },\n    // 清空；\n    empty() {\n      let that = this;\n      that.cityList.forEach(function (item, key) {\n        that.$set(that.cityList[key], 'checked', false);\n        that.cityList[key].children.forEach(function (val, k) {\n          that.$set(that.cityList[key].children[k], 'checked', false);\n        });\n        that.$set(that.cityList[key], 'count', 0);\n      });\n      this.iSselect = false;\n    },\n    /**\n     * 点击省\n     * @param index\n     */\n    checkedClick: function (index) {\n      let that = this;\n      if (that.cityList[index].checked) {\n        that.$set(that.cityList[index], 'count', that.cityList[index].childNum);\n        that.cityList[index].children.forEach(function (item, key) {\n          that.$set(that.cityList[index].children[key], 'checked', true);\n        });\n      } else {\n        that.$set(that.cityList[index], 'count', 0);\n        that.$set(that.cityList[index], 'checked', false);\n        that.cityList[index].children.forEach(function (item, key) {\n          that.$set(that.cityList[index].children[key], 'checked', false);\n        });\n        that.iSselect = false;\n      }\n      // this.render();\n    },\n    /**\n     * 点击市区\n     * @param index\n     * @param ind\n     */\n    primary: function (index, ind) {\n      let checked = false,\n        count = 0;\n      this.cityList[index].children.forEach(function (item, key) {\n        if (item.checked) {\n          checked = true;\n          count++;\n        }\n      });\n      this.$set(this.cityList[index], 'count', count);\n      this.$set(this.cityList[index], 'checked', checked);\n      // this.render();\n    },\n    // 确定;\n    confirm() {\n      let that = this;\n      // 被选中的省市；\n      let selectList = [];\n      that.cityList.forEach(function (item, key) {\n        let data = {};\n        if (item.checked) {\n          data = {\n            name: item.name,\n            city_id: item.city_id,\n            children: [],\n          };\n        }\n        that.cityList[key].children.forEach(function (i, k) {\n          if (i.checked) {\n            data.children.push({\n              city_id: i.city_id,\n            });\n          }\n        });\n        if (data.city_id !== undefined) {\n          selectList.push(data);\n        }\n      });\n      if (selectList.length === 0) {\n        return that.$Message.error('至少选择一个省份或者城市');\n      } else {\n        this.$emit('selectCity', selectList, this.type);\n        that.addressModal = false;\n        this.cityList = [];\n      }\n      // parent.selectCity(selectList,type);\n      // var index = parent.layer.getFrameIndex(window.name);\n      // parent.layer.close(index);\n    },\n    close() {\n      this.addressModal = false;\n      this.cityList = [];\n    },\n  },\n  mounted() {\n    // this.getCityList();\n  },\n};\n</script>\n\n<style scoped lang=\"stylus\">\n.modal .item {\n  margin-bottom: 20px;\n}\n\n.modal .item .city {\n  position: absolute;\n  z-index: 9;\n  top: 17px;\n  width: 100%;\n  padding-top: 18px;\n}\n\n.modal .item .city .checkBox {\n  width: 97%;\n  padding: 10px;\n  border: 1px solid #eee;\n  background-color: #fff;\n  max-height: 100px;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n.modal .item .city .checkBox .arrow {\n  position: absolute;\n  top: 3px;\n  width: 0;\n  height: 0;\n  border: 8px solid transparent;\n  border-bottom-color: #ddd;\n}\n\n.modal .item .city .checkBox .arrow:before {\n  position: absolute;\n  bottom: -8px;\n  right: -7px;\n  content: '';\n  width: 0;\n  height: 0;\n  border: 7px solid transparent;\n  border-bottom-color: #fff;\n}\n\n.modal .item .city .checkBox .itemn {\n  margin-bottom: 10px;\n}\n\n.radio {\n  padding: 5px 0;\n  font-size: 14px !important;\n}\n\n.red {\n  color: #ff0000;\n}\n\n.empty {\n  cursor: pointer;\n}\n</style>\n"],"mappings":"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"}]}