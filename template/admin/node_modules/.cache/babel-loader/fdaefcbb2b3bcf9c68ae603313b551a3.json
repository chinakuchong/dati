{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/pages/setting/systemRole/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/pages/setting/systemRole/index.vue","mtime":1689324015263},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/babel.config.js","mtime":1689324015052},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/.babelrc","mtime":1689324015050},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapState","roleListApi","roleSetStatusApi","menusListApi","roleCreatApi","roleInfoApi","name","data","spinShow","modals","total","grid","xl","lg","md","sm","xs","loading","formValidate","status","role_name","page","limit","columns1","title","key","width","minWidth","tooltip","slot","fixed","tableList","formInline","checked_menus","id","menusList","modelTit","ruleValidate","required","message","trigger","type","computed","_objectSpread","labelWidth","isMobile","undefined","labelPosition","labelPosition2","created","getList","methods","add","getmenusList","del","row","tit","num","_this","delfromData","url","concat","method","ids","$modalSure","then","res","$Message","success","msg","splice","catch","error","onchangeIsShow","_this2","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","_x","apply","arguments","_this3","_ref2","_callee2","_callee2$","_context2","list","count","_x2","pageChange","index","userSearchs","edit","rows","getIofo","_this4","_ref3","_callee3","_callee3$","_context3","menus","map","item","children","length","v","expand","_x3","_this5","_ref4","_callee4","_callee4$","_context4","role","rules","tidyRes","_x4","_this6","menu","checked","disableCheckbox","push","initMenu","$set","_this7","checkMenus","child","indexOf","String","handleSubmit","_this8","$refs","validate","valid","tree","getCheckedAndIndeterminateNodes","node","warning","_ref5","_callee5","_callee5$","_context5","resetFields","_x5","onCancel"],"sources":["src/pages/setting/systemRole/index.vue"],"sourcesContent":["<template>\n  <div>\n    <Card :bordered=\"false\" dis-hover class=\"ivu-mt\">\n      <Form\n        ref=\"formValidate\"\n        :model=\"formValidate\"\n        :label-width=\"labelWidth\"\n        :label-position=\"labelPosition\"\n        @submit.native.prevent\n      >\n        <Row type=\"flex\" :gutter=\"24\">\n          <Col v-bind=\"grid\">\n            <FormItem label=\"状态：\" label-for=\"status\">\n              <Select v-model=\"formValidate.status\" placeholder=\"请选择\" @on-change=\"userSearchs\" clearable>\n                <Option value=\"1\">显示</Option>\n                <Option value=\"0\">不显示</Option>\n              </Select>\n            </FormItem>\n          </Col>\n          <Col v-bind=\"grid\">\n            <FormItem label=\"身份昵称：\" label-for=\"role_name\">\n              <Input\n                search\n                enter-button\n                placeholder=\"请输入身份昵称\"\n                v-model=\"formValidate.role_name\"\n                @on-search=\"userSearchs\"\n              />\n            </FormItem>\n          </Col>\n        </Row>\n        <Row type=\"flex\">\n          <Col v-bind=\"grid\">\n            <Button v-auth=\"['setting-system_role-add']\" type=\"primary\" icon=\"md-add\" @click=\"add('添加')\"\n              >添加身份</Button\n            >\n          </Col>\n        </Row>\n      </Form>\n      <Table\n        :columns=\"columns1\"\n        :data=\"tableList\"\n        ref=\"table\"\n        class=\"mt25\"\n        :loading=\"loading\"\n        highlight-row\n        no-userFrom-text=\"暂无数据\"\n        no-filtered-userFrom-text=\"暂无筛选结果\"\n      >\n        <template slot-scope=\"{ row, index }\" slot=\"is_shows\">\n          <i-switch\n            v-model=\"row.status\"\n            :value=\"row.status\"\n            :true-value=\"1\"\n            :false-value=\"0\"\n            @on-change=\"onchangeIsShow(row)\"\n            size=\"large\"\n          >\n            <span slot=\"open\">显示</span>\n            <span slot=\"close\">隐藏</span>\n          </i-switch>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"action\">\n          <a @click=\"edit(row, '编辑')\">编辑</a>\n          <Divider type=\"vertical\" />\n          <a @click=\"del(row, '删除', index)\">删除</a>\n        </template>\n      </Table>\n      <div class=\"acea-row row-right page\">\n        <Page\n          :total=\"total\"\n          :current=\"formValidate.page\"\n          show-elevator\n          show-total\n          @on-change=\"pageChange\"\n          :page-size=\"formValidate.limit\"\n        />\n      </div>\n    </Card>\n    <!-- 新增编辑-->\n    <Modal\n      v-model=\"modals\"\n      @on-cancel=\"onCancel\"\n      scrollable\n      footer-hide\n      closable\n      :title=\"`${modelTit}身份`\"\n      :mask-closable=\"false\"\n      width=\"600\"\n    >\n      <Form\n        ref=\"formInline\"\n        :model=\"formInline\"\n        :rules=\"ruleValidate\"\n        :label-width=\"100\"\n        :label-position=\"labelPosition2\"\n        @submit.native.prevent\n      >\n        <FormItem label=\"身份名称：\" label-for=\"role_name\" prop=\"role_name\">\n          <Input placeholder=\"请输入身份昵称\" v-model=\"formInline.role_name\" />\n        </FormItem>\n        <FormItem label=\"是否开启：\" prop=\"status\">\n          <RadioGroup v-model=\"formInline.status\">\n            <Radio :label=\"1\">开启</Radio>\n            <Radio :label=\"0\">关闭</Radio>\n          </RadioGroup>\n        </FormItem>\n        <FormItem label=\"权限：\">\n          <div class=\"trees-coadd\">\n            <div class=\"scollhide\">\n              <div class=\"iconlist\">\n                <Tree :data=\"menusList\" show-checkbox ref=\"tree\"></Tree>\n              </div>\n            </div>\n          </div>\n        </FormItem>\n        <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\n        <Button type=\"primary\" size=\"large\" long @click=\"handleSubmit('formInline')\">提交</Button>\n      </Form>\n    </Modal>\n  </div>\n</template>\n<script>\nimport { mapState } from 'vuex';\nimport { roleListApi, roleSetStatusApi, menusListApi, roleCreatApi, roleInfoApi } from '@/api/setting';\nexport default {\n  name: 'systemrRole',\n  data() {\n    return {\n      spinShow: false,\n      modals: false,\n      total: 0,\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      loading: false,\n      formValidate: {\n        status: '',\n        role_name: '',\n        page: 1,\n        limit: 20,\n      },\n      columns1: [\n        {\n          title: 'ID',\n          key: 'id',\n          width: 80,\n        },\n        {\n          title: '身份昵称',\n          key: 'role_name',\n          minWidth: 120,\n        },\n        {\n          title: '权限',\n          key: 'rules',\n          tooltip: true,\n          width: 1000,\n        },\n        {\n          title: '状态',\n          slot: 'is_shows',\n          minWidth: 120,\n        },\n        {\n          title: '操作',\n          slot: 'action',\n          fixed: 'right',\n          minWidth: 120,\n        },\n      ],\n      tableList: [],\n      formInline: {\n        role_name: '',\n        status: 0,\n        checked_menus: [],\n        id: 0,\n      },\n      menusList: [],\n      modelTit: '',\n      ruleValidate: {\n        role_name: [{ required: true, message: '请输入身份昵称', trigger: 'blur' }],\n        status: [{ required: true, type: 'number', message: '请选择是否开启', trigger: 'change' }],\n        // checked_menus: [\n        //     { required: true, validator: validateStatus, trigger: 'change' }\n        // ]\n      },\n    };\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : 75;\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'left';\n    },\n    labelPosition2() {\n      return this.isMobile ? 'top' : 'right';\n    },\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    // 添加\n    add(name) {\n      this.formInline.id = 0;\n      this.modelTit = name;\n      this.modals = true;\n      this.getmenusList();\n    },\n    // 删除\n    del(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `setting/role/${row.id}`,\n        method: 'DELETE',\n        ids: '',\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.tableList.splice(num, 1);\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 修改是否显示\n    onchangeIsShow(row) {\n      let data = {\n        id: row.id,\n        status: row.status,\n      };\n      roleSetStatusApi(data)\n        .then(async (res) => {\n          this.$Message.success(res.msg);\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 列表\n    getList() {\n      this.loading = true;\n      this.formValidate.status = this.formValidate.status || '';\n      roleListApi(this.formValidate)\n        .then(async (res) => {\n          let data = res.data;\n          this.tableList = data.list;\n          this.total = res.data.count;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    pageChange(index) {\n      this.formValidate.page = index;\n      this.getList();\n    },\n    // 表格搜索\n    userSearchs() {\n      this.formValidate.page = 1;\n      this.getList();\n    },\n    // 编辑\n    edit(row, name) {\n      this.modelTit = name;\n      this.formInline.id = row.id;\n      this.modals = true;\n      this.rows = row;\n      this.getIofo(row);\n    },\n    // 菜单列表\n    getmenusList() {\n      this.spinShow = true;\n      menusListApi()\n        .then(async (res) => {\n          let data = res.data;\n          this.menusList = data.menus;\n          this.menusList.map((item, index) => {\n            if (item.title === '主页') {\n              // item.checked = true;\n              // item.disableCheckbox = true;\n              if (item.children.length) {\n                item.children.map((v) => {\n                  // v.checked = true;\n                  // v.disableCheckbox = true;\n                });\n              }\n            }\n            item.expand = false;\n          });\n          this.spinShow = false;\n        })\n        .catch((res) => {\n          this.spinShow = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    // 详情\n    getIofo(row) {\n      this.spinShow = true;\n      roleInfoApi(row.id)\n        .then(async (res) => {\n          let data = res.data;\n          this.formInline = data.role || this.formInline;\n          this.formInline.checked_menus = this.formInline.rules;\n          this.tidyRes(data.menus);\n          this.spinShow = false;\n        })\n        .catch((res) => {\n          this.spinShow = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    tidyRes(menus) {\n      let data = [];\n      menus.map((menu) => {\n        if (menu.title === '主页') {\n          menu.checked = true;\n          menu.disableCheckbox = true;\n          if (menu.children.length) {\n            menu.children.map((v) => {\n              v.checked = true;\n              v.disableCheckbox = true;\n            });\n          }\n          data.push(menu);\n        } else {\n          data.push(this.initMenu(menu));\n        }\n      });\n      this.$set(this, 'menusList', data);\n    },\n    initMenu(menu) {\n      let data = {},\n        checkMenus = ',' + this.formInline.checked_menus + ',';\n      data.title = menu.title;\n      data.id = menu.id;\n      if (menu.children && menu.children.length > 0) {\n        data.children = [];\n        menu.children.map((child) => {\n          data.children.push(this.initMenu(child));\n        });\n      } else {\n        data.checked = checkMenus.indexOf(String(',' + data.id + ',')) !== -1;\n        data.expand = !data.checked;\n      }\n      return data;\n    },\n    // 提交\n    handleSubmit(name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          this.formInline.checked_menus = [];\n          this.$refs.tree.getCheckedAndIndeterminateNodes().map((node) => {\n            this.formInline.checked_menus.push(node.id);\n          });\n          if (this.formInline.checked_menus.length === 0) return this.$Message.warning('请至少选择一个权限');\n          roleCreatApi(this.formInline)\n            .then(async (res) => {\n              this.$Message.success(res.msg);\n              this.modals = false;\n              this.getList();\n              this.$refs[name].resetFields();\n              this.formInline.checked_menus = [];\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    onCancel() {\n      this.$refs['formInline'].resetFields();\n      this.formInline.checked_menus = [];\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"stylus\">\n.trees-coadd\n    width: 100%;\n    height: 385px;\n    .scollhide\n        width: 100%;\n        height: 100%;\n        overflow-x: hidden;\n        overflow-y: scroll;\n       // margin-left: 18px;\n.scollhide::-webkit-scrollbar {\n    display: none;\n}\n</style>\n"],"mappings":"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"}]}