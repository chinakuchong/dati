{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/pages/marketing/storeIntegralOrder/components/tableFrom.vue?vue&type=style&index=0&id=561479d0&scoped=true&lang=stylus&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/pages/marketing/storeIntegralOrder/components/tableFrom.vue","mtime":1689324015232},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/@vue/cli-service/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50YWJfZGF0YSA+Pj4gLml2dS1mb3JtLWl0ZW0tY29udGVudCB7CiAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDsKfQoKLnRhYmxlX2JveCA+Pj4gLml2dS1kaXZpZGVyLWhvcml6b250YWwgewogIG1hcmdpbi10b3A6IDBweCAhaW1wb3J0YW50Owp9CgoudGFibGVfYm94ID4+PiAuaXZ1LWZvcm0taXRlbSB7CiAgbWFyZ2luLWJvdHRvbTogMTVweCAhaW1wb3J0YW50Owp9CgoudGFiZm9ybSB7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKfQoKLlJlZnJlc2ggewogIGZvbnQtc2l6ZTogMTJweDsKICBjb2xvcjogIzE4OTBGRjsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5vcmRlci13cmFwcGVyIHsKICBtYXJnaW4tdG9wOiAxMHB4OwogIHBhZGRpbmc6IDEwcHg7CiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKCiAgLnRpdGxlIHsKICAgIGZvbnQtc2l6ZTogMTZweDsKICB9CgogIC5vcmRlci1ib3ggewogICAgbWFyZ2luLXRvcDogMTBweDsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CgogICAgLml0ZW0gewogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDsKCiAgICAgICY6bGFzdC1jaGlsZCB7CiAgICAgICAgYm9yZGVyLWJvdHRvbTogMDsKICAgICAgfQoKICAgICAgLmxhYmVsIHsKICAgICAgICB3aWR0aDogMTAwcHg7CiAgICAgICAgcGFkZGluZzogMTBweCAwIDEwcHggMTBweDsKICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZGRkOwogICAgICB9CgogICAgICAuY29uIHsKICAgICAgICBmbGV4OiAxOwogICAgICAgIHBhZGRpbmc6IDEwcHggMCAxMHB4IDEwcHg7CiAgICAgIH0KICAgIH0KICB9Cn0KCi5tYW51YWwtbW9kYWwgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLmRmIHsKICBkaXNwbGF5OiBmbGV4Owp9Cg=="},{"version":3,"sources":["tableFrom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4iBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"tableFrom.vue","sourceRoot":"src/pages/marketing/storeIntegralOrder/components","sourcesContent":["<template>\n  <div class=\"table_box\">\n    <Form\n      ref=\"orderData\"\n      :model=\"orderData\"\n      :label-width=\"labelWidth\"\n      :label-position=\"labelPosition\"\n      class=\"tabform\"\n      @submit.native.prevent\n    >\n      <Row :gutter=\"24\">\n        <Col span=\"8\" class=\"ivu-text-left\">\n          <FormItem label=\"订单状态：\">\n            <RadioGroup\n              v-model=\"orderData.status\"\n              type=\"button\"\n              @on-change=\"selectChange2(orderData.status)\"\n              style=\"width: 400px\"\n            >\n              <Radio label=\"\">全部 {{ '(' + orderChartType.statusAll ? orderChartType.statusAll : 0 + ')' }}</Radio>\n              <Radio label=\"1\">未发货 {{ '(' + orderChartType.unshipped ? orderChartType.unshipped : 0 + ')' }}</Radio>\n              <Radio label=\"2\">待收货 {{ '(' + orderChartType.untake ? orderChartType.untake : 0 + ')' }}</Radio>\n              <Radio label=\"3\">交易完成 {{ '(' + orderChartType.complete ? orderChartType.complete : 0 + ')' }}</Radio>\n            </RadioGroup>\n          </FormItem>\n        </Col>\n        <Col span=\"8\" class=\"ivu-text-left\">\n          <FormItem label=\"创建时间：\">\n            <DatePicker\n              :editable=\"false\"\n              @on-change=\"onchangeTime\"\n              :value=\"timeVal\"\n              format=\"yyyy/MM/dd HH:mm:ss\"\n              type=\"datetimerange\"\n              placement=\"bottom-start\"\n              placeholder=\"自定义时间\"\n              style=\"width: 300px\"\n              class=\"mr20\"\n              :options=\"options\"\n            ></DatePicker>\n          </FormItem>\n        </Col>\n      </Row>\n      <Row :gutter=\"24\" type=\"flex\">\n        <Col span=\"12\">\n          <div class=\"df\">\n            <FormItem label=\"搜索：\" prop=\"real_name\" label-for=\"real_name\">\n              <Input\n                v-model=\"orderData.real_name\"\n                search\n                enter-button\n                placeholder=\"请输入\"\n                element-id=\"name\"\n                style=\"width: 300px\"\n                @on-search=\"orderSearch(orderData.real_name)\"\n              >\n                <Select v-model=\"orderData.field_key\" slot=\"prepend\" style=\"width: 80px\">\n                  <Option value=\"all\">全部</Option>\n                  <Option value=\"order_id\">订单号</Option>\n                  <Option value=\"uid\">UID</Option>\n                  <Option value=\"real_name\">用户姓名</Option>\n                  <Option value=\"user_phone\">用户电话</Option>\n                  <Option value=\"store_name\">商品名称(模糊)</Option>\n                </Select>\n              </Input>\n            </FormItem>\n            <!-- <Button class=\"ml10\" @click=\"exports\">导出</Button> -->\n          </div>\n        </Col>\n      </Row>\n    </Form>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex';\nimport { integralGetOrdes } from '@/api/marketing';\n\nimport {\n  putWrite,\n  storeOrderApi,\n  handBatchDelivery,\n  otherBatchDelivery,\n  exportExpressList,\n  storeIntegralOrder,\n} from '@/api/order';\nimport autoSend from '../handle/autoSend';\nimport queueList from '../handle/queueList';\nimport Setting from '@/setting';\n// import util from \"@/libs/util\";\nimport QueueList from '../handle/queueList.vue';\n// import exportExcel from \"@/utils/newToExcel.js\";\n// import XLSX from 'xlsx';\n// const make_cols = refstr => Array(XLSX.utils.decode_range(refstr).e.c + 1).fill(0).map((x,i) => ({name:XLSX.utils.encode_col(i), key:i}));\nexport default {\n  name: 'table_from',\n  components: {\n    autoSend,\n    queueList,\n  },\n  props: ['formSelection', 'autoDisabled', 'isAll'],\n  data() {\n    const codeNum = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('请填写核销码'));\n      }\n      // 模拟异步验证效果\n      if (!Number.isInteger(value)) {\n        callback(new Error('请填写12位数字'));\n      } else {\n        // const reg = /[0-9]{12}/;\n        const reg = /\\b\\d{12}\\b/;\n        if (!reg.test(value)) {\n          callback(new Error('请填写12位数字'));\n        } else {\n          callback();\n        }\n      }\n    };\n    return {\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      fromList: {\n        title: '选择时间',\n        custom: true,\n        fromTxt: [\n          { text: '全部', val: '' },\n          { text: '今天', val: 'today' },\n          { text: '昨天', val: 'yesterday' },\n          { text: '最近7天', val: 'lately7' },\n          { text: '最近30天', val: 'lately30' },\n          { text: '本月', val: 'month' },\n          { text: '本年', val: 'year' },\n        ],\n      },\n      currentTab: '',\n      // 搜索条件\n      orderData: {\n        status: '',\n        data: '',\n        real_name: '',\n        field_key: 'all',\n        pay_type: '',\n      },\n      modalTitleSs: '',\n      statusType: '',\n      time: '',\n      value2: [],\n      isDelIdList: [],\n      modals2: false,\n      timeVal: [],\n      options: {\n        shortcuts: [\n          {\n            text: '今天',\n            value() {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()));\n              return [start, end];\n            },\n          },\n          {\n            text: '昨天',\n            value() {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(\n                start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 1)),\n              );\n              end.setTime(\n                end.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 1)),\n              );\n              return [start, end];\n            },\n          },\n          {\n            text: '最近7天',\n            value() {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(\n                start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 6)),\n              );\n              return [start, end];\n            },\n          },\n          {\n            text: '最近30天',\n            value() {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(\n                start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 29)),\n              );\n              return [start, end];\n            },\n          },\n          {\n            text: '本月',\n            value() {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.setTime(new Date(new Date().getFullYear(), new Date().getMonth(), 1)));\n              return [start, end];\n            },\n          },\n          {\n            text: '本年',\n            value() {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.setTime(new Date(new Date().getFullYear(), 0, 1)));\n              return [start, end];\n            },\n          },\n        ],\n      },\n      payList: [\n        { label: '全部', val: '' },\n        { label: '微信支付', val: '1' },\n        { label: '支付宝支付', val: '4' },\n        { label: '余额支付', val: '2' },\n        { label: '线下支付', val: '3' },\n      ],\n      manualModal: false,\n      uploadAction: `${Setting.apiBaseURL}/file/upload/1`,\n      uploadHeaders: {},\n      file: '',\n      autoModal: false,\n      isShow: false,\n      recordModal: false,\n      sendOutValue: '',\n      exportList: [\n        {\n          name: '1',\n          label: '导出发货单',\n        },\n        {\n          name: '0',\n          label: '导出订单',\n        },\n      ],\n      exportListOn: 0,\n      fileList: [],\n      orderChartType: {},\n      // modal5: false,\n      // data5: [],\n      // cols5: []\n      // orderStatus: false,\n      // orderInfo:''\n    };\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    ...mapState('integralOrder', ['isDels', 'delIdList']),\n    labelWidth() {\n      return this.isMobile ? undefined : 80;\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n    today() {\n      const end = new Date();\n      const start = new Date();\n      var datetimeStart = start.getFullYear() + '/' + (start.getMonth() + 1) + '/' + start.getDate();\n      var datetimeEnd = end.getFullYear() + '/' + (end.getMonth() + 1) + '/' + end.getDate();\n      return [datetimeStart, datetimeEnd];\n    },\n  },\n  watch: {\n    $route() {\n      if (this.$route.fullPath === this.$routeProStr + '/order/list?status=1') {\n        this.getPath();\n      }\n    },\n  },\n  created() {\n    // this.timeVal = this.today;\n    // this.orderData.data = this.timeVal.join('-');\n    if (this.$route.fullPath === this.$routeProStr + '/order/list?status=1') {\n      this.getPath();\n    }\n    // this.getToken();\n    this.$parent.$emit('add');\n    let searchData = {\n      status: this.orderData.status,\n      product_id: this.$route.query.product_id || '',\n    };\n    this.integralGetOrdes(searchData);\n  },\n  methods: {\n    ...mapMutations('integralOrder', ['getOrderStatus', 'getOrderType', 'getOrderTime', 'getOrderNum', 'getfieldKey']),\n    integralGetOrdes(searchData) {\n      integralGetOrdes(searchData)\n        .then((res) => {\n          this.$set(this, 'orderChartType', res.data);\n        })\n        .catch((err) => {});\n    },\n    getPath() {\n      this.orderData.status = this.$route.query.status.toString();\n      this.getOrderStatus(this.orderData.status);\n      this.$emit('getList', 1);\n      this.$emit('order-data', this.orderData);\n    },\n    // 导出\n    // exports(value) {\n    //   this.exportListOn = this.exportList.findIndex(\n    //     (item) => item.name === value\n    //   );\n    //   let formValidate = this.orderData;\n    //   let data = {\n    //     status: formValidate.status,\n    //     data: formValidate.data,\n    //     real_name: formValidate.real_name,\n    //     type: value,\n    //   };\n    //   storeOrderApi(data)\n    //     .then((res) => {\n    //       location.href = res.data[0];\n    //     })\n    //     .catch((res) => {\n    //       this.$Message.error(res.msg);\n    //     });\n    // },\n    // 数据导出；\n    async exports() {\n      let [th, filekey, data, fileName] = [[], [], [], ''];\n      let excelData = JSON.parse(JSON.stringify(this.orderData));\n      excelData.page = 1;\n      excelData.product_id = this.$route.query.product_id || '';\n      for (let i = 0; i < excelData.page + 1; i++) {\n        let lebData = await this.getExcelData(excelData);\n        if (!fileName) fileName = lebData.filename;\n        if (!filekey.length) {\n          filekey = lebData.filekey;\n        }\n        if (!th.length) th = lebData.header;\n        if (lebData.export.length) {\n          data = data.concat(lebData.export);\n          excelData.page++;\n        }\n      }\n      exportExcel(th, filekey, fileName, data);\n    },\n    getExcelData(excelData) {\n      return new Promise((resolve, reject) => {\n        storeIntegralOrder(excelData).then((res) => {\n          return resolve(res.data);\n        });\n      });\n    },\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e;\n      this.orderData.data = this.timeVal[0] ? this.timeVal.join('-') : '';\n      this.$store.dispatch('integralOrder/getOrderTabs', {\n        data: this.orderData.data,\n      });\n      this.getOrderTime(this.orderData.data);\n      this.$emit('getList', 1);\n      this.$emit('order-data', this.orderData);\n    },\n    // 选择时间\n    selectChange(tab) {\n      this.$store.dispatch('integralOrder/getOrderTabs', { data: tab });\n      this.orderData.data = tab;\n      this.getOrderTime(this.orderData.data);\n      this.timeVal = [];\n      this.$emit('getList');\n      this.$emit('order-data', this.orderData);\n    },\n    // 订单选择状态\n    selectChange2(tab) {\n      this.getOrderStatus(tab);\n      this.$emit('getList', 1);\n    },\n    userSearchs(type) {\n      this.getOrderType(type);\n      this.$emit('getList', 1);\n    },\n    // 时间状态\n    timeChange(time) {\n      this.getOrderTime(time);\n      this.$emit('getList');\n    },\n    // 订单号搜索\n    orderSearch(num) {\n      this.getOrderNum(num);\n      this.getfieldKey(this.orderData.field_key);\n      this.$emit('getList', 1);\n    },\n    // 点击订单类型\n    onClickTab() {\n      this.$emit('onChangeType', this.currentTab);\n    },\n    // 批量删除\n    delAll() {\n      if (this.delIdList.length === 0) {\n        this.$Message.error('请先选择删除的订单！');\n      } else {\n        if (this.isDels) {\n          this.delIdList.filter((item) => {\n            this.isDelIdList.push(item.id);\n          });\n          let idss = {\n            ids: this.isDelIdList,\n            all: this.isAll,\n            where: this.orderData,\n          };\n          let delfromData = {\n            title: '删除订单',\n            url: `/order/dels`,\n            method: 'post',\n            ids: idss,\n          };\n          this.$modalSure(delfromData)\n            .then((res) => {\n              this.$Message.success(res.msg);\n              this.tabList();\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n        } else {\n          const title = '错误！';\n          const content = '<p>您选择的的订单存在用户未删除的订单，无法删除用户未删除的订单！</p>';\n          this.$Modal.error({\n            title: title,\n            content: content,\n          });\n        }\n      }\n    },\n    del(name) {\n      // this.orderInfo = ''\n      this.modals2 = false;\n      this.writeOffFrom.confirm = 0;\n      this.$refs[name].resetFields();\n    },\n    handleSubmit() {\n      this.$emit('on-submit', this.data);\n    },\n    // 刷新\n    Refresh() {\n      this.$emit('getList');\n    },\n    //\n    handleReset() {\n      this.$refs.form.resetFields();\n      this.$emit('on-reset');\n    },\n    // 上传头部token\n    // getToken() {\n    //   this.uploadHeaders[\"Authori-zation\"] =\n    //     \"Bearer \" + util.cookies.get(\"token\");\n    // },\n    // beforeUpload(file){\n    //     /* Boilerplate to set up FileReader */\n    // \tconst reader = new FileReader();\n    // \treader.onload = (e) => {\n    // \t\t/* Parse data */\n    // \t\tconst bstr = e.target.result;\n    // \t\tconst wb = XLSX.read(bstr, {type:'binary'});\n    // \t\t/* Get first worksheet */\n    // \t\tconst wsname = wb.SheetNames[0];\n    // \t\tconst ws = wb.Sheets[wsname];\n    // \t\t/* Convert array of arrays */\n    // \t\tconst data = XLSX.utils.sheet_to_json(ws, {header:1});\n    // \t\t/* Update state */\n    // \t\tthis.data5 = data;\n    //         this.cols5 = make_cols(ws['!ref']);\n    //         this.modal5 = true;\n    // \t};\n    // \treader.readAsBinaryString(file);\n    // },\n    // 上传成功\n    uploadSuccess(res, file, fileList) {\n      if (res.status === 200) {\n        this.$Message.success(res.msg);\n        this.file = res.data.src;\n        this.fileList = fileList;\n      } else {\n        this.$Message.error(res.msg);\n      }\n    },\n    //移除文件\n    removeFile(file, fileList) {\n      this.file = '';\n      this.fileList = fileList;\n    },\n    // 手动批量发货-确定\n    manualModalOk() {\n      this.$refs.upload.clearFiles();\n      handBatchDelivery({\n        file: this.file,\n      })\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.fileList = [];\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n          this.fileList = [];\n        });\n    },\n    // 手动批量发货-取消\n    manualModalCancel() {\n      this.fileList = [];\n      this.$refs.upload.clearFiles();\n    },\n    // 自动批量发货-取消\n    autoModalOk() {\n      if (this.isAll == '全部' || this.formSelection.length) {\n        this.$refs.send.modals = true;\n        this.$refs.send.getList();\n        this.$refs.send.getDeliveryList();\n      } else {\n        this.$Message.error('请选择本页订单');\n      }\n    },\n    // 自动批量发货-取消\n    autolModalCancel() {},\n    submitFail() {\n      otherBatchDelivery();\n    },\n    queuemModal() {\n      // this.$router.push({ path: 'queue/list' });\n      this.$refs.queue.modal = true;\n    },\n    onAuto() {\n      this.$refs.sends.modals = true;\n      this.$refs.sends.getList();\n      this.$refs.sends.getDeliveryList();\n    },\n    // 下载物流公司对照表\n    getExpressList() {\n      exportExpressList()\n        .then((res) => {\n          window.open(res.data[0]);\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"stylus\">\n.tab_data >>> .ivu-form-item-content {\n  margin-left: 0 !important;\n}\n\n.table_box >>> .ivu-divider-horizontal {\n  margin-top: 0px !important;\n}\n\n.table_box >>> .ivu-form-item {\n  margin-bottom: 15px !important;\n}\n\n.tabform {\n  margin-bottom: 10px;\n}\n\n.Refresh {\n  font-size: 12px;\n  color: #1890FF;\n  cursor: pointer;\n}\n\n.order-wrapper {\n  margin-top: 10px;\n  padding: 10px;\n  border: 1px solid #ddd;\n\n  .title {\n    font-size: 16px;\n  }\n\n  .order-box {\n    margin-top: 10px;\n    border: 1px solid #ddd;\n\n    .item {\n      display: flex;\n      align-items: center;\n      border-bottom: 1px solid #ddd;\n\n      &:last-child {\n        border-bottom: 0;\n      }\n\n      .label {\n        width: 100px;\n        padding: 10px 0 10px 10px;\n        border-right: 1px solid #ddd;\n      }\n\n      .con {\n        flex: 1;\n        padding: 10px 0 10px 10px;\n      }\n    }\n  }\n}\n\n.manual-modal {\n  display: flex;\n  align-items: center;\n}\n\n.df {\n  display: flex;\n}\n</style>\n"]}]}