{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/components/verifition/Verify/VerifySlide.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/components/verifition/Verify/VerifySlide.vue","mtime":1689324015174},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VerifySlide.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"VerifySlide.vue","sourceRoot":"src/components/verifition/Verify","sourcesContent":["<template>\n  <div style=\"position: relative\">\n    <div v-if=\"type === '2'\" class=\"verify-img-out\" :style=\"{ height: parseInt(setSize.imgHeight) + vSpace + 'px' }\">\n      <div class=\"verify-img-panel\" :style=\"{ width: setSize.imgWidth, height: setSize.imgHeight }\">\n        <img\n          :src=\"backImgBase ? 'data:image/png;base64,' + backImgBase : defaultImg\"\n          alt=\"\"\n          style=\"width: 100%; height: 100%; display: block\"\n        />\n        <div v-show=\"showRefresh\" class=\"verify-refresh\" @click=\"refresh\"><i class=\"iconfont icon-refresh\" /></div>\n        <transition name=\"tips\">\n          <span v-if=\"tipWords\" class=\"verify-tips\" :class=\"passFlag ? 'suc-bg' : 'err-bg'\">{{ tipWords }}</span>\n        </transition>\n      </div>\n    </div>\n    <!-- 公共部分 -->\n    <div\n      class=\"verify-bar-area\"\n      :style=\"{ width: setSize.imgWidth, height: barSize.height, 'line-height': barSize.height }\"\n    >\n      <span class=\"verify-msg\" v-text=\"text\" />\n      <div\n        class=\"verify-left-bar\"\n        :style=\"{\n          width: leftBarWidth !== undefined ? leftBarWidth : barSize.height,\n          height: barSize.height,\n          'border-color': leftBarBorderColor,\n          transaction: transitionWidth,\n        }\"\n      >\n        <span class=\"verify-msg\" v-text=\"finishText\" />\n        <div\n          class=\"verify-move-block\"\n          :style=\"{\n            width: barSize.height,\n            height: barSize.height,\n            'background-color': moveBlockBackgroundColor,\n            left: moveBlockLeft,\n            transition: transitionLeft,\n          }\"\n          @touchstart=\"start\"\n          @mousedown=\"start\"\n        >\n          <i :class=\"['verify-icon iconfont', iconClass]\" :style=\"{ color: iconColor }\" />\n          <div\n            v-if=\"type === '2'\"\n            class=\"verify-sub-block\"\n            :style=\"{\n              width: Math.floor((parseInt(setSize.imgWidth) * 47) / 310) + 'px',\n              height: setSize.imgHeight,\n              top: '-' + (parseInt(setSize.imgHeight) + vSpace) + 'px',\n              'background-size': setSize.imgWidth + ' ' + setSize.imgHeight,\n            }\"\n          >\n            <img\n              :src=\"'data:image/png;base64,' + blockBackImgBase\"\n              alt=\"\"\n              style=\"width: 100%; height: 100%; display: block\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script type=\"text/babel\">\n/**\n * VerifySlide\n * @description 滑块\n * */\nimport { aesEncrypt } from './../utils/ase';\nimport { resetSize } from './../utils/util';\nimport { ajCaptcha, ajCaptchaCheck } from '../../../api/common';\n\n//  \"captchaType\":\"blockPuzzle\",\nexport default {\n  name: 'VerifySlide',\n  props: {\n    captchaType: {\n      type: String,\n    },\n    type: {\n      type: String,\n      default: '1',\n    },\n    // 弹出式pop，固定fixed\n    mode: {\n      type: String,\n      default: 'fixed',\n    },\n    vSpace: {\n      type: Number,\n      default: 5,\n    },\n    explain: {\n      type: String,\n      default: '向右滑动完成验证',\n    },\n    imgSize: {\n      type: Object,\n      default() {\n        return {\n          width: '310px',\n          height: '155px',\n        };\n      },\n    },\n    blockSize: {\n      type: Object,\n      default() {\n        return {\n          width: '50px',\n          height: '50px',\n        };\n      },\n    },\n    barSize: {\n      type: Object,\n      default() {\n        return {\n          width: '310px',\n          height: '40px',\n        };\n      },\n    },\n    defaultImg: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      secretKey: '', // 后端返回的加密秘钥 字段\n      passFlag: '', // 是否通过的标识\n      backImgBase: '', // 验证码背景图片\n      blockBackImgBase: '', // 验证滑块的背景图片\n      backToken: '', // 后端返回的唯一token值\n      startMoveTime: '', // 移动开始的时间\n      endMovetime: '', // 移动结束的时间\n      tipsBackColor: '', // 提示词的背景颜色\n      tipWords: '',\n      text: '',\n      finishText: '',\n      setSize: {\n        imgHeight: 0,\n        imgWidth: 0,\n        barHeight: 0,\n        barWidth: 0,\n      },\n      top: 0,\n      left: 0,\n      moveBlockLeft: undefined,\n      leftBarWidth: undefined,\n      // 移动中样式\n      moveBlockBackgroundColor: undefined,\n      leftBarBorderColor: '#ddd',\n      iconColor: undefined,\n      iconClass: 'icon-right',\n      status: false, // 鼠标状态\n      isEnd: false, // 是够验证完成\n      showRefresh: true,\n      transitionLeft: '',\n      transitionWidth: '',\n    };\n  },\n  computed: {\n    barArea() {\n      return this.$el.querySelector('.verify-bar-area');\n    },\n    resetSize() {\n      return resetSize;\n    },\n  },\n  watch: {\n    // type变化则全面刷新\n    type: {\n      immediate: true,\n      handler() {\n        this.init();\n      },\n    },\n  },\n  mounted() {\n    // 禁止拖拽\n    this.$el.onselectstart = function () {\n      return false;\n    };\n  },\n  methods: {\n    init() {\n      this.text = this.explain;\n      this.getPictrue();\n      this.$nextTick(() => {\n        const setSize = this.resetSize(this); // 重新设置宽度高度\n        for (const key in setSize) {\n          this.$set(this.setSize, key, setSize[key]);\n        }\n        this.$parent.$emit('ready', this);\n      });\n\n      var _this = this;\n\n      window.removeEventListener('touchmove', function (e) {\n        _this.move(e);\n      });\n      window.removeEventListener('mousemove', function (e) {\n        _this.move(e);\n      });\n\n      // 鼠标松开\n      window.removeEventListener('touchend', function () {\n        _this.end();\n      });\n      window.removeEventListener('mouseup', function () {\n        _this.end();\n      });\n\n      window.addEventListener('touchmove', function (e) {\n        _this.move(e);\n      });\n      window.addEventListener('mousemove', function (e) {\n        _this.move(e);\n      });\n\n      // 鼠标松开\n      window.addEventListener('touchend', function () {\n        _this.end();\n      });\n      window.addEventListener('mouseup', function () {\n        _this.end();\n      });\n    },\n\n    // 鼠标按下\n    start: function (e) {\n      e = e || window.event;\n      if (!e.touches) {\n        // 兼容PC端\n        var x = e.clientX;\n      } else {\n        // 兼容移动端\n        var x = e.touches[0].pageX;\n      }\n      this.startLeft = Math.floor(x - this.barArea.getBoundingClientRect().left);\n      this.startMoveTime = +new Date(); // 开始滑动的时间\n      if (this.isEnd == false) {\n        this.text = '';\n        this.moveBlockBackgroundColor = '#337ab7';\n        this.leftBarBorderColor = '#337AB7';\n        this.iconColor = '#fff';\n        e.stopPropagation();\n        this.status = true;\n      }\n    },\n    // 鼠标移动\n    move: function (e) {\n      e = e || window.event;\n      if (this.status && this.isEnd == false) {\n        if (!e.touches) {\n          // 兼容PC端\n          var x = e.clientX;\n        } else {\n          // 兼容移动端\n          var x = e.touches[0].pageX;\n        }\n        var bar_area_left = this.barArea.getBoundingClientRect().left;\n        var move_block_left = x - bar_area_left; // 小方块相对于父元素的left值\n        if (move_block_left >= this.barArea.offsetWidth - parseInt(parseInt(this.blockSize.width) / 2) - 2) {\n          move_block_left = this.barArea.offsetWidth - parseInt(parseInt(this.blockSize.width) / 2) - 2;\n        }\n        if (move_block_left <= 0) {\n          move_block_left = parseInt(parseInt(this.blockSize.width) / 2);\n        }\n        // 拖动后小方块的left值\n        this.moveBlockLeft = move_block_left - this.startLeft + 'px';\n        this.leftBarWidth = move_block_left - this.startLeft + 'px';\n      }\n    },\n\n    // 鼠标松开\n    end: function () {\n      this.endMovetime = +new Date();\n      var _this = this;\n      // 判断是否重合\n      if (this.status && this.isEnd == false) {\n        var moveLeftDistance = parseInt((this.moveBlockLeft || '').replace('px', ''));\n        moveLeftDistance = (moveLeftDistance * 310) / parseInt(this.setSize.imgWidth);\n        const data = {\n          captchaType: this.captchaType,\n          pointJson: this.secretKey\n            ? aesEncrypt(JSON.stringify({ x: moveLeftDistance, y: 5.0 }), this.secretKey)\n            : JSON.stringify({ x: moveLeftDistance, y: 5.0 }),\n          token: this.backToken,\n        };\n        ajCaptchaCheck(data)\n          .then((res) => {\n            this.moveBlockBackgroundColor = '#5cb85c';\n            this.leftBarBorderColor = '#5cb85c';\n            this.iconColor = '#fff';\n            this.iconClass = 'icon-check';\n            this.showRefresh = false;\n            this.isEnd = true;\n            if (this.mode == 'pop') {\n              setTimeout(() => {\n                this.$parent.clickShow = false;\n                this.refresh();\n              }, 1500);\n            }\n            this.passFlag = true;\n            this.tipWords = `${((this.endMovetime - this.startMoveTime) / 1000).toFixed(2)}s验证成功`;\n            var captchaVerification = this.secretKey\n              ? aesEncrypt(this.backToken + '---' + JSON.stringify({ x: moveLeftDistance, y: 5.0 }), this.secretKey)\n              : this.backToken + '---' + JSON.stringify({ x: moveLeftDistance, y: 5.0 });\n            setTimeout(() => {\n              this.tipWords = '';\n              this.$parent.closeBox();\n              this.$parent.$emit('success', { captchaVerification });\n            }, 1000);\n          })\n          .catch((res) => {\n            this.moveBlockBackgroundColor = '#d9534f';\n            this.leftBarBorderColor = '#d9534f';\n            this.iconColor = '#fff';\n            this.iconClass = 'icon-close';\n            this.passFlag = false;\n            setTimeout(function () {\n              _this.refresh();\n            }, 1000);\n            this.$parent.$emit('error', this);\n            this.tipWords = '验证失败';\n            setTimeout(() => {\n              this.tipWords = '';\n            }, 1000);\n          });\n        this.status = false;\n      }\n    },\n\n    refresh: function () {\n      this.showRefresh = true;\n      this.finishText = '';\n\n      this.transitionLeft = 'left .3s';\n      this.moveBlockLeft = 0;\n\n      this.leftBarWidth = undefined;\n      this.transitionWidth = 'width .3s';\n\n      this.leftBarBorderColor = '#ddd';\n      this.moveBlockBackgroundColor = '#fff';\n      this.iconColor = '#000';\n      this.iconClass = 'icon-right';\n      this.isEnd = false;\n\n      this.getPictrue();\n      setTimeout(() => {\n        this.transitionWidth = '';\n        this.transitionLeft = '';\n        this.text = this.explain;\n      }, 300);\n    },\n\n    // 请求背景图片和验证图片\n    getPictrue() {\n      const data = {\n        captchaType: this.captchaType,\n        clientUid: localStorage.getItem('slider'),\n        ts: Date.now(), // 现在的时间戳\n      };\n      ajCaptcha(data)\n        .then((res) => {\n          this.backImgBase = res.data.originalImageBase64;\n          this.blockBackImgBase = res.data.jigsawImageBase64;\n          this.backToken = res.data.token;\n          this.secretKey = res.data.secretKey;\n        })\n        .catch((res) => {\n          this.tipWords = res.msg;\n          this.backImgBase = null;\n          this.blockBackImgBase = null;\n        });\n    },\n  },\n};\n</script>\n"]}]}