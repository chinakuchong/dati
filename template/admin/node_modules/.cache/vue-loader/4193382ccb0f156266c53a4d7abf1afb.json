{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/pages/system/codeGeneration/components/TableForm.vue?vue&type=style&index=0&id=1d6abee7&lang=stylus&scoped=true&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/pages/system/codeGeneration/components/TableForm.vue","mtime":1689324015272},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/@vue/cli-service/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZm9ybS13aWR0aCB7CiAgd2lkdGg6IDUwMHB4Owp9Ci5pdGVtewogIGRpc3BsYXkgZmxleAogIG1hcmdpbi1ib3R0b20gMTBweAogIC5yb3d7CiAgICB3aWR0aCAxNDBweAogICAgbWFyZ2luLXJpZ2h0IDEwcHgKICB9Cn0KLnRhYmxlLW9wdGlvbnN7CiAgZGlzcGxheSBmbGV4CiAgYWxpZ24taXRlbXMgY2VudGVyCiAgLmNyZWF0ZXsKICAgIGZvbnQtc2l6ZTogMTZweDsKICAgIG1hcmdpbi1sZWZ0IDEwcHgKICAgIGN1cnNvciBwb2ludGVyCiAgfQp9Ci5vcHRpb25zLWxpc3R7CiAgLml0ZW17CiAgICBkaXNwbGF5IGZsZXgKICAgIGFsaWduLWl0ZW1zIGNlbnRlcgogICAgLmFkZHsKICAgICAgZm9udC1zaXplOiAyNHB4CiAgICAgIGNvbG9yICMyZDhjZjAKICAgIH0KICB9Cn0K"},{"version":3,"sources":["TableForm.vue"],"names":[],"mappingsfile":"TableForm.vue","sourceRoot":"src/pages/system/codeGeneration/components","sourcesContent":["<template>\n  <div class=\"main\">\n    <Alert closable>\n      crud生成说明\n      <template #desc>\n        <p>\n          1、字段配置中表存在生成的字段为表内列的信息,并且主键、伪删除字段不允许设置为列，主键默认展示在列表中，伪删除字段不允许展示\n        </p>\n        <p>2、在字段配置中新建表时，主键不需要增加列，会自动增加一行主键id</p>\n        <p>\n          3、在字段配置中新建表时，字段类型为addTimestamps会自动创建create_time、update_time字段，字段类型为：timestamp\n        </p>\n        <p>\n          4、在字段配置中新建表时，字段类型为addSoftDelete会字段创建delete_time字段，字段类型为：timestamp，作用是伪删除\n        </p>\n        <p>5、在字段配置中，表单类型为不生成时创建后不会生成对应的表单项</p>\n        <p>6、添加字段id、create_time、update_time、delete_time为不可用字段</p>\n      </template>\n    </Alert>\n    <div class=\"df\">\n      <Button class=\"mr20\" type=\"primary\" @click=\"addRow\">添加一行</Button>\n      <Checkbox class=\"mr10\" v-model=\"isCreate\" @on-change=\"addCreate\">添加与修改时间</Checkbox>\n      <Checkbox class=\"mr10\" v-model=\"isDelete\" @on-change=\"addDelete\">伪删除</Checkbox>\n    </div>\n    <div>\n      <Table\n        ref=\"selection\"\n        :columns=\"columns\"\n        :data=\"tableField\"\n        no-data-text=\"暂无数据\"\n        highlight-row\n        :loading=\"loading\"\n        max-height=\"600\"\n        size=\"small\"\n        no-filtered-data-text=\"暂无筛选结果\"\n      >\n        <template slot-scope=\"{ row, index }\" slot=\"field\">\n          <Input\n            :disabled=\"disabledInput(index)\"\n            v-model=\"tableField[index].field\"\n            @on-blur=\"changeField(index)\"\n          ></Input>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"field_type\">\n          <Select\n            v-model=\"tableField[index].field_type\"\n            :disabled=\"disabledInput(index)\"\n            @on-change=\"changeItemField($event, index)\"\n          >\n            <Option v-for=\"item in columnTypeList\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n          </Select>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"limit\">\n          <Input v-model=\"tableField[index].limit\" :disabled=\"disabledInput(index)\"></Input>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"default\">\n          <Input v-model=\"tableField[index].default\" :disabled=\"disabledInput(index)\"></Input>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"comment\">\n          <Input\n            v-model=\"tableField[index].comment\"\n            :disabled=\"disabledInput(index)\"\n            @on-change=\"(e) => changeComment(e, index)\"\n          ></Input>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"required\">\n          <Checkbox v-model=\"tableField[index].required\" :disabled=\"disabledInput(index)\"></Checkbox>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"is_table\">\n          <Checkbox v-model=\"tableField[index].is_table\" :disabled=\"disabledInput(index)\"></Checkbox>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"table_name\">\n          <Input v-model=\"tableField[index].table_name\" :disabled=\"disabledInput(index)\"></Input>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"from_type\">\n          <Select v-model=\"tableField[index].from_type\" :disabled=\"disabledInput(index)\">\n            <Option v-for=\"item in fromTypeList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\n          </Select>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"options\">\n          <div class=\"table-options\" v-if=\"['select', 'radio', 'checkbox'].includes(tableField[index].from_type)\">\n            <Select>\n              <Option v-for=\"item in tableField[index].options\" :value=\"item.value\" :key=\"item.value\">{{\n                item.label\n              }}</Option>\n            </Select>\n            <Icon class=\"create\" type=\"md-create\" @click=\"eidtOptions(index)\" />\n          </div>\n          <div v-else>--</div>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"action\">\n          <a v-if=\"!tableField[index].primaryKey && !disabledInput(index)\" @click=\"del(row, index)\">删除</a>\n          <span v-else>--</span>\n        </template>\n      </Table>\n    </div>\n    <Modal\n      v-model=\"optionsModal\"\n      scrollable\n      title=\"字典配置\"\n      closable\n      :mask-closable=\"false\"\n      width=\"400px\"\n      @on-ok=\"addOptions\"\n      @on-cancel=\"optionsModal = false\"\n    >\n      <div class=\"options-list\">\n        <div class=\"item\" v-for=\"(item, index) in optionsList\" :key=\"index\">\n          <Input class=\"mr10\" v-model=\"item.label\" placeholder=\"label\" style=\"width: 150px\" />\n          <Input class=\"mr10\" v-model=\"item.value\" placeholder=\"value\" style=\"width: 150px\" />\n          <Icon v-if=\"index == optionsList.length - 1\" class=\"add\" type=\"md-add-circle\" @click=\"addOneOptions\" />\n          <Icon v-if=\"index > 0\" class=\"add\" type=\"md-remove-circle\" @click=\"delOneOptions(index)\" />\n        </div>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport { crudMenus, crudColumnType, crudFilePath } from '@/api/systemCodeGeneration';\n\nexport default {\n  name: '',\n  props: {\n    foundation: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n    id: {\n      type: String | Number,\n    },\n  },\n  data() {\n    return {\n      foundationRules: {},\n      menusList: [],\n      columnTypeList: [],\n      optionsModal: false,\n      isCreate: false,\n      isDelete: false,\n      columns: [\n        {\n          title: '字段名称',\n          slot: 'field',\n          minWidth: 100,\n        },\n        {\n          title: '字段类型',\n          slot: 'field_type',\n          minWidth: 100,\n        },\n        {\n          title: '长度',\n          slot: 'limit',\n          minWidth: 100,\n        },\n        {\n          title: '默认值',\n          slot: 'default',\n          minWidth: 100,\n        },\n        {\n          title: '字段描述',\n          slot: 'comment',\n          minWidth: 100,\n        },\n        {\n          title: '列表',\n          slot: 'is_table',\n          width: 70,\n          align: 'center',\n        },\n        {\n          title: '列表名',\n          slot: 'table_name',\n          minWidth: 120,\n          align: 'center',\n        },\n        {\n          title: '表单类型',\n          slot: 'from_type',\n          minWidth: 100,\n        },\n        {\n          title: '字典配置',\n          slot: 'options',\n          minWidth: 100,\n        },\n        {\n          title: '必填',\n          slot: 'required',\n          width: 70,\n          align: 'center',\n        },\n        {\n          title: '操作',\n          slot: 'action',\n          width: 70,\n          align: 'center',\n        },\n      ],\n      fromTypeList: [],\n      loading: false,\n      tableField: [],\n      optionsList: [],\n      index: 0,\n      deleteField: [],\n    };\n  },\n  created() {\n    this.getCrudMenus();\n  },\n  mounted() {},\n  methods: {\n    disabledInput(index) {\n      let fieldInfo = this.tableField[index];\n      let res = ['addTimestamps', 'addSoftDelete'].includes(this.tableField[index].field_type);\n      if (fieldInfo.primaryKey) {\n        res = true;\n      } else if (fieldInfo.field === 'delete_time' && fieldInfo.field_type === 'timestamp') {\n        res = true;\n      } else if (\n        (fieldInfo.field === 'create_time' || fieldInfo.field === 'update_time') &&\n        fieldInfo.field_type === 'timestamp'\n      ) {\n        res = true;\n      }\n      return res;\n    },\n    initfield() {\n      this.tableField = [];\n    },\n    changeItemField(e, i) {\n      if (e === 'addSoftDelete') {\n        this.$set(this.tableField[i], 'comment', '伪删除');\n      }\n      if (e === 'addTimestamps') {\n        this.$set(this.tableField[i], 'comment', '添加和修改时间');\n      }\n    },\n    eidtOptions(i) {\n      this.index = i;\n      this.optionsList = this.tableField[i].options || [{ label: '', value: '' }];\n      this.optionsModal = true;\n    },\n    addOptions() {\n      this.$set(this.tableField[this.index], 'options', this.optionsList);\n    },\n    changeRadio(status) {\n      this.tableField = [];\n      if (status) {\n        this.addRow();\n      }\n    },\n    initTableName() {\n      this.tableField = [];\n    },\n    addRow() {\n      for (let i = 0; i < this.tableField.length; i++) {\n        const el = this.tableField[i];\n        if ((!el.field || !el.field_type) && !['addTimestamps', 'addSoftDelete'].includes(el.field_type)) {\n          return this.$Message.warning('请先完善上一条数据');\n        }\n        if (\n          el.is_table &&\n          !el.table_name &&\n          !Number(el.primaryKey) &&\n          !['addTimestamps', 'addSoftDelete'].includes(el.field_type)\n        ) {\n          return this.$Message.warning('请输入列表名');\n        }\n      }\n      let i = this.tableField.length;\n      let spliceIndex = 0;\n      this.tableField.map((e) => {\n        if (e.field === 'create_time' || e.field === 'update_time') {\n          spliceIndex++;\n        }\n        if (e.field === 'delete_time') {\n          spliceIndex++;\n        }\n      });\n      i = this.tableField.length - spliceIndex;\n      this.tableField.splice(i, 0, {\n        field: '',\n        field_type: '',\n        default: '',\n        comment: '',\n        required: false,\n        is_table: true,\n        table_name: '',\n        limit: '',\n        primaryKey: 0,\n        from_type: '0',\n      });\n      // this.tableField.push();\n    },\n    addCreate(status) {\n      if (status) {\n        let haveCre = this.tableField.findIndex((e) => e.field === 'create_time');\n        let haveUp = this.tableField.findIndex((e) => e.field === 'update_time');\n        if (haveCre > 0 || haveUp > 0) {\n          this.$nextTick((e) => {\n            this.isCreate = false;\n          });\n          return this.$Message.warning('已存在 create_time或update_time');\n        }\n        let data = [\n          {\n            field: 'create_time',\n            field_type: 'timestamp',\n            default: '',\n            comment: '添加时间',\n            required: false,\n            is_table: true,\n            table_name: '添加时间',\n            limit: '',\n            primaryKey: 0,\n            from_type: '0',\n          },\n          {\n            field: 'update_time',\n            field_type: 'timestamp',\n            default: '',\n            comment: '修改时间',\n            required: false,\n            is_table: true,\n            table_name: '修改时间',\n            limit: '',\n            primaryKey: 0,\n            from_type: '0',\n          },\n        ];\n        this.tableField = [...this.tableField, ...data];\n      } else {\n        let i = this.tableField.findIndex((e) => e.field === 'create_time');\n        this.tableField.splice(i, 2);\n      }\n    },\n    addDelete(status) {\n      if (status) {\n        let haveDel = this.tableField.findIndex((e) => e.field === 'delete_time');\n        if (haveDel > 0) {\n          this.isDelete = false;\n          return this.$Message.warning('已存在 delete_time');\n        }\n        let data = [\n          {\n            field: 'delete_time',\n            field_type: 'timestamp',\n            default: '',\n            comment: '伪删除',\n            required: false,\n            is_table: false,\n            table_name: '伪删除',\n            limit: '',\n            primaryKey: 0,\n            from_type: '0',\n          },\n        ];\n        this.tableField = [...this.tableField, ...data];\n      } else {\n        let i = this.tableField.findIndex((e) => e.field === 'delete_time');\n        this.tableField.splice(i, 1);\n      }\n    },\n    changeField(index) {\n      console.log(this.tableField[index].field)\n      if (this.tableField[index].field) {\n        for (let i = 0; i < this.tableField.length; i++) {\n          const e = this.tableField[i];\n          if (['id', 'create_time', 'update_time', 'delete_time'].includes(this.tableField[index].field)) {\n            this.$Message.warning('列表中已存在该字段名称');\n            this.tableField[index].field = '';\n            return;\n          }\n        }\n      }\n    },\n    changeComment(e, index) {\n      this.tableField[index].table_name = e.target.value;\n    },\n    getCrudMenus() {\n      crudMenus().then((res) => {\n        console.log(res);\n        this.menusList = res.data;\n      });\n      crudColumnType().then((res) => {\n        this.columnTypeList = res.data.types;\n        this.fromTypeList = res.data.form;\n      });\n    },\n    del(row, index) {\n      this.tableField.splice(index, 1);\n      if (this.id) {\n        this.deleteField.push(row.field);\n      }\n    },\n    addOneOptions() {\n      this.optionsList.push({\n        label: '',\n        value: '',\n      });\n    },\n    delOneOptions(i) {\n      this.optionsList.splice(i, 1);\n    },\n  },\n};\n</script>\n<style lang=\"stylus\" scoped>\n.form-width {\n  width: 500px;\n}\n.item{\n  display flex\n  margin-bottom 10px\n  .row{\n    width 140px\n    margin-right 10px\n  }\n}\n.table-options{\n  display flex\n  align-items center\n  .create{\n    font-size: 16px;\n    margin-left 10px\n    cursor pointer\n  }\n}\n.options-list{\n  .item{\n    display flex\n    align-items center\n    .add{\n      font-size: 24px\n      color #2d8cf0\n    }\n  }\n}\n</style>\n"]}]}