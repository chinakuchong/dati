{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/components/uploadVideo2/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/components/uploadVideo2/index.vue","mtime":1689324015172},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHVwbG9hZEJ5UGllY2VzIH0gZnJvbSAnQC91dGlscy91cGxvYWQnOyAvL+W8leWFpXVwbG9hZEJ5UGllY2Vz5pa55rOVCmltcG9ydCB7IHByb2R1Y3RHZXRUZW1wS2V5c0FwaSwgdXBsb2FkVHlwZSB9IGZyb20gJ0AvYXBpL3Byb2R1Y3QnOwppbXBvcnQgU2V0dGluZyBmcm9tICdAL3NldHRpbmcnOwppbXBvcnQgeyBnZXRDb29raWVzIH0gZnJvbSAnQC9saWJzL3V0aWwnOwovLyBpbXBvcnQgIi4uLy4uLy4uL3B1YmxpYy9VRWRpdG9yL2RpYWxvZ3MvaW50ZXJuYWwiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3ZpZGUxMW8nLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlVXJsOiBTZXR0aW5nLmFwaUJhc2VVUkwgKyAnL2ZpbGUvdXBsb2FkJywKICAgICAgdXBsb2FkOiB7CiAgICAgICAgdmlkZW9Jbmc6IGZhbHNlLCAvLyDmmK/lkKbmmL7npLrov5vluqbmnaHvvJsKICAgICAgfSwKICAgICAgcHJvZ3Jlc3M6IDAsIC8vIOi/m+W6puadoem7mOiupDAKICAgICAgdmlkZW9MaW5rOiAnJywKICAgICAgZm9ybVZhbGlkYXRlOiB7CiAgICAgICAgdmlkZW9fbGluazogJycsCiAgICAgIH0sCiAgICAgIHVwbG9hZF90eXBlOiAnJywKICAgICAgdXBsb2FkRGF0YToge30sCiAgICAgIGhlYWRlcjoge30sCiAgICB9OwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMudXBsb2FkVHlwZSgpOwogICAgdGhpcy5nZXRUb2tlbigpOwogIH0sCiAgbWV0aG9kczogewogICAgdmlkZW9TYXZlVG9VcmwoZmlsZSkgewogICAgICB1cGxvYWRCeVBpZWNlcyh7CiAgICAgICAgZmlsZTogZmlsZSwgLy8g6KeG6aKR5a6e5L2TCiAgICAgICAgcGllY2VTaXplOiAzLCAvLyDliIbniYflpKflsI8KICAgICAgICBzdWNjZXNzOiAoZGF0YSkgPT4gewogICAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUudmlkZW9fbGluayA9IGRhdGEuZmlsZV9wYXRoOwogICAgICAgICAgdGhpcy5wcm9ncmVzcyA9IDEwMDsKICAgICAgICB9LAogICAgICAgIGVycm9yOiAoZSkgPT4gewogICAgICAgICAgdGhpcy4kTWVzc2FnZS5lcnJvcihlLm1zZyk7CiAgICAgICAgfSwKICAgICAgICB1cGxvYWRpbmc6IChjaHVuaywgYWxsQ2h1bmspID0+IHsKICAgICAgICAgIHRoaXMudmlkZW9JbmcgPSB0cnVlOwogICAgICAgICAgbGV0IHN0ID0gTWF0aC5mbG9vcigoY2h1bmsgLyBhbGxDaHVuaykgKiAxMDApOwogICAgICAgICAgdGhpcy5wcm9ncmVzcyA9IHN0OwogICAgICAgIH0sCiAgICAgIH0pOwogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgLy8g5Yig6Zmk6KeG6aKR77ybCiAgICBkZWxWaWRlbygpIHsKICAgICAgbGV0IHRoYXQgPSB0aGlzOwogICAgICB0aGF0LiRzZXQodGhhdC5mb3JtVmFsaWRhdGUsICd2aWRlb19saW5rJywgJycpOwogICAgfSwKICAgIC8v6I635Y+W6KeG6aKR5LiK5Lyg57G75Z6LCiAgICB1cGxvYWRUeXBlKCkgewogICAgICB1cGxvYWRUeXBlKCkudGhlbigocmVzKSA9PiB7CiAgICAgICAgdGhpcy51cGxvYWRfdHlwZSA9IHJlcy5kYXRhLnVwbG9hZF90eXBlOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDkuIrkvKDmiJDlip8KICAgIGhhbmRsZVN1Y2Nlc3MocmVzLCBmaWxlLCBmaWxlTGlzdCkgewogICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUudmlkZW9fbGluayA9IHJlcy5kYXRhLnNyYzsKICAgICAgICB0aGlzLiRNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgfQogICAgfSwKICAgIGdldFRva2VuKCkgewogICAgICB0aGlzLmhlYWRlclsnQXV0aG9yaS16YXRpb24nXSA9ICdCZWFyZXIgJyArIGdldENvb2tpZXMoJ3Rva2VuJyk7CiAgICB9LAogICAgYmVmb3JlVXBsb2FkKCkgewogICAgICB0aGlzLnVwbG9hZERhdGEgPSB7fTsKICAgICAgbGV0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJlc29sdmUodHJ1ZSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gcHJvbWlzZTsKICAgIH0sCiAgICB6aF91cGxvYWRGaWxlKCkgewogICAgICBpZiAodGhpcy52aWRlb0xpbmspIHsKICAgICAgICB0aGlzLmZvcm1WYWxpZGF0ZS52aWRlb19saW5rID0gdGhpcy52aWRlb0xpbms7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kcmVmcy5yZWZpZC5jbGljaygpOwogICAgICB9CiAgICB9LAogICAgemhfdXBsb2FkRmlsZV9jaGFuZ2UoZXZmaWxlKSB7CiAgICAgIGxldCB0aGF0ID0gdGhpczsKICAgICAgaWYgKGV2ZmlsZS50YXJnZXQuZmlsZXNbMF0udHlwZSAhPT0gJ3ZpZGVvL21wNCcpIHsKICAgICAgICByZXR1cm4gdGhhdC4kTWVzc2FnZS5lcnJvcign5Y+q6IO95LiK5LygbXA05paH5Lu2Jyk7CiAgICAgIH0KICAgICAgcHJvZHVjdEdldFRlbXBLZXlzQXBpKCkudGhlbigocmVzKSA9PiB7CiAgICAgICAgdGhhdC4kdmlkZW9DbG91ZAogICAgICAgICAgLnZpZGVvVXBsb2FkKHsKICAgICAgICAgICAgdHlwZTogcmVzLmRhdGEudHlwZSwKICAgICAgICAgICAgZXZmaWxlOiBldmZpbGUsCiAgICAgICAgICAgIHJlczogcmVzLAogICAgICAgICAgICB1cGxvYWRpbmcoc3RhdHVzLCBwcm9ncmVzcykgewogICAgICAgICAgICAgIHRoYXQudXBsb2FkLnZpZGVvSW5nID0gc3RhdHVzOwogICAgICAgICAgICB9LAogICAgICAgICAgfSkKICAgICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgICAgdGhhdC5mb3JtVmFsaWRhdGUudmlkZW9fbGluayA9IHJlcy51cmw7CiAgICAgICAgICAgIHRoYXQuJE1lc3NhZ2Uuc3VjY2Vzcygn6KeG6aKR5LiK5Lyg5oiQ5YqfJyk7CiAgICAgICAgICB9KQogICAgICAgICAgLmNhdGNoKChyZXMpID0+IHsKICAgICAgICAgICAgdGhhdC4kTWVzc2FnZS5lcnJvcihyZXMpOwogICAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIHVwbG9hZHMoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2dldFZpZGVvJywgdGhpcy5mb3JtVmFsaWRhdGUudmlkZW9fbGluayk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/components/uploadVideo2","sourcesContent":["<template>\n  <div>\n    <div class=\"mt20 ml20\">\n      <Input class=\"perW35\" v-model=\"videoLink\" placeholder=\"请输入视频链接\" />\n      <input type=\"file\" ref=\"refid\" style=\"display: none\" @change=\"zh_uploadFile_change\" />\n      <Button\n        v-if=\"upload_type !== '1' || videoLink\"\n        type=\"primary\"\n        icon=\"ios-cloud-upload-outline\"\n        class=\"ml10\"\n        @click=\"zh_uploadFile\"\n        >{{ videoLink ? '确认添加' : '上传视频' }}</Button\n      >\n      <Upload\n        v-if=\"upload_type === '1' && !videoLink\"\n        :show-upload-list=\"false\"\n        :action=\"fileUrl\"\n        class=\"ml10\"\n        :before-upload=\"videoSaveToUrl\"\n        :data=\"uploadData\"\n        :headers=\"header\"\n        :multiple=\"true\"\n        style=\"display: inline-block\"\n      >\n        <Button type=\"primary\" icon=\"ios-cloud-upload-outline\">上传视频</Button>\n      </Upload>\n      <Progress :percent=\"progress\" :stroke-width=\"5\" v-if=\"upload.videoIng\" />\n      <div class=\"iview-video-style\" v-if=\"formValidate.video_link\">\n        <video\n          style=\"width: 100%; height: 100% !important; border-radius: 10px\"\n          :src=\"formValidate.video_link\"\n          controls=\"controls\"\n        >\n          您的浏览器不支持 video 标签。\n        </video>\n        <div class=\"mark\"></div>\n        <Icon type=\"ios-trash-outline\" class=\"iconv\" @click=\"delVideo\" />\n      </div>\n    </div>\n    <div class=\"mt50 ml20\">\n      <Button type=\"primary\" @click=\"uploads\">确认</Button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { uploadByPieces } from '@/utils/upload'; //引入uploadByPieces方法\nimport { productGetTempKeysApi, uploadType } from '@/api/product';\nimport Setting from '@/setting';\nimport { getCookies } from '@/libs/util';\n// import \"../../../public/UEditor/dialogs/internal\";\nexport default {\n  name: 'vide11o',\n  data() {\n    return {\n      fileUrl: Setting.apiBaseURL + '/file/upload',\n      upload: {\n        videoIng: false, // 是否显示进度条；\n      },\n      progress: 0, // 进度条默认0\n      videoLink: '',\n      formValidate: {\n        video_link: '',\n      },\n      upload_type: '',\n      uploadData: {},\n      header: {},\n    };\n  },\n  created() {\n    this.uploadType();\n    this.getToken();\n  },\n  methods: {\n    videoSaveToUrl(file) {\n      uploadByPieces({\n        file: file, // 视频实体\n        pieceSize: 3, // 分片大小\n        success: (data) => {\n          this.formValidate.video_link = data.file_path;\n          this.progress = 100;\n        },\n        error: (e) => {\n          this.$Message.error(e.msg);\n        },\n        uploading: (chunk, allChunk) => {\n          this.videoIng = true;\n          let st = Math.floor((chunk / allChunk) * 100);\n          this.progress = st;\n        },\n      });\n      return false;\n    },\n    // 删除视频；\n    delVideo() {\n      let that = this;\n      that.$set(that.formValidate, 'video_link', '');\n    },\n    //获取视频上传类型\n    uploadType() {\n      uploadType().then((res) => {\n        this.upload_type = res.data.upload_type;\n      });\n    },\n    // 上传成功\n    handleSuccess(res, file, fileList) {\n      if (res.status === 200) {\n        this.formValidate.video_link = res.data.src;\n        this.$Message.success(res.msg);\n      } else {\n        this.$Message.error(res.msg);\n      }\n    },\n    getToken() {\n      this.header['Authori-zation'] = 'Bearer ' + getCookies('token');\n    },\n    beforeUpload() {\n      this.uploadData = {};\n      let promise = new Promise((resolve) => {\n        this.$nextTick(function () {\n          resolve(true);\n        });\n      });\n      return promise;\n    },\n    zh_uploadFile() {\n      if (this.videoLink) {\n        this.formValidate.video_link = this.videoLink;\n      } else {\n        this.$refs.refid.click();\n      }\n    },\n    zh_uploadFile_change(evfile) {\n      let that = this;\n      if (evfile.target.files[0].type !== 'video/mp4') {\n        return that.$Message.error('只能上传mp4文件');\n      }\n      productGetTempKeysApi().then((res) => {\n        that.$videoCloud\n          .videoUpload({\n            type: res.data.type,\n            evfile: evfile,\n            res: res,\n            uploading(status, progress) {\n              that.upload.videoIng = status;\n            },\n          })\n          .then((res) => {\n            that.formValidate.video_link = res.url;\n            that.$Message.success('视频上传成功');\n          })\n          .catch((res) => {\n            that.$Message.error(res);\n          });\n      });\n    },\n    uploads() {\n      this.$emit('getVideo', this.formValidate.video_link);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.iview-video-style {\n  width: 40%;\n  height: 180px;\n  border-radius: 10px;\n  background-color: #707070;\n  margin-top: 10px;\n  position: relative;\n  overflow: hidden;\n}\n.iview-video-style .iconv {\n  color: #fff;\n  line-height: 180px;\n  width: 50px;\n  height: 50px;\n  display: inherit;\n  font-size: 26px;\n  position: absolute;\n  top: -74px;\n  left: 50%;\n  margin-left: -25px;\n}\n.iview-video-style .mark {\n  position: absolute;\n  width: 100%;\n  height: 30px;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  text-align: center;\n}\n</style>\n"]}]}