{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/components/mobileConfigDiy/c_home_product.vue?vue&type=style&index=0&id=5136fd7a&scoped=true&lang=stylus&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/components/mobileConfigDiy/c_home_product.vue","mtime":1689324015152},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/@vue/cli-service/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucHJvCiAgICBwYWRkaW5nIDAgMTVweAogICAgLnRpcHMKICAgICAgICBoZWlnaHQgNTBweAogICAgICAgIGxpbmUtaGVpZ2h0IDUwcHgKICAgICAgICBjb2xvciAjOTk5CiAgICAgICAgZm9udC1zaXplIDEycHgKICAgICAgICBib3JkZXItYm90dG9tIDFweCBzb2xpZCByZ2JhKDAsMCwwLDAuMDUpOwouYnRuLWJveAogICAgcGFkZGluZy1ib3R0b20gMjBweAo="},{"version":3,"sources":["c_home_product.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"c_home_product.vue","sourceRoot":"src/components/mobileConfigDiy","sourcesContent":["<template>\n  <div class=\"mobile-config pro\">\n    <div v-for=\"(item, key) in rCom\" :key=\"key\">\n      <component\n        :is=\"item.components.name\"\n        :configObj=\"configObj\"\n        ref=\"childData\"\n        :configNme=\"item.configNme\"\n        :key=\"key\"\n        @getConfig=\"getConfig\"\n        :index=\"activeIndex\"\n        :num=\"item.num\"\n      ></component>\n    </div>\n    <rightBtn :activeIndex=\"activeIndex\" :configObj=\"configObj\"></rightBtn>\n  </div>\n</template>\n\n<script>\nimport toolCom from '@/components/mobileConfigRightDiy/index.js';\nimport { mapState, mapMutations, mapActions } from 'vuex';\nimport rightBtn from '@/components/rightBtn/index.vue';\nimport { getGroomList } from '@/api/diy';\nexport default {\n  name: 'c_home_product',\n  componentsName: 'home_product',\n  cname: '促销列表',\n  props: {\n    activeIndex: {\n      type: null,\n    },\n    num: {\n      type: null,\n    },\n    index: {\n      type: null,\n    },\n  },\n  components: {\n    ...toolCom,\n    rightBtn,\n  },\n  data() {\n    return {\n      configObj: {},\n      rCom: [\n        {\n          components: toolCom.c_set_up,\n          configNme: 'setUp',\n        },\n      ],\n    };\n  },\n  watch: {\n    num(nVal) {\n      // debugger;\n      let value = JSON.parse(JSON.stringify(this.$store.state.mobildConfig.defaultArray[nVal]));\n      this.configObj = value;\n    },\n    configObj: {\n      handler(nVal, oVal) {\n        this.$store.commit('mobildConfig/UPDATEARR', { num: this.num, val: nVal });\n      },\n      deep: true,\n    },\n    'configObj.setUp.tabVal': {\n      handler(nVal, oVal) {\n        var arr = [this.rCom[0]];\n        if (nVal == 0) {\n          let tempArr = [\n            {\n              components: toolCom.c_product,\n              configNme: 'tabConfig',\n            },\n            {\n              components: toolCom.c_input_number,\n              configNme: 'numConfig',\n            },\n            {\n              components: toolCom.c_is_show,\n              configNme: 'titleShow',\n            },\n            {\n              components: toolCom.c_is_show,\n              configNme: 'opriceShow',\n            },\n            {\n              components: toolCom.c_is_show,\n              configNme: 'priceShow',\n            },\n            {\n              components: toolCom.c_is_show,\n              configNme: 'couponShow',\n            },\n          ];\n          this.rCom = arr.concat(tempArr);\n        } else {\n          let tempArr = [\n            {\n              components: toolCom.c_txt_tab,\n              configNme: 'titleConfig',\n            },\n            {\n              components: toolCom.c_bg_color,\n              configNme: 'themeColor',\n            },\n            {\n              components: toolCom.c_bg_color,\n              configNme: 'fontColor',\n            },\n            {\n              components: toolCom.c_bg_color,\n              configNme: 'labelColor',\n            },\n            {\n              components: toolCom.c_slider,\n              configNme: 'mbConfig',\n            },\n          ];\n          this.rCom = arr.concat(tempArr);\n        }\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    this.$nextTick(() => {\n      let value = JSON.parse(JSON.stringify(this.$store.state.mobildConfig.defaultArray[this.num]));\n      this.configObj = value;\n    });\n  },\n  methods: {\n    getConfig(data) {\n      let tabConfig = this.configObj.tabConfig;\n      if (data.name == 'radio') {\n        return;\n      }\n      if (data.name == 'delete' && !tabConfig.list.length) {\n        return (this.configObj.productList.list = []);\n      }\n      let val = {\n        page: 1,\n        limit: parseInt(this.configObj.numConfig.val),\n      };\n      let type = parseInt(tabConfig.list[tabConfig.tabCur].link.activeVal);\n      getGroomList(type, val)\n        .then((res) => {\n          this.configObj.productList.list = res.data.list;\n        })\n        .catch((err) => {\n          this.$Message.error(err.msg);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"stylus\">\n.pro\n    padding 0 15px\n    .tips\n        height 50px\n        line-height 50px\n        color #999\n        font-size 12px\n        border-bottom 1px solid rgba(0,0,0,0.05);\n.btn-box\n    padding-bottom 20px\n</style>\n"]}]}