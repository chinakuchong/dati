{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/components/mobileConfigDiy/c_home_title.vue?vue&type=style&index=0&id=1f2591ba&scoped=true&lang=stylus&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/components/mobileConfigDiy/c_home_title.vue","mtime":1689324015152},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/@vue/cli-service/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRpdGxlLXRpcHMKICAgIHBhZGRpbmctYm90dG9tIDEwcHgKICAgIGZvbnQtc2l6ZSAxNHB4CiAgICBjb2xvciAjMzMzCiAgICBzcGFuCiAgICAgICAgbWFyZ2luLXJpZ2h0IDE0cHgKICAgICAgICBjb2xvciAjOTk5Cg=="},{"version":3,"sources":["c_home_title.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;AACA;AACA;AACA;AACA","file":"c_home_title.vue","sourceRoot":"src/components/mobileConfigDiy","sourcesContent":["<template>\n  <div class=\"mobile-config\">\n    <div v-for=\"(item, key) in rCom\" :key=\"key\">\n      <component\n        :is=\"item.components.name\"\n        :configObj=\"configObj\"\n        ref=\"childData\"\n        :configNme=\"item.configNme\"\n        :key=\"key\"\n        @getConfig=\"getConfig\"\n        :index=\"activeIndex\"\n        :num=\"item.num\"\n      ></component>\n    </div>\n    <rightBtn :activeIndex=\"activeIndex\" :configObj=\"configObj\"></rightBtn>\n  </div>\n</template>\n\n<script>\nimport toolCom from '@/components/mobileConfigRightDiy/index.js';\nimport rightBtn from '@/components/rightBtn/index.vue';\nimport { mapState, mapMutations, mapActions } from 'vuex';\nexport default {\n  name: 'c_home_bargain',\n  componentsName: 'home_bargain',\n  components: {\n    ...toolCom,\n    rightBtn,\n  },\n  props: {\n    activeIndex: {\n      type: null,\n    },\n    num: {\n      type: null,\n    },\n    index: {\n      type: null,\n    },\n  },\n  data() {\n    return {\n      configObj: {},\n      rCom: [\n        {\n          components: toolCom.c_set_up,\n          configNme: 'setUp',\n        },\n      ],\n    };\n  },\n  watch: {\n    num(nVal) {\n      let value = JSON.parse(JSON.stringify(this.$store.state.mobildConfig.defaultArray[nVal]));\n      this.configObj = value;\n    },\n    configObj: {\n      handler(nVal, oVal) {\n        this.$store.commit('mobildConfig/UPDATEARR', { num: this.num, val: nVal });\n      },\n      deep: true,\n    },\n    'configObj.setUp.tabVal': {\n      handler(nVal, oVal) {\n        var arr = [this.rCom[0]];\n        if (nVal == 0) {\n          let tempArr = [\n            {\n              components: toolCom.c_input_item,\n              configNme: 'titleConfig',\n            },\n            {\n              components: toolCom.c_input_item,\n              configNme: 'linkConfig',\n            },\n          ];\n          this.rCom = arr.concat(tempArr);\n        } else {\n          let tempArr = [\n            {\n              components: toolCom.c_bg_color,\n              configNme: 'titleColor',\n            },\n            {\n              components: toolCom.c_bg_color,\n              configNme: 'themeColor',\n            },\n            {\n              components: toolCom.c_txt_tab,\n              configNme: 'textPosition',\n            },\n            {\n              components: toolCom.c_txt_tab,\n              configNme: 'textStyle',\n            },\n            {\n              components: toolCom.c_txt_tab,\n              configNme: 'bgStyle',\n            },\n            {\n              components: toolCom.c_slider,\n              configNme: 'prConfig',\n            },\n            {\n              components: toolCom.c_slider,\n              configNme: 'fontSize',\n            },\n            {\n              components: toolCom.c_slider,\n              configNme: 'mbConfig',\n            },\n          ];\n          this.rCom = arr.concat(tempArr);\n        }\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    this.$nextTick(() => {\n      let value = JSON.parse(JSON.stringify(this.$store.state.mobildConfig.defaultArray[this.num]));\n      this.configObj = value;\n    });\n  },\n  methods: {\n    // 获取组件参数\n    getConfig(data) {},\n  },\n};\n</script>\n\n<style scoped lang=\"stylus\">\n.title-tips\n    padding-bottom 10px\n    font-size 14px\n    color #333\n    span\n        margin-right 14px\n        color #999\n</style>\n"]}]}