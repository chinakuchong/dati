{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/pages/marketing/lottery/addGoods.vue?vue&type=template&id=7f125f88&scoped=true&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/pages/marketing/lottery/addGoods.vue","mtime":1689324015223},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICBbCiAgICAgIF9jKAogICAgICAgICJGb3JtIiwKICAgICAgICB7CiAgICAgICAgICByZWY6ICJmb3JtVmFsaWRhdGUiLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgbW9kZWw6IF92bS5mb3JtVmFsaWRhdGUsCiAgICAgICAgICAgIHJ1bGVzOiBfdm0ucnVsZVZhbGlkYXRlLAogICAgICAgICAgICAibGFiZWwtd2lkdGgiOiA5MAogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJGb3JtSXRlbSIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgbGFiZWw6ICLlpZblk4EiLCBwcm9wOiAidHlwZSIgfSB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiUmFkaW9Hcm91cCIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtVmFsaWRhdGUudHlwZSwKICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0uZm9ybVZhbGlkYXRlLCAidHlwZSIsICQkdikKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJmb3JtVmFsaWRhdGUudHlwZSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoIlJhZGlvIiwgeyBhdHRyczogeyBsYWJlbDogMSB9IH0sIFtfdm0uX3YoIuacquS4reWlliIpXSksCiAgICAgICAgICAgICAgICAgIF9jKCJSYWRpbyIsIHsgYXR0cnM6IHsgbGFiZWw6IDUgfSB9LCBbX3ZtLl92KCLkvJjmg6DliLgiKV0pLAogICAgICAgICAgICAgICAgICBfYygiUmFkaW8iLCB7IGF0dHJzOiB7IGxhYmVsOiAyIH0gfSwgW192bS5fdigi56ev5YiGIildKSwKICAgICAgICAgICAgICAgICAgX2MoIlJhZGlvIiwgeyBhdHRyczogeyBsYWJlbDogNiB9IH0sIFtfdm0uX3YoIuWVhuWTgSIpXSksCiAgICAgICAgICAgICAgICAgIF9jKCJSYWRpbyIsIHsgYXR0cnM6IHsgbGFiZWw6IDQgfSB9LCBbX3ZtLl92KCLnuqLljIUiKV0pLAogICAgICAgICAgICAgICAgICBfYygiUmFkaW8iLCB7IGF0dHJzOiB7IGxhYmVsOiAzIH0gfSwgW192bS5fdigi5L2Z6aKdIildKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfdm0uZm9ybVZhbGlkYXRlLnR5cGUgPT0gNQogICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgIkZvcm1JdGVtIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgbGFiZWw6ICLotaDpgIHkvJjmg6DliLjvvJoiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX3ZtLmNvdXBvbk5hbWUubGVuZ3RoCiAgICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJtYjIwIiB9LAogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLmNvdXBvbk5hbWUsIGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIlRhZyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogaW5kZXgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGNsb3NhYmxlOiAiIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJvbi1jbG9zZSI6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5oYW5kbGVDbG9zZShpdGVtKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKGl0ZW0udGl0bGUpKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgIV92bS5jb3Vwb25OYW1lLmxlbmd0aAogICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJCdXR0b24iLAogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogInByaW1hcnkiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS5hZGRDb3Vwb24gfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCLmt7vliqDkvJjmg6DliLgiKV0KICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgIFsyLCAzLCA0XS5pbmNsdWRlcyhfdm0uZm9ybVZhbGlkYXRlLnR5cGUpCiAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAiRm9ybUl0ZW0iLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiBbMywgNF0uaW5jbHVkZXMoX3ZtLmZvcm1WYWxpZGF0ZS50eXBlKQogICAgICAgICAgICAgICAgICAgICAgPyAi6YeR6aKd5L+h5oGvIgogICAgICAgICAgICAgICAgICAgICAgOiAi56ev5YiG5pWw6YePIiwKICAgICAgICAgICAgICAgICAgICBwcm9wOiAibnVtIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiSW5wdXROdW1iZXIiLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICIzMDBweCIgfSwKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICLor7fovpPlhaXph5Hpop3mlbDph48iLAogICAgICAgICAgICAgICAgICAgICAgbWF4OiBfdm0uZm9ybVZhbGlkYXRlLnR5cGUgPT0gNCA/IDk5OSA6IDk5OTk5LAogICAgICAgICAgICAgICAgICAgICAgbWluOiAxCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtVmFsaWRhdGUubnVtLAogICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0uZm9ybVZhbGlkYXRlLCAibnVtIiwgJCR2KQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJmb3JtVmFsaWRhdGUubnVtIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibWwxMDAgZ3JleSIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICJcbiAgICAgICAgIiArCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcygKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ybVZhbGlkYXRlLnR5cGUgPT0gMwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAi55So5oi36aKG5Y+W5L2Z6aKd5ZCO5Lya6Ieq5Yqo5Yiw6LSm5L2Z6aKd6LSm5oi3IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uZm9ybVZhbGlkYXRlLnR5cGUgPT0gNAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAi55So5oi36aKG5Y+W57qi5YyF5ZCO5Lya6Ieq5Yqo5Yiw6LSm5b6u5L+h6Zu26ZKx77yM5re75Yqg5q2k5aWW5ZOB6ZyA5byA6YCa5b6u5L+h5pSv5LuYLOW5tuS4lOi0puaIt+S4remHkemineS4jeiDveWwj+S6jjHlhYMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICIiCiAgICAgICAgICAgICAgICAgICAgICAgICkgKwogICAgICAgICAgICAgICAgICAgICAgICAiXG4gICAgICAiCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICBfdm0uZm9ybVZhbGlkYXRlLnR5cGUgPT0gNgogICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgIkZvcm1JdGVtIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgbGFiZWw6ICLllYblk4EiLCBwcm9wOiAiZ29vZHNfaW1hZ2UiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX3ZtLmZvcm1WYWxpZGF0ZS5nb29kc19pbWFnZQogICAgICAgICAgICAgICAgICAgID8gWwogICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidXBsb2FkLWxpc3QiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiBfdm0uZm9ybVZhbGlkYXRlLmdvb2RzX2ltYWdlIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoIkljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJpb3MtY2xvc2UtY2lyY2xlIiwgc2l6ZTogIjE2IiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ucmVtb3ZlR29vZHMoKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgIDogX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidXBMb2FkIHBpY3RydWVUYWIgYWNlYS1yb3cgcm93LWNlbnRlci13cmFwcGVyIgogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoIkljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAiaW9zLWNhbWVyYS1vdXRsaW5lIiwgc2l6ZTogIjI2IiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS5jaGFuZ2VHb29kcyB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDIKICAgICAgICAgICAgICApCiAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICBfYygKICAgICAgICAgICAgIkZvcm1JdGVtIiwKICAgICAgICAgICAgeyBhdHRyczogeyBsYWJlbDogIuWlluWTgeWQjeensCIsIHByb3A6ICJuYW1lIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiSW5wdXQiLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjMwMHB4IiB9LAogICAgICAgICAgICAgICAgYXR0cnM6IHsgbWF4bGVuZ3RoOiAxMCwgcGxhY2Vob2xkZXI6ICLor7fovpPlhaXlpZblk4HlkI3np7AiIH0sCiAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm1WYWxpZGF0ZS5uYW1lLAogICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm1WYWxpZGF0ZSwgIm5hbWUiLCAkJHYpCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJmb3JtVmFsaWRhdGUubmFtZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJGb3JtSXRlbSIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgbGFiZWw6ICLlpZblk4Hlm77niYciLCBwcm9wOiAiaW1hZ2UiIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF92bS5mb3JtVmFsaWRhdGUuaW1hZ2UKICAgICAgICAgICAgICAgID8gWwogICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAidXBsb2FkLWxpc3QiIH0sCiAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7IGF0dHJzOiB7IHNyYzogX3ZtLmZvcm1WYWxpZGF0ZS5pbWFnZSB9IH0pLAogICAgICAgICAgICAgICAgICAgICAgICBfYygiSWNvbiIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAiaW9zLWNsb3NlLWNpcmNsZSIsIHNpemU6ICIxNiIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnJlbW92ZSgpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIDogX2MoCiAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgICAgICJ1cExvYWQgcGljdHJ1ZVRhYiBhY2VhLXJvdyByb3ctY2VudGVyLXdyYXBwZXIiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygiSWNvbiIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImlvcy1jYW1lcmEtb3V0bGluZSIsIHNpemU6ICIyNiIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0ubW9kYWxQaWMgPSB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDIKICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgIkZvcm1JdGVtIiwKICAgICAgICAgICAgeyBhdHRyczogeyBsYWJlbDogIuWlluWTgeaVsOmHjyIsIHByb3A6ICJ0b3RhbCIgfSB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoIklucHV0TnVtYmVyIiwgewogICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICIzMDBweCIgfSwKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAi6K+36L6T5YWl5aWW5ZOB5pWw6YePIiwKICAgICAgICAgICAgICAgICAgbWF4OiA5OTk5OSwKICAgICAgICAgICAgICAgICAgbWluOiAwLAogICAgICAgICAgICAgICAgICBwcmVjaXNpb246IDAKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm1WYWxpZGF0ZS50b3RhbCwKICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5mb3JtVmFsaWRhdGUsICJ0b3RhbCIsICQkdikKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImZvcm1WYWxpZGF0ZS50b3RhbCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJGb3JtSXRlbSIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgbGFiZWw6ICLlpZblk4HmnYPph40iLCBwcm9wOiAiY2hhbmNlIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiSW5wdXROdW1iZXIiLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjMwMHB4IiB9LAogICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICLor7fovpPlhaXlpZblk4HmnYPph40iLAogICAgICAgICAgICAgICAgICBtYXg6IDEwMCwKICAgICAgICAgICAgICAgICAgbWluOiAxLAogICAgICAgICAgICAgICAgICBwcmVjaXNpb246IDAKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm1WYWxpZGF0ZS5jaGFuY2UsCiAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0uZm9ybVZhbGlkYXRlLCAiY2hhbmNlIiwgJCR2KQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZm9ybVZhbGlkYXRlLmNoYW5jZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJGb3JtSXRlbSIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgbGFiZWw6ICLmj5DnpLror60iLCBwcm9wOiAicHJvbXB0IiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiSW5wdXQiLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjMwMHB4IiB9LAogICAgICAgICAgICAgICAgYXR0cnM6IHsgbWF4bGVuZ3RoOiAxNSwgcGxhY2Vob2xkZXI6ICLor7fovpPlhaXmj5DnpLror60iIH0sCiAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm1WYWxpZGF0ZS5wcm9tcHQsCiAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0uZm9ybVZhbGlkYXRlLCAicHJvbXB0IiwgJCR2KQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZm9ybVZhbGlkYXRlLnByb21wdCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJGb3JtSXRlbSIsCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJCdXR0b24iLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAicHJpbWFyeSIgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmhhbmRsZVN1Ym1pdCgiZm9ybVZhbGlkYXRlIikKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KCLmj5DkuqQiKV0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgIk1vZGFsIiwKICAgICAgICB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICB3aWR0aDogIjk1MHB4IiwKICAgICAgICAgICAgc2Nyb2xsYWJsZTogIiIsCiAgICAgICAgICAgICJmb290ZXItaGlkZSI6ICIiLAogICAgICAgICAgICBjbG9zYWJsZTogIiIsCiAgICAgICAgICAgIHRpdGxlOiAi5LiK5Lyg5Zu+54mHIiwKICAgICAgICAgICAgIm1hc2stY2xvc2FibGUiOiBmYWxzZSwKICAgICAgICAgICAgInotaW5kZXgiOiAxCiAgICAgICAgICB9LAogICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgdmFsdWU6IF92bS5tb2RhbFBpYywKICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgIF92bS5tb2RhbFBpYyA9ICQkdgogICAgICAgICAgICB9LAogICAgICAgICAgICBleHByZXNzaW9uOiAibW9kYWxQaWMiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfdm0ubW9kYWxQaWMKICAgICAgICAgICAgPyBfYygidXBsb2FkUGljdHVyZXMiLCB7CiAgICAgICAgICAgICAgICBhdHRyczogeyBpc0Nob2ljZTogX3ZtLmlzQ2hvaWNlIH0sCiAgICAgICAgICAgICAgICBvbjogeyBnZXRQaWM6IF92bS5nZXRQaWMgfQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgIk1vZGFsIiwKICAgICAgICB7CiAgICAgICAgICBzdGF0aWNDbGFzczogInBheW1lbnRGb290ZXIiLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgdGl0bGU6ICLllYblk4HliJfooagiLAogICAgICAgICAgICBmb290ZXJIaWRlOiAiIiwKICAgICAgICAgICAgc2Nyb2xsYWJsZTogIiIsCiAgICAgICAgICAgIHdpZHRoOiAiOTAwIgogICAgICAgICAgfSwKICAgICAgICAgIG9uOiB7ICJvbi1jYW5jZWwiOiBfdm0uY2FuY2VsIH0sCiAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICB2YWx1ZTogX3ZtLm1vZGFscywKICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgIF92bS5tb2RhbHMgPSAkJHYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZXhwcmVzc2lvbjogIm1vZGFscyIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJnb29kcy1saXN0IiwgewogICAgICAgICAgICByZWY6ICJnb29kc2xpc3QiLAogICAgICAgICAgICBvbjogeyBnZXRQcm9kdWN0SWQ6IF92bS5nZXRQcm9kdWN0SWQgfQogICAgICAgICAgfSkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoImNvdXBvbi1saXN0IiwgewogICAgICAgIHJlZjogImNvdXBvblRlbXBsYXRlcyIsCiAgICAgICAgYXR0cnM6IHsgbHVja0RyYXc6IHRydWUgfSwKICAgICAgICBvbjogeyBnZXRDb3Vwb25JZDogX3ZtLmdldENvdXBvbklkIH0KICAgICAgfSkKICAgIF0sCiAgICAxCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}