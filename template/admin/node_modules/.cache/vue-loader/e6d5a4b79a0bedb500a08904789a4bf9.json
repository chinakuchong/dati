{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/pages/order/orderList/splitList.vue?vue&type=style&index=0&id=06267980&scoped=true&lang=stylus&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/pages/order/orderList/splitList.vue","mtime":1689324015244},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/@vue/cli-service/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltZyB7CiAgaGVpZ2h0OiAzNnB4OwogIGRpc3BsYXk6IGJsb2NrOwp9CgoudGFiQm94IHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwoKICAudGFiQm94X2ltZyB7CiAgICB3aWR0aDogMzZweDsKICAgIGhlaWdodDogMzZweDsKCiAgICBpbWcgewogICAgICB3aWR0aDogMTAwJTsKICAgICAgaGVpZ2h0OiAxMDAlOwogICAgfQogIH0KCiAgLnRhYkJveF90aXQgewogICAgd2lkdGg6IDYwJTsKICAgIGZvbnQtc2l6ZTogMTJweCAhaW1wb3J0YW50OwogICAgbWFyZ2luOiAwIDJweCAwIDEwcHg7CiAgICBsZXR0ZXItc3BhY2luZzogMXB4OwogICAgcGFkZGluZzogNXB4IDA7CiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogIH0KfQoKLm9yZGVyRGF0YSA+Pj4uaXZ1LXRhYmxlLWNlbGwgewogIHBhZGRpbmctbGVmdDogMCAhaW1wb3J0YW50Owp9CgoudmVydGljYWwtY2VudGVyLW1vZGFsIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7Cn0KCi5vcmRlckRhdGEgLml2dS10YWJsZSB7CiAgb3ZlcmZsb3c6IHZpc2libGUgIWltcG9ydGFudDsKfQoKLm9yZGVyRGF0YSAuaXZ1LXRhYmxlIHRoIHsKICBvdmVyZmxvdzogdmlzaWJsZSAhaW1wb3J0YW50Owp9Cgoub3JkZXJEYXRhIC5pdnUtdGFibGUtaGVhZGVyIHsKICBvdmVyZmxvdzogdmlzaWJsZSAhaW1wb3J0YW50Owp9CgovZGVlcC8uaXZ1LXRhYmxlLWhlYWRlciB7CiAgLy8gb3ZlcmZsb3c6IHZpc2libGU7Cn0KCi9kZWVwLy5pdnUtdGFibGUgdGggewogIG92ZXJmbG93OiB2aXNpYmxlOwp9CgovZGVlcC8uc2VsZWN0LWl0ZW06aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6ICNmM2YzZjM7Cn0KCi9kZWVwLy5zZWxlY3Qtb24gewogIGRpc3BsYXk6IGJsb2NrOwp9CgovZGVlcC8uc2VsZWN0LWl0ZW0ub24gewogIGJhY2tncm91bmQ6ICNmM2YzZjM7Cn0KCi5waWN0cnVlLWJveCB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtOiBjZW50ZXI7Cn0KCi5waWN0cnVlIHsKICB3aWR0aDogMjVweDsKICBoZWlnaHQ6IDI1cHg7Cn0KCi5yZXR1cm4gewogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgcGFkZGluZzogM3B4IDVweDsKICBtYXJnaW4tbGVmdDogMTVweDsKICBib3JkZXItcmFkaXVzOiAzcHg7CiAgY3Vyc29yOiBwb2ludGVyOwp9Cg=="},{"version":3,"sources":["splitList.vue"],"names":[],"mappingsxBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"splitList.vue","sourceRoot":"src/pages/order/orderList","sourcesContent":["<template>\n  <div>\n    <div class=\"i-layout-page-header\">\n      <div class=\"i-layout-page-header\">\n        <span class=\"ivu-page-header-title\">子订单列表</span>\n        <span class=\"return\" @click=\"$router.go(-1)\">返回</span>\n      </div>\n    </div>\n    <Table\n      :columns=\"columns\"\n      :data=\"orderList\"\n      ref=\"table\"\n      :loading=\"loading\"\n      highlight-row\n      no-data-text=\"暂无数据\"\n      no-filtered-data-text=\"暂无筛选结果\"\n      @on-selection-change=\"onSelectTab\"\n      @on-select-all=\"selectAll\"\n      @on-select-all-cancel=\"selectAll\"\n      @on-select-cancel=\"onSelectCancel\"\n      class=\"orderData mt25\"\n    >\n      <template slot-scope=\"{ row, index }\" slot=\"order_id\">\n        <span v-text=\"row.order_id\" style=\"display: block\"></span>\n        <span v-show=\"row.is_del === 1\" style=\"color: #ed4014; display: block\">用户已删除</span>\n      </template>\n      <template slot-scope=\"{ row, index }\" slot=\"nickname\">\n        <a @click=\"showUserInfo(row)\">{{ row.nickname }}</a>\n      </template>\n      <template slot-scope=\"{ row, index }\" slot=\"info\">\n        <div class=\"tabBox\" v-for=\"(val, i) in row._info\" :key=\"i\">\n          <div class=\"tabBox_img\" v-viewer>\n            <img\n              v-lazy=\"\n                val.cart_info.productInfo.attrInfo\n                  ? val.cart_info.productInfo.attrInfo.image\n                  : val.cart_info.productInfo.image\n              \"\n            />\n          </div>\n          <span class=\"tabBox_tit\">\n            {{ val.cart_info.productInfo.store_name + ' | '\n            }}{{ val.cart_info.productInfo.attrInfo ? val.cart_info.productInfo.attrInfo.suk : '' }}\n          </span>\n          <span class=\"tabBox_pice\">{{ '￥' + val.cart_info.truePrice + ' x ' + val.cart_info.cart_num }}</span>\n        </div>\n      </template>\n      <template slot-scope=\"{ row, index }\" slot=\"statusName\">\n        <div v-html=\"row.status_name.status_name\" class=\"pt5\"></div>\n        <div class=\"pictrue-box\">\n          <div v-viewer v-if=\"row.status_name.pics\" v-for=\"(item, index) in row.status_name.pics || []\" :key=\"index\">\n            <img class=\"pictrue mr10\" v-lazy=\"item\" :src=\"item\" />\n          </div>\n        </div>\n      </template>\n      <template slot-scope=\"{ row, index }\" slot=\"action\">\n        <a @click=\"edit(row)\" v-if=\"row._status === 1\">编辑</a>\n        <a\n          @click=\"sendOrder(row)\"\n          v-if=\"\n            (row._status === 2 || row._status === 8) &&\n            row.shipping_type === 1 &&\n            (row.pinkStatus === null || row.pinkStatus === 2)\n          \"\n          >发送货</a\n        >\n        <a @click=\"delivery(row)\" v-if=\"row._status === 4\">配送信息</a>\n        <a\n          @click=\"bindWrite(row)\"\n          v-if=\"row.shipping_type == 2 && row.status == 0 && row.paid == 1 && row.refund_status === 0\"\n          >立即核销</a\n        >\n        <Divider type=\"vertical\" v-if=\"row._status === 2 || row._status === 8\" />\n        <a @click=\"splitOrderDetail(row)\" v-if=\"row._status === 8\">查看子订单</a>\n\n        <Divider\n          type=\"vertical\"\n          v-if=\"\n            row._status === 1 ||\n            ((row._status === 2 || row._status === 8) && (row.pinkStatus === null || row.pinkStatus === 2)) ||\n            row._status === 4 ||\n            (row.shipping_type == 2 && row.status == 0 && row.paid == 1 && row.refund_status === 0)\n          \"\n        />\n        <template>\n          <Dropdown @on-click=\"changeMenu(row, $event)\">\n            <a href=\"javascript:void(0)\">\n              更多\n              <Icon type=\"ios-arrow-down\"></Icon>\n            </a>\n            <DropdownMenu slot=\"list\">\n              <DropdownItem\n                name=\"1\"\n                ref=\"ones\"\n                v-show=\"row._status === 1 && row.paid === 0 && row.pay_type === 'offline'\"\n                >立即支付</DropdownItem\n              >\n              <DropdownItem name=\"2\">订单详情</DropdownItem>\n              <DropdownItem name=\"3\">订单记录</DropdownItem>\n              <DropdownItem name=\"11\" v-show=\"row._status >= 3 && row.express_dump\">电子面单打印</DropdownItem>\n              <DropdownItem name=\"10\" v-show=\"row._status >= 2\">小票打印</DropdownItem>\n              <!-- <DropdownItem name=\"10\" v-show=\"row._status >= 2\">订单打印</DropdownItem> -->\n              <DropdownItem\n                name=\"4\"\n                v-show=\"\n                  row._status !== 1 ||\n                  (row._status === 3 && row.use_integral > 0 && row.use_integral >= row.back_integral)\n                \"\n                >订单备注</DropdownItem\n              >\n              <!-- <DropdownItem\n                name=\"5\"\n                v-show=\"\n                  row._status === 3 &&\n                  (parseFloat(row.pay_price) > parseFloat(row.refund_price) ||\n                    (row.pay_price == 0 &&\n                      [0, 1].indexOf(row.refund_status) !== -1))\n                \"\n                >立即退款</DropdownItem\n              >\n              <DropdownItem\n                name=\"6\"\n                v-show=\"\n                  row._status !== 1 &&\n                  row.use_integral > 0 &&\n                  row.use_integral >= row.back_integral\n                \"\n                >退积分</DropdownItem\n              >\n              <DropdownItem name=\"7\" v-show=\"row._status === 3\"\n                >不退款</DropdownItem\n              > -->\n              <DropdownItem name=\"8\" v-show=\"row._status === 4\">已收货</DropdownItem>\n              <DropdownItem name=\"9\" v-if=\"row.is_del == 1\">删除订单</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </template>\n      </template>\n    </Table>\n    <div class=\"acea-row row-right page\">\n      <!-- <Page\n        :total=\"page.total\"\n        :current=\"page.pageNum\"\n        show-elevator\n        show-total\n        @on-change=\"pageChange\"\n        :page-size=\"page.pageSize\"\n        @on-page-size-change=\"limitChange\"\n        show-sizer\n      /> -->\n    </div>\n    <!-- 编辑 退款 退积分 不退款-->\n    <edit-from ref=\"edits\" :FromData=\"FromData\" @submitFail=\"submitFail\"></edit-from>\n    <!-- 会员详情-->\n    <user-details ref=\"userDetails\"></user-details>\n    <!-- 详情 -->\n    <details-from ref=\"detailss\" :orderDatalist=\"orderDatalist\" :orderId=\"orderId\"></details-from>\n    <!-- 备注 -->\n    <order-remark ref=\"remarks\" :orderId=\"orderId\" @submitFail=\"submitFail\"></order-remark>\n    <!-- 记录 -->\n    <order-record ref=\"record\"></order-record>\n    <!-- 发送货 -->\n    <order-send ref=\"send\" :orderId=\"orderId\" :status=\"status\" @submitFail=\"submitFail\"></order-send>\n  </div>\n</template>\n\n<script>\nimport expandRow from './components/tableExpand.vue';\nimport {\n  orderList,\n  getOrdeDatas,\n  getDataInfo,\n  getRefundFrom,\n  getnoRefund,\n  refundIntegral,\n  getDistribution,\n  writeUpdate,\n  splitOrderList,\n} from '@/api/order';\nimport { mapState, mapMutations } from 'vuex';\nimport editFrom from '../../../components/from/from';\nimport detailsFrom from './handle/orderDetails';\nimport orderRemark from './handle/orderRemark';\nimport orderRecord from './handle/orderRecord';\nimport orderSend from './handle/orderSend';\nimport userDetails from '@/pages/user/list/handle/userDetails';\n\nexport default {\n  name: 'table_list',\n  components: {\n    expandRow,\n    editFrom,\n    detailsFrom,\n    orderRemark,\n    orderRecord,\n    orderSend,\n    userDetails,\n  },\n  props: ['where', 'isAll'],\n  data() {\n    return {\n      delfromData: {},\n      modal: false,\n      orderList: [],\n      orderCards: [],\n      loading: false,\n      orderId: 0,\n      columns: [\n        {\n          type: 'expand',\n          width: 30,\n          render: (h, params) => {\n            return h(expandRow, {\n              props: {\n                row: params.row,\n              },\n            });\n          },\n        },\n        {\n          width: 50,\n          align: 'center',\n          renderHeader: (h, params) => {\n            return h(\n              'div',\n              {\n                class: {\n                  'select-panel': true,\n                },\n                on: {\n                  mouseenter: (e) => {\n                    this.display = 'block';\n                  },\n                  mouseleave: (e) => {\n                    this.display = 'none';\n                  },\n                },\n              },\n              [\n                h('Checkbox', {\n                  props: {\n                    value: this.checkBox,\n                  },\n                  on: {\n                    'on-change': (e) => {\n                      this.checkBox = e;\n                      this.$refs.table.selectAll(this.checkBox);\n                      this.$emit('on-all', e ? 0 : -1);\n                    },\n                  },\n                }),\n                h(\n                  'div',\n                  {\n                    style: {\n                      position: 'absolute',\n                      top: 0,\n                      zIndex: 2,\n                      display: this.display,\n                      width: '80px',\n                      height: '100%',\n                      padding: '0px 0',\n                      borderRadius: '4px',\n                      backgroundColor: '#fff',\n                      boxShadow: '0 0px 5px rgba(0, 0, 0, 0.2)',\n                      transform: 'translateX(25%)',\n                    },\n                  },\n                  [\n                    h(\n                      'div',\n                      {\n                        class: {\n                          'select-item': true,\n                          on: this.isAll == 0,\n                        },\n                        style: {\n                          padding: '1px 6px',\n                          cursor: 'pointer',\n                          height: '50%',\n                        },\n                        on: {\n                          click: (e) => {\n                            if (this.isAll === 0) {\n                              this.$emit('on-all', -1);\n                              this.checkBox = false;\n                              this.$refs.table.selectAll(this.checkBox);\n                            } else {\n                              this.$emit('on-all', 0);\n                              if (!this.formSelection.length) {\n                                this.checkBox = true;\n                                this.$refs.table.selectAll(this.checkBox);\n                              }\n                            }\n                            this.display = 'none';\n                          },\n                        },\n                      },\n                      '选择当页',\n                    ),\n                    h(\n                      'div',\n                      {\n                        class: {\n                          'select-item': true,\n                          on: this.isAll == 1,\n                        },\n                        style: {\n                          padding: '1px 6px',\n                          cursor: 'pointer',\n                          height: '50%',\n                        },\n                        on: {\n                          click: (e) => {\n                            if (this.isAll === 1) {\n                              this.isAll = -1;\n                              this.$emit('on-all', -1);\n                              this.checkBox = false;\n                            } else {\n                              this.isAll = 1;\n                              this.$emit('on-all', 1);\n                              this.checkBox = true;\n                            }\n                            this.$refs.table.selectAll(this.checkBox);\n                            this.display = 'none';\n                          },\n                        },\n                      },\n                      '选择全部',\n                    ),\n                  ],\n                ),\n              ],\n            );\n          },\n          render: (h, params) => {\n            return h('Checkbox', {\n              props: {\n                value: params.row.checkBox,\n              },\n              on: {\n                'on-change': (e) => {\n                  if (e) {\n                    this.formSelection.push(params.row);\n                  } else {\n                    this.checkBox = false;\n                    this.formSelection.forEach((item, index) => {\n                      if (item.id === params.row.id) {\n                        this.formSelection.splice(index, 1);\n                      }\n                    });\n                  }\n                  this.$emit('on-all', this.formSelection.length ? 0 : -1);\n                  // this.responseData为查询出的结果数据\n                  // params.row.checkBox = e;\n                  params.row.checkBox = e;\n                  this.orderList[params.index].checkBox = e;\n                },\n              },\n              ref: 'checkbox',\n              refInFor: true,\n            });\n          },\n        },\n        {\n          title: '订单号',\n          align: 'center',\n          slot: 'order_id',\n          minWidth: 150,\n        },\n        {\n          title: '订单类型',\n          key: 'pink_name',\n          minWidth: 120,\n        },\n        {\n          title: '用户信息',\n          slot: 'nickname',\n          minWidth: 100,\n        },\n        {\n          title: '商品信息',\n          slot: 'info',\n          minWidth: 330,\n        },\n        {\n          title: '实际支付',\n          key: 'pay_price',\n          minWidth: 70,\n        },\n        {\n          title: '支付时间',\n          key: '_pay_time',\n          minWidth: 100,\n        },\n        {\n          title: '支付状态',\n          key: 'pay_type_name',\n          minWidth: 80,\n        },\n        {\n          title: '订单状态',\n          key: 'statusName',\n          slot: 'statusName',\n          minWidth: 120,\n        },\n        {\n          title: '操作',\n          slot: 'action',\n          fixed: 'right',\n          minWidth: 150,\n          align: 'center',\n        },\n      ],\n      page: {\n        total: 0, // 总条数\n        pageNum: 1, // 当前页\n        pageSize: 10, // 每页显示条数\n      },\n      data: [],\n      FromData: null,\n      orderDatalist: null,\n      modalTitleSs: '',\n      isDelIdList: [],\n      checkBox: false,\n      formSelection: [],\n      selectionCopy: [],\n      display: 'none',\n      autoDisabled: false,\n      status: 0, //发货状态判断\n      // isAll: -1,\n    };\n  },\n  computed: {\n    ...mapState('admin/order', ['orderPayType', 'orderStatus', 'orderTime', 'orderNum', 'fieldKey', 'orderType']),\n  },\n  mounted() {},\n  created() {\n    this.getList();\n  },\n  watch: {\n    orderType: function () {\n      this.page.pageNum = 1;\n      this.getList();\n    },\n    formSelection(value) {\n      this.$emit('order-select', value);\n      if (value.length) {\n        this.$emit('auto-disabled', 0);\n      } else {\n        this.$emit('auto-disabled', 1);\n      }\n      let isDel = value.some((item) => {\n        return item.is_del === 1;\n      });\n      this.getIsDel(isDel);\n      this.getisDelIdListl(value);\n    },\n    orderList: {\n      deep: true,\n      handler(value) {\n        value.forEach((item) => {\n          this.formSelection.forEach((itm) => {\n            if (itm.id === item.id) {\n              item.checkBox = true;\n            }\n          });\n        });\n        const arr = this.orderList.filter((item) => item.checkBox);\n        if (this.orderList.length) {\n          this.checkBox = this.orderList.length === arr.length;\n        } else {\n          this.checkBox = false;\n        }\n      },\n    },\n  },\n  methods: {\n    ...mapMutations('admin/order', ['getIsDel', 'getisDelIdListl']),\n    selectAll(row) {\n      if (row.length) {\n        this.formSelection = row;\n        this.selectionCopy = row;\n      }\n      this.selectionCopy.forEach((item, index) => {\n        item.checkBox = this.checkBox;\n        this.$set(this.orderList, index, item);\n      });\n    },\n    showUserInfo(row) {\n      this.$refs.userDetails.modals = true;\n      this.$refs.userDetails.getDetails(row.uid);\n    },\n    // 操作\n    changeMenu(row, name) {\n      this.orderId = row.id;\n      switch (name) {\n        case '1':\n          this.delfromData = {\n            title: '修改立即支付',\n            url: `/order/pay_offline/${row.id}`,\n            method: 'post',\n            ids: '',\n          };\n          this.$modalSure(this.delfromData)\n            .then((res) => {\n              this.$Message.success(res.msg);\n              this.$emit('changeGetTabs');\n              this.getList();\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n          // this.modalTitleSs = '修改立即支付';\n          break;\n        case '2':\n          this.getData(row.id);\n          break;\n        case '3':\n          this.$refs.record.modals = true;\n          this.$refs.record.getList(row.id);\n          break;\n        case '4':\n          this.$refs.remarks.modals = true;\n          break;\n        case '5':\n          this.getRefundData(row.id);\n          break;\n        case '6':\n          this.getRefundIntegral(row.id);\n          break;\n        case '7':\n          this.getNoRefundData(row.id);\n          break;\n        case '8':\n          this.delfromData = {\n            title: '修改确认收货',\n            url: `/order/take/${row.id}`,\n            method: 'put',\n            ids: '',\n          };\n          this.$modalSure(this.delfromData)\n            .then((res) => {\n              this.$Message.success(res.msg);\n              this.getList();\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n          // this.modalTitleSs = '修改确认收货';\n          break;\n        case '10':\n          this.delfromData = {\n            title: '立即打印订单',\n            info: '您确认打印此订单吗?',\n            url: `/order/print/${row.id}`,\n            method: 'get',\n            ids: '',\n          };\n          this.$modalSure(this.delfromData)\n            .then((res) => {\n              this.$Message.success(res.msg);\n              this.$emit('changeGetTabs');\n              this.getList();\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n          break;\n        case '11':\n          this.delfromData = {\n            title: '立即打印电子面单',\n            info: '您确认打印此电子面单吗?',\n            url: `/order/order_dump/${row.id}`,\n            method: 'get',\n            ids: '',\n          };\n          this.$modalSure(this.delfromData)\n            .then((res) => {\n              this.$Message.success(res.msg);\n              this.getList();\n            })\n            .catch((res) => {\n              this.$Message.error(res.msg);\n            });\n          break;\n        default:\n          this.delfromData = {\n            title: '删除订单',\n            url: `/order/del/${row.id}`,\n            method: 'DELETE',\n            ids: '',\n          };\n          // this.modalTitleSs = '删除订单';\n          this.delOrder(row, this.delfromData);\n      }\n    },\n    // 立即支付 /确认收货//删除单条订单\n    submitModel() {\n      this.getList();\n    },\n    pageChange(index) {\n      this.page.pageNum = index;\n      this.getList();\n    },\n    limitChange(limit) {\n      this.page.pageSize = limit;\n      this.getList();\n    },\n    getOrderList(id) {\n      splitOrderList(id).then((res) => {});\n    },\n    // 订单列表\n    getList(res) {\n      this.page.pageNum = res === 1 ? 1 : this.page.pageNum;\n      this.loading = true;\n\n      splitOrderList(this.$route.query.id)\n        .then(async (res) => {\n          let data = res.data;\n          // this.orderList = data.data;\n          this.orderList = data.map((item) => {\n            // item.checkBox = false;\n            if (this.isAll === 1) {\n              item.checkBox = true;\n            } else {\n              item.checkBox = false;\n            }\n            return item;\n          });\n          this.orderCards = data.stat;\n          this.page.total = data.count;\n          this.$emit('on-changeCards', data.stat);\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    // 全选\n    onSelectTab(selection) {\n      this.formSelection = selection;\n      let isDel = selection.some((item) => {\n        return item.is_del === 1;\n      });\n      this.getIsDel(isDel);\n      this.getisDelIdListl(selection);\n    },\n    // 编辑\n    edit(row) {\n      this.getOrderData(row.id);\n    },\n    splitOrderDetail(row) {\n      this.$router.push({\n        path: 'split_order',\n        query: {\n          id: row.id,\n        },\n      });\n    },\n    // 删除单条订单\n    delOrder(row, data) {\n      if (row.is_del === 1) {\n        this.$modalSure(data)\n          .then((res) => {\n            this.$Message.success(res.msg);\n            this.getList();\n          })\n          .catch((res) => {\n            this.$Message.error(res.msg);\n          });\n      } else {\n        const title = '错误！';\n        const content = '<p>您选择的的订单存在用户未删除的订单，无法删除用户未删除的订单！</p>';\n        this.$Modal.error({\n          title: title,\n          content: content,\n        });\n      }\n    },\n    // 获取编辑表单数据\n    getOrderData(id) {\n      getOrdeDatas(id)\n        .then(async (res) => {\n          if (res.data.status === false) {\n            return this.$authLapse(res.data);\n          }\n          this.$authLapse(res.data);\n          this.FromData = res.data;\n          this.$refs.edits.modals = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 获取详情表单数据\n    getData(id) {\n      getDataInfo(id)\n        .then(async (res) => {\n          this.$refs.detailss.modals = true;\n          this.orderDatalist = res.data;\n          if (this.orderDatalist.orderInfo.refund_reason_wap_img) {\n            try {\n              this.orderDatalist.orderInfo.refund_reason_wap_img = JSON.parse(\n                this.orderDatalist.orderInfo.refund_reason_wap_img,\n              );\n            } catch (e) {\n              this.orderDatalist.orderInfo.refund_reason_wap_img = [];\n            }\n          }\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 修改成功\n    submitFail() {\n      this.status = 0;\n      this.getList();\n    },\n    // 获取退款表单数据\n    getRefundData(id) {\n      this.$modalForm(getRefundFrom(id)).then(() => {\n        this.getList();\n        this.$emit('changeGetTabs');\n      });\n    },\n    // 获取退积分表单数据\n    getRefundIntegral(id) {\n      refundIntegral(id)\n        .then(async (res) => {\n          this.FromData = res.data;\n          this.$refs.edits.modals = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 不退款表单数据\n    getNoRefundData(id) {\n      this.$modalForm(getnoRefund(id)).then(() => {\n        this.getList();\n        this.$emit('changeGetTabs');\n      });\n    },\n    // 发送货\n    sendOrder(row) {\n      this.$refs.send.modals = true;\n      this.orderId = row.id;\n      this.status = row._status;\n      this.$refs.send.getList();\n      this.$refs.send.getDeliveryList();\n      this.$nextTick((e) => {\n        this.$refs.send.getCartInfo(row._status, row.id);\n      });\n    },\n    // 配送信息表单数据\n    delivery(row) {\n      getDistribution(row.id)\n        .then(async (res) => {\n          this.FromData = res.data;\n          this.$refs.edits.modals = true;\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    change(status) {},\n    // 数据导出；\n    exportData: function () {\n      this.$refs.table.exportCsv({\n        filename: '商品列表',\n      });\n    },\n    // 核销订单\n    bindWrite(row) {\n      let self = this;\n      this.$Modal.confirm({\n        title: '提示',\n        content: '确定要核销该订单吗？',\n        cancelText: '取消',\n        closable: true,\n        maskClosable: true,\n        onOk: function () {\n          writeUpdate(row.order_id).then((res) => {\n            self.$Message.success(res.msg);\n            self.getList();\n          });\n        },\n        onCancel: () => {},\n      });\n    },\n    onSelectCancel(selection, row) {},\n  },\n};\n</script>\n\n<style scoped lang=\"stylus\">\nimg {\n  height: 36px;\n  display: block;\n}\n\n.tabBox {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n\n  .tabBox_img {\n    width: 36px;\n    height: 36px;\n\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  .tabBox_tit {\n    width: 60%;\n    font-size: 12px !important;\n    margin: 0 2px 0 10px;\n    letter-spacing: 1px;\n    padding: 5px 0;\n    box-sizing: border-box;\n  }\n}\n\n.orderData >>>.ivu-table-cell {\n  padding-left: 0 !important;\n}\n\n.vertical-center-modal {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.orderData .ivu-table {\n  overflow: visible !important;\n}\n\n.orderData .ivu-table th {\n  overflow: visible !important;\n}\n\n.orderData .ivu-table-header {\n  overflow: visible !important;\n}\n\n/deep/.ivu-table-header {\n  // overflow: visible;\n}\n\n/deep/.ivu-table th {\n  overflow: visible;\n}\n\n/deep/.select-item:hover {\n  background-color: #f3f3f3;\n}\n\n/deep/.select-on {\n  display: block;\n}\n\n/deep/.select-item.on {\n  background: #f3f3f3;\n}\n\n.pictrue-box {\n  display: flex;\n  align-item: center;\n}\n\n.pictrue {\n  width: 25px;\n  height: 25px;\n}\n\n.return {\n  border: 1px solid #ccc;\n  padding: 3px 5px;\n  margin-left: 15px;\n  border-radius: 3px;\n  cursor: pointer;\n}\n</style>\n"]}]}