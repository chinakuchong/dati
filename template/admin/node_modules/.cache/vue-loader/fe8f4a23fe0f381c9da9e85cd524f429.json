{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/pages/user/cancel/handle/task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/pages/user/cancel/handle/task.vue","mtime":1689324015282},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlLCBtYXBNdXRhdGlvbnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgdGFza0xpc3RBcGksIHNldFRhc2tTaG93QXBpLCBzZXRUYXNrTXVzdEFwaSwgY3JlYXRlVGFza0FwaSB9IGZyb20gJ0AvYXBpL3VzZXInOwppbXBvcnQgZWRpdEZyb20gZnJvbSAnQC9jb21wb25lbnRzL2Zyb20vZnJvbSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndGFzaycsCiAgY29tcG9uZW50czogeyBlZGl0RnJvbSB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyBsZXZlbElkczogdGhpcy5sZXZlbElkLAogICAgICBncmlkOiB7CiAgICAgICAgeGw6IDEwLAogICAgICAgIGxnOiAxMCwKICAgICAgICBtZDogMTIsCiAgICAgICAgc206IDI0LAogICAgICAgIHhzOiAyNCwKICAgICAgfSwKICAgICAgbW9kYWxzOiBmYWxzZSwKICAgICAgbGV2ZWxGcm9tOiB7CiAgICAgICAgaXNfc2hvdzogJycsCiAgICAgICAgbmFtZTogJycsCiAgICAgICAgcGFnZTogMSwKICAgICAgICBsaW1pdDogMjAsCiAgICAgIH0sCiAgICAgIHRvdGFsOiAwLAogICAgICBsZXZlbExpc3RzOiBbXSwKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIGNvbHVtbnMxOiBbCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICdJRCcsCiAgICAgICAgICBrZXk6ICdpZCcsCiAgICAgICAgICBzb3J0YWJsZTogdHJ1ZSwKICAgICAgICAgIHdpZHRoOiA4MCwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAn562J57qn5ZCN56ewJywKICAgICAgICAgIGtleTogJ2xldmVsX25hbWUnLAogICAgICAgICAgbWluV2lkdGg6IDEwMCwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAn5Lu75Yqh5ZCN56ewJywKICAgICAgICAgIGtleTogJ25hbWUnLAogICAgICAgICAgbWluV2lkdGg6IDEyMCwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAn5o6S5bqPJywKICAgICAgICAgIHNvcnQ6ICdncmFkZScsCiAgICAgICAgICBzb3J0YWJsZTogdHJ1ZSwKICAgICAgICAgIG1pbldpZHRoOiAxMDAsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+aYr+WQpuaYvuekuicsCiAgICAgICAgICBzbG90OiAnaXNfc2hvd3MnLAogICAgICAgICAgbWluV2lkdGg6IDExMCwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAn5Yqh5b+F6L6+5oiQJywKICAgICAgICAgIHNsb3Q6ICdpc19tdXN0cycsCiAgICAgICAgICBtaW5XaWR0aDogMTM1LAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICfku7vliqHor7TmmI4nLAogICAgICAgICAga2V5OiAnaWxsdXN0cmF0ZScsCiAgICAgICAgICBtaW5XaWR0aDogMTIwLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICfmk43kvZwnLAogICAgICAgICAgc2xvdDogJ2FjdGlvbicsCiAgICAgICAgICBmaXhlZDogJ3JpZ2h0JywKICAgICAgICAgIG1pbldpZHRoOiAxMjAsCiAgICAgICAgfSwKICAgICAgXSwKICAgICAgRnJvbURhdGE6IG51bGwsCiAgICAgIGlkczogMCwKICAgICAgbW9kYWxUaXRsZVNzOiAnJywKICAgICAgdGl0bGVUeXBlOiAndGFzaycsCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKCdtZWRpYScsIFsnaXNNb2JpbGUnXSksCiAgICAuLi5tYXBTdGF0ZSgndXNlckxldmVsJywgWydsZXZlbElkJ10pLAogICAgbGFiZWxXaWR0aCgpIHsKICAgICAgcmV0dXJuIHRoaXMuaXNNb2JpbGUgPyB1bmRlZmluZWQgOiA3NTsKICAgIH0sCiAgICBsYWJlbFBvc2l0aW9uKCkgewogICAgICByZXR1cm4gdGhpcy5pc01vYmlsZSA/ICd0b3AnIDogJ3JpZ2h0JzsKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICAuLi5tYXBNdXRhdGlvbnMoJ3VzZXJMZXZlbCcsIFsnZ2V0VGFza0lkJywgJ2dldGxldmVsSWQnXSksCiAgICAvLyDmt7vliqAKICAgIGFkZCgpIHsKICAgICAgdGhpcy5pZHMgPSAnJzsKICAgICAgdGhpcy5nZXRGcm9tKCk7CiAgICB9LAogICAgLy8g5paw5bu6IOe8lui+keihqOWNlQogICAgZ2V0RnJvbSgpIHsKICAgICAgbGV0IGRhdGEgPSB7CiAgICAgICAgaWQ6IHRoaXMuaWRzLAogICAgICAgIGxldmVsX2lkOiB0aGlzLmxldmVsSWQsCiAgICAgIH07CiAgICAgIHRoaXMuJG1vZGFsRm9ybShjcmVhdGVUYXNrQXBpKGRhdGEpKS50aGVuKCgpID0+IHRoaXMuZ2V0TGlzdCgpKTsKICAgIH0sCiAgICAvLyDnvJbovpEKICAgIGVkaXQocm93KSB7CiAgICAgIHRoaXMuaWRzID0gcm93LmlkOwogICAgICB0aGlzLmdldEZyb20oKTsKICAgIH0sCiAgICAvLyDlhbPpl63mqKHmgIHmoYYKICAgIGhhbmRsZVJlc2V0KCkgewogICAgICB0aGlzLm1vZGFscyA9IGZhbHNlOwogICAgfSwKICAgIC8vIOihqOagvOaQnOe0ogogICAgdXNlclNlYXJjaHMoKSB7CiAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgfSwKICAgIC8vIOS7u+WKoeWIl+ihqAogICAgZ2V0TGlzdCgpIHsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgdGhpcy5sZXZlbEZyb20uaXNfc2hvdyA9IHRoaXMubGV2ZWxGcm9tLmlzX3Nob3cgfHwgJyc7CiAgICAgIHRhc2tMaXN0QXBpKHRoaXMubGV2ZWxJZCwgdGhpcy5sZXZlbEZyb20pCiAgICAgICAgLnRoZW4oYXN5bmMgKHJlcykgPT4gewogICAgICAgICAgbGV0IGRhdGEgPSByZXMuZGF0YTsKICAgICAgICAgIHRoaXMubGV2ZWxMaXN0cyA9IGRhdGEubGlzdDsKICAgICAgICAgIHRoaXMudG90YWwgPSByZXMuZGF0YS5jb3VudDsKICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChyZXMpID0+IHsKICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgdGhpcy4kTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICB9KTsKICAgIH0sCiAgICBwYWdlQ2hhbmdlKGluZGV4KSB7CiAgICAgIHRoaXMubGV2ZWxGcm9tLnBhZ2UgPSBpbmRleDsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgLy8g5L+u5pS55pi+56S66ZqQ6JePCiAgICBvbmNoYW5nZUlzU2hvdyhyb3cpIHsKICAgICAgbGV0IGRhdGEgPSB7CiAgICAgICAgaWQ6IHJvdy5pZCwKICAgICAgICBpc19zaG93OiByb3cuaXNfc2hvdywKICAgICAgfTsKICAgICAgc2V0VGFza1Nob3dBcGkoZGF0YSkKICAgICAgICAudGhlbihhc3luYyAocmVzKSA9PiB7CiAgICAgICAgICB0aGlzLiRNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKHJlcykgPT4gewogICAgICAgICAgdGhpcy4kTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICB9KTsKICAgIH0sCiAgICAvLyDorr7nva7ku7vliqHmmK/lkKbovr7miJAKICAgIG9uY2hhbmdlSXNNdXN0KHJvdykgewogICAgICBsZXQgZGF0YSA9IHsKICAgICAgICBpZDogcm93LmlkLAogICAgICAgIGlzX211c3Q6IHJvdy5pc19tdXN0LAogICAgICB9OwogICAgICBzZXRUYXNrTXVzdEFwaShkYXRhKQogICAgICAgIC50aGVuKGFzeW5jIChyZXMpID0+IHsKICAgICAgICAgIHRoaXMuJE1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgocmVzKSA9PiB7CiAgICAgICAgICB0aGlzLiRNZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgIH0pOwogICAgfSwKICAgIC8vIOaWsOW7uue8lui+keaPkOS6pOaIkOWKnwogICAgc3VibWl0RmFpbCgpIHsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgLy8g5Yig6Zmk5Lu75YqhCiAgICBkZWwocm93LCB0aXQsIG51bSkgewogICAgICBsZXQgZGVsZnJvbURhdGEgPSB7CiAgICAgICAgdGl0bGU6IHRpdCwKICAgICAgICBudW06IG51bSwKICAgICAgICB1cmw6IGB1c2VyL3VzZXJfbGV2ZWwvZGVsZXRlX3Rhc2svJHtyb3cuaWR9YCwKICAgICAgICBtZXRob2Q6ICdERUxFVEUnLAogICAgICAgIGlkczogJycsCiAgICAgIH07CiAgICAgIHRoaXMuJG1vZGFsU3VyZShkZWxmcm9tRGF0YSkKICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICB0aGlzLiRNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICB0aGlzLmxldmVsTGlzdHMuc3BsaWNlKG51bSwgMSk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKHJlcykgPT4gewogICAgICAgICAgdGhpcy4kTWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICB9KTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"task.vue","sourceRoot":"src/pages/user/level/handle","sourcesContent":["<template>\n  <Modal\n    v-model=\"modals\"\n    :z-index=\"1\"\n    scrollable\n    footer-hide\n    closable\n    title=\"等级任务\"\n    :mask-closable=\"false\"\n    width=\"950\"\n    @on-cancel=\"handleReset\"\n  >\n    <Form\n      ref=\"levelFrom\"\n      :model=\"levelFrom\"\n      :label-width=\"labelWidth\"\n      :label-position=\"labelPosition\"\n      @submit.native.prevent\n    >\n      <Row type=\"flex\" :gutter=\"24\">\n        <Col v-bind=\"grid\">\n          <FormItem label=\"状态：\">\n            <Select v-model=\"levelFrom.is_show\" placeholder=\"是否显示\" clearable @on-change=\"userSearchs\">\n              <Option value=\"1\">显示</Option>\n              <Option value=\"0\">不显示</Option>\n            </Select>\n          </FormItem>\n        </Col>\n        <Col v-bind=\"grid\">\n          <FormItem label=\"等级名称：\" prop=\"status2\" label-for=\"status2\">\n            <Input\n              search\n              enter-button\n              v-model=\"levelFrom.name\"\n              placeholder=\"请输入等级名称\"\n              @on-search=\"userSearchs\"\n              style=\"width: 100%\"\n            />\n          </FormItem>\n        </Col>\n      </Row>\n    </Form>\n    <Divider dashed />\n    <Row type=\"flex\">\n      <Col v-bind=\"grid\" class=\"mb15\">\n        <Button type=\"primary\" icon=\"md-add\" @click=\"add\">添加等级任务</Button>\n      </Col>\n      <Col span=\"24\" class=\"userAlert\">\n        <Alert show-icon closable>添加等级任务,任务类型中的{$num}会自动替换成限定数量+系统预设的单位生成任务名</Alert>\n      </Col>\n    </Row>\n    <Divider dashed />\n    <Table\n      :columns=\"columns1\"\n      :data=\"levelLists\"\n      ref=\"table\"\n      :loading=\"loading\"\n      no-userFrom-text=\"暂无数据\"\n      no-filtered-userFrom-text=\"暂无筛选结果\"\n    >\n      <template slot-scope=\"{ row, index }\" slot=\"is_shows\">\n        <i-switch\n          v-model=\"row.is_show\"\n          :value=\"row.is_show\"\n          :true-value=\"1\"\n          :false-value=\"0\"\n          size=\"large\"\n          @on-change=\"onchangeIsShow(row)\"\n        >\n          <span slot=\"open\">显示</span>\n          <span slot=\"close\">隐藏</span>\n        </i-switch>\n      </template>\n      <template slot-scope=\"{ row, index }\" slot=\"is_musts\">\n        <i-switch\n          v-model=\"row.is_must\"\n          :value=\"row.is_must\"\n          :true-value=\"1\"\n          :false-value=\"0\"\n          size=\"large\"\n          @on-change=\"onchangeIsMust(row)\"\n        >\n          <span slot=\"open\">全部完成</span>\n          <span slot=\"close\">达成其一</span>\n        </i-switch>\n      </template>\n      <template slot-scope=\"{ row, index }\" slot=\"action\">\n        <a @click=\"edit(row)\">编辑 | </a>\n        <a @click=\"del(row, '删除等级任务', index)\"> 删除</a>\n      </template>\n    </Table>\n    <div class=\"acea-row row-right page\">\n      <Page :total=\"total\" show-elevator show-total @on-change=\"pageChange\" :page-size=\"levelFrom.limit\" />\n    </div>\n    <!-- 新建 编辑表单-->\n    <edit-from ref=\"edits\" :FromData=\"FromData\" @submitFail=\"submitFail\" :titleType=\"titleType\"></edit-from>\n  </Modal>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex';\nimport { taskListApi, setTaskShowApi, setTaskMustApi, createTaskApi } from '@/api/user';\nimport editFrom from '@/components/from/from';\nexport default {\n  name: 'task',\n  components: { editFrom },\n  data() {\n    return {\n      // levelIds: this.levelId,\n      grid: {\n        xl: 10,\n        lg: 10,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      modals: false,\n      levelFrom: {\n        is_show: '',\n        name: '',\n        page: 1,\n        limit: 20,\n      },\n      total: 0,\n      levelLists: [],\n      loading: false,\n      columns1: [\n        {\n          title: 'ID',\n          key: 'id',\n          sortable: true,\n          width: 80,\n        },\n        {\n          title: '等级名称',\n          key: 'level_name',\n          minWidth: 100,\n        },\n        {\n          title: '任务名称',\n          key: 'name',\n          minWidth: 120,\n        },\n        {\n          title: '排序',\n          sort: 'grade',\n          sortable: true,\n          minWidth: 100,\n        },\n        {\n          title: '是否显示',\n          slot: 'is_shows',\n          minWidth: 110,\n        },\n        {\n          title: '务必达成',\n          slot: 'is_musts',\n          minWidth: 135,\n        },\n        {\n          title: '任务说明',\n          key: 'illustrate',\n          minWidth: 120,\n        },\n        {\n          title: '操作',\n          slot: 'action',\n          fixed: 'right',\n          minWidth: 120,\n        },\n      ],\n      FromData: null,\n      ids: 0,\n      modalTitleSs: '',\n      titleType: 'task',\n    };\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    ...mapState('userLevel', ['levelId']),\n    labelWidth() {\n      return this.isMobile ? undefined : 75;\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n  },\n  methods: {\n    ...mapMutations('userLevel', ['getTaskId', 'getlevelId']),\n    // 添加\n    add() {\n      this.ids = '';\n      this.getFrom();\n    },\n    // 新建 编辑表单\n    getFrom() {\n      let data = {\n        id: this.ids,\n        level_id: this.levelId,\n      };\n      this.$modalForm(createTaskApi(data)).then(() => this.getList());\n    },\n    // 编辑\n    edit(row) {\n      this.ids = row.id;\n      this.getFrom();\n    },\n    // 关闭模态框\n    handleReset() {\n      this.modals = false;\n    },\n    // 表格搜索\n    userSearchs() {\n      this.getList();\n    },\n    // 任务列表\n    getList() {\n      this.loading = true;\n      this.levelFrom.is_show = this.levelFrom.is_show || '';\n      taskListApi(this.levelId, this.levelFrom)\n        .then(async (res) => {\n          let data = res.data;\n          this.levelLists = data.list;\n          this.total = res.data.count;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$Message.error(res.msg);\n        });\n    },\n    pageChange(index) {\n      this.levelFrom.page = index;\n      this.getList();\n    },\n    // 修改显示隐藏\n    onchangeIsShow(row) {\n      let data = {\n        id: row.id,\n        is_show: row.is_show,\n      };\n      setTaskShowApi(data)\n        .then(async (res) => {\n          this.$Message.success(res.msg);\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 设置任务是否达成\n    onchangeIsMust(row) {\n      let data = {\n        id: row.id,\n        is_must: row.is_must,\n      };\n      setTaskMustApi(data)\n        .then(async (res) => {\n          this.$Message.success(res.msg);\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n    // 新建编辑提交成功\n    submitFail() {\n      this.getList();\n    },\n    // 删除任务\n    del(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `user/user_level/delete_task/${row.id}`,\n        method: 'DELETE',\n        ids: '',\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$Message.success(res.msg);\n          this.levelLists.splice(num, 1);\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]}]}