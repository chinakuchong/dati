{"remainingRequest":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js??ref--0-2!/Volumes/mac/webwork/2023/dati/template/admin/src/pages/setting/setSystem/index.vue?vue&type=style&index=0&id=31e0bd3e&scoped=true&lang=stylus&","dependencies":[{"path":"/Volumes/mac/webwork/2023/dati/template/admin/src/pages/setting/setSystem/index.vue","mtime":1689324015258},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/@vue/cli-service/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/mac/webwork/2023/dati/template/admin/node_modules/iview-loader/index.js","mtime":1570440814000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5pdnUtdGFicyB7CiAgbWFyZ2luLWJvdHRvbTogMThweDsKfQoKLmZyb21Cb3ggewogIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSAyMDBweCk7CiAgbWFyZ2luLXRvcDogMHB4ICFpbXBvcnRhbnQ7Cn0KCi5hcnRpY2xlLW1hbmFnZXIgL2RlZXAvIC5pdnUtZm9ybS1pdGVtIHsKICBtYXJnaW4tYm90dG9tOiAyMHB4ICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+NA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/setting/setSystem","sourcesContent":["<template>\n  <div>\n    <div class=\"i-layout-page-header header-title\" v-if=\"!headerList.length\">\n      <span class=\"ivu-page-header-title\">{{ $route.meta.title }}</span>\n    </div>\n    <div class=\"article-manager\">\n      <Card :bordered=\"false\" dis-hover class=\"ivu-mt fromBox\">\n        <Tabs v-model=\"currentTab\" @on-click=\"changeTab\" v-if=\"headerList.length\">\n          <TabPane\n            :icon=\"item.icon\"\n            :label=\"item.label\"\n            :name=\"item.value.toString()\"\n            v-for=\"(item, index) in headerList\"\n            :key=\"index\"\n          />\n        </Tabs>\n        <Tabs type=\"card\" v-model=\"childrenId\" v-if=\"headerChildrenList.length\" @on-click=\"changeChildrenTab\">\n          <TabPane\n            :label=\"item.label\"\n            :name=\"item.id.toString()\"\n            v-for=\"(item, index) in headerChildrenList\"\n            :key=\"index\"\n          ></TabPane>\n        </Tabs>\n        <form-create :option=\"option\" :rule=\"rules\" @submit=\"onSubmit\" v-if=\"rules.length !== 0\"></form-create>\n        <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\n      </Card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport formCreate from '@form-create/iview';\nimport { headerListApi, dataFromApi } from '@/api/setting';\nimport request from '@/libs/request';\nimport { getLogo } from '@/api/common';\nexport default {\n  name: 'setting_setSystem',\n  components: { formCreate: formCreate.$form() },\n  data() {\n    return {\n      rules: [],\n      option: {\n        form: {\n          labelWidth: 185,\n        },\n        submitBtn: {\n          col: {\n            span: 3,\n            push: 3,\n          },\n        },\n        global: {\n          upload: {\n            props: {\n              onSuccess(res, file) {\n                if (res.status === 200) {\n                  file.url = res.data.src;\n                } else {\n                  this.$Message.error(res.msg);\n                }\n              },\n            },\n          },\n          frame: {\n            props: {\n              closeBtn: false,\n              okBtn: false,\n            },\n          },\n        },\n      },\n      spinShow: false,\n      FromData: null,\n      currentTab: '',\n      headerList: [],\n      headerChildrenList: [],\n      childrenId: '',\n      title: '',\n    };\n  },\n  created() {\n    this.getAllData();\n  },\n  watch: {\n    $route(to, from) {\n      this.headerChildrenList = [];\n      this.getAllData();\n    },\n    childrenId() {\n      this.getFrom();\n    },\n  },\n  methods: {\n    childrenList(index) {\n      let that = this;\n      that.headerList.forEach(function (item) {\n        if (item.value.toString() === that.currentTab) {\n          if (item.children === undefined) {\n            that.childrenId = item.id;\n            that.headerChildrenList = [];\n          } else {\n            that.headerChildrenList = item.children;\n            that.childrenId = item.children.length ? item.children[index ? index : 0].id.toString() : '';\n          }\n        }\n      });\n    },\n    // 头部tab\n    getHeader(index) {\n      this.spinShow = true;\n      return new Promise((resolve, reject) => {\n        let tab_id = this.$route.params.tab_id;\n        let data = {\n          type: this.$route.params.type ? this.$route.params.type : 0,\n          pid: tab_id ? tab_id : 0,\n        };\n        headerListApi(data)\n          .then(async (res) => {\n            let config = res.data.config_tab;\n            this.headerList = config;\n            this.currentTab = config[index ? index : 0].value.toString();\n            this.childrenList(index ? 1 : 0);\n            resolve(this.currentTab);\n            this.spinShow = false;\n          })\n          .catch((err) => {\n            this.spinShow = false;\n            this.$Message.error(err);\n          });\n      });\n    },\n    // 表单\n    getFrom() {\n      this.spinShow = true;\n      return new Promise((resolve, reject) => {\n        let ids = '';\n        if (this.$route.params.type === '3') {\n          ids = this.$route.params.tab_id;\n        } else {\n          if (this.childrenId) {\n            ids = this.childrenId;\n          } else {\n            ids = this.currentTab;\n          }\n        }\n        let data = {\n          tab_id: Number(ids),\n        };\n        let logistics = 'freight/config/edit_basics',\n          agent = 'agent/config/edit_basics',\n          integral = 'marketing/integral_config/edit_basics',\n          sms = 'serve/sms_config/edit_basics',\n          config = 'setting/config/edit_basics';\n        let url =\n          this.$route.name === 'setting_logistics'\n            ? logistics\n            : this.$route.name === 'setting_distributionSet'\n            ? agent\n            : this.$route.name === 'setting_message'\n            ? sms\n            : this.$route.name === 'setting_setSystem'\n            ? config\n            : integral;\n        dataFromApi(data, url)\n          .then(async (res) => {\n            this.spinShow = false;\n            if (res.data.status === false) {\n              return this.$authLapse(res.data);\n            }\n            this.FromData = res.data;\n            this.rules = res.data.rules;\n            this.title = res.data.title;\n          })\n          .catch((res) => {\n            this.spinShow = false;\n            this.$Message.error(res.msg);\n          });\n      });\n    },\n    async getAllData() {\n      if (this.$route.query.from === 'download') {\n        await this.getHeader(2);\n      } else if (this.$route.params.type !== '3') {\n        this.childrenId = '';\n        await this.getHeader();\n      } else {\n        this.headerList = [];\n        this.getFrom();\n      }\n    },\n    // 选择\n    changeTab() {\n      this.childrenList();\n    },\n    // 二级选择\n    changeChildrenTab(name) {\n      this.childrenId = name;\n    },\n    // 提交表单 group\n    onSubmit(formData) {\n      request({\n        url: this.FromData.action,\n        method: this.FromData.method,\n        data: formData,\n      })\n        .then((res) => {\n          this.$Message.success(res.msg);\n          if (formData.site_name) {\n            localStorage.setItem('ADMIN_TITLE', formData.site_name);\n            this.$store.commit('setAdminTitle', formData.site_name);\n            window.document.title = `${formData.site_name} - 系统设置`;\n          }\n        })\n        .catch((res) => {\n          this.$Message.error(res.msg);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"stylus\">\n.ivu-tabs {\n  margin-bottom: 18px;\n}\n\n.fromBox {\n  min-height: calc(100vh - 200px);\n  margin-top: 0px !important;\n}\n\n.article-manager /deep/ .ivu-form-item {\n  margin-bottom: 20px !important;\n}\n</style>\n"]}]}