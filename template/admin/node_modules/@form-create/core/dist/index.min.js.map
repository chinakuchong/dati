{"version":3,"file":"index.min.js","sources":["../../utils/lib/modify.js","../../utils/lib/extend.js","../../utils/lib/toarray.js","../src/components/formCreate.js","../../utils/lib/type.js","../../utils/lib/mergeprops.js","../src/frame/attrs.js","../../utils/lib/console.js","../../utils/lib/deepextend.js","../../utils/lib/json.js","../src/frame/util.js","../src/factory/creator.js","../src/factory/maker.js","../src/frame/api.js","../src/render/cache.js","../../utils/lib/tocase.js","../../utils/lib/tostring.js","../../utils/lib/toline.js","../../utils/lib/unique.js","../../utils/lib/deepset.js","../src/render/render.js","../src/render/index.js","../src/handler/inject.js","../src/handler/page.js","../src/handler/render.js","../src/factory/context.js","../src/handler/loader.js","../src/handler/input.js","../src/factory/parser.js","../src/handler/context.js","../src/handler/lifecycle.js","../src/handler/effect.js","../src/handler/index.js","../src/frame/fetch.js","../src/components/fragment.js","../src/factory/node.js","../src/factory/manager.js","../src/frame/provider.js","../src/parser/html.js","../src/frame/index.js"],"sourcesContent":["import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n","import {$set} from './modify';\n\nconst _extends = Object.assign || function (a) {\n    for (let b, c = 1; c < arguments.length; c++) {\n        for (let d in b = arguments[c], b) {\n            Object.prototype.hasOwnProperty.call(b, d) && ($set(a, d, b[d]));\n        }\n    }\n\n    return a;\n}\n\nexport default function extend() {\n    return _extends.apply(this, arguments);\n}\n\nexport function copy(obj) {\n    if (typeof obj !== 'object' || obj === null) return obj;\n    return obj instanceof Array ? [...obj] : {...obj};\n}\n","export default function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ([null, undefined, ''].indexOf(value) > -1 ? [] : [value]);\n}\n","import extend from '@form-create/utils/lib/extend';\nimport toArray from '@form-create/utils/lib/toarray';\n\nconst NAME = 'FormCreate';\n\nconst getRuleInject = (vm, parent) => {\n    if (!vm || vm === parent) {\n        return;\n    }\n    if (vm.formCreateInject) {\n        return vm.formCreateInject\n    }\n    if (vm.$parent) {\n        return getRuleInject(vm.$parent, parent);\n    }\n}\n\nexport default function $FormCreate(FormCreate) {\n    return {\n        name: NAME,\n        componentName: NAME,\n        model: {\n            prop: 'api'\n        },\n        provide() {\n            return {\n                $pfc: this,\n            }\n        },\n        inject: {$pfc: {default: null}},\n        props: {\n            rule: {\n                type: Array,\n                required: true\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                }\n            },\n            extendOption: Boolean,\n            value: Object,\n            api: Object,\n            name: String,\n            subForm: {\n                type: Boolean,\n                default: true\n            },\n            inFor: Boolean,\n        },\n        data() {\n            return {\n                formData: undefined,\n                destroyed: false,\n                validate: {},\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n                renderRule: [...this.rule || []],\n                ctxInject: {},\n                updateValue: JSON.stringify(this.value || {}),\n                isMore: !!this.inFor,\n            };\n        },\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _refresh() {\n                ++this.unique;\n            },\n            _renderRule() {\n                this.renderRule = [...this.rule || []];\n            },\n            _updateValue(value) {\n                if (this.destroyed) return;\n                this.updateValue = JSON.stringify(value);\n                this.$emit('update:value', value);\n            }\n        },\n        watch: {\n            value: {\n                handler(n) {\n                    if (JSON.stringify(n || {}) === this.updateValue) return;\n                    this.$f.config.forceCoverValue ? this.$f.coverValue(n || {}) : this.$f.setValue(n || {});\n                },\n                deep: true\n            },\n            option: {\n                handler(n) {\n                    this.formCreate.initOptions(n);\n                    this.$f.refresh();\n                },\n                deep: true\n            },\n            rule(n) {\n                if (n.length === this.renderRule.length && n.every(v => this.renderRule.indexOf(v) > -1)) return;\n                this.formCreate.$handle.reloadRule(n);\n                this._renderRule();\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(this, rule, option);\n            Object.keys(this.formCreate.prop).forEach(k => {\n                extend(this.$options[k], this.formCreate.prop[k]);\n            })\n            this.$emit('beforeCreate', this.formCreate.api());\n        },\n        created() {\n            const vm = this, fapi = this.formCreate.api();\n            const addSubForm = () => {\n                if (vm.$pfc) {\n                    const inject = getRuleInject(vm, vm.$pfc);\n                    if (inject) {\n                        let sub;\n                        if (vm.isMore) {\n                            sub = toArray(inject.getSubForm());\n                            sub.push(fapi);\n\n                        } else {\n                            sub = fapi;\n                        }\n                        inject.subForm(sub);\n                    }\n                }\n            };\n\n            const rmSubForm = () => {\n                const inject = getRuleInject(vm, vm.$pfc);\n                if (inject) {\n                    if (vm.isMore) {\n                        const sub = toArray(inject.getSubForm());\n                        const idx = sub.indexOf(fapi);\n                        if (idx > -1) {\n                            sub.splice(idx, 1);\n                        }\n                    } else {\n                        inject.subForm();\n                    }\n                }\n            };\n\n            vm.$on('hook:beforeDestroy', () => {\n                rmSubForm();\n            });\n\n            this.$watch(() => this.subForm, (n) => {\n                n ? addSubForm() : rmSubForm();\n            }, {immediate: true});\n        }\n    }\n}\n","const is = {\n    type(arg, type) {\n        return Object.prototype.toString.call(arg) === '[object ' + type + ']'\n    },\n    Undef(v) {\n        return v === undefined || v === null\n    },\n    Element(arg) {\n        return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !is.Object(arg)\n    },\n    trueArray(data) {\n        return Array.isArray(data) && data.length > 0;\n    },\n    Function(v) {\n        const type = this.getType(v);\n        return type === 'Function' || type === 'AsyncFunction';\n    },\n    getType(v) {\n        const str = Object.prototype.toString.call(v)\n        return /^\\[object (.*)\\]$/.exec(str)[1]\n    },\n    empty(value) {\n        if (value === undefined || value === null) {\n            return true;\n        }\n\n        if (Array.isArray(value) && Array.isArray(value) && !value.length) {\n            return true;\n        }\n\n        return typeof value === 'string' && !value;\n    }\n};\n\n['Date', 'Object', 'String', 'Boolean', 'Array', 'Number'].forEach(t => {\n    is[t] = function (arg) {\n        return is.type(arg, t);\n    }\n})\n\nexport function hasProperty(rule, k) {\n    return ({}).hasOwnProperty.call(rule, k)\n}\n\nexport default is;\n","export const normalMerge = ['attrs', 'props', 'domProps', 'scopedSlots'];\nexport const toArrayMerge = ['class', 'style', 'directives'];\nexport const functionalMerge = ['on', 'nativeOn'];\n\nconst mergeProps = (objects, initial = {}, opt = {}) => {\n    const _normalMerge = [...normalMerge, ...opt['normal'] || []];\n    const _toArrayMerge = [...toArrayMerge, ...opt['array'] || []];\n    const _functionalMerge = [...functionalMerge, ...opt['functional'] || []];\n    const propsMerge = opt['props'] || [];\n\n    return objects.reduce((a, b) => {\n        for (const key in b) {\n            if (a[key]) {\n                if (propsMerge.indexOf(key) > -1) {\n                    a[key] = mergeProps([b[key]], a[key]);\n                } else if (_normalMerge.indexOf(key) > -1) {\n                    a[key] = {...a[key], ...b[key]}\n                } else if (_toArrayMerge.indexOf(key) > -1) {\n                    const arrA = a[key] instanceof Array ? a[key] : [a[key]];\n                    const arrB = b[key] instanceof Array ? b[key] : [b[key]];\n                    a[key] = [...arrA, ...arrB]\n                } else if (_functionalMerge.indexOf(key) > -1) {\n                    for (const event in b[key]) {\n                        if (a[key][event]) {\n                            const arrA = a[key][event] instanceof Array ? a[key][event] : [a[key][event]];\n                            const arrB = b[key][event] instanceof Array ? b[key][event] : [b[key][event]];\n                            a[key][event] = [...arrA, ...arrB]\n                        } else {\n                            a[key][event] = b[key][event]\n                        }\n                    }\n                } else if (key === 'hook') {\n                    for (let hook in b[key]) {\n                        if (a[key][hook]) {\n                            a[key][hook] = mergeFn(a[key][hook], b[key][hook])\n                        } else {\n                            a[key][hook] = b[key][hook]\n                        }\n                    }\n                } else {\n                    a[key] = b[key]\n                }\n            } else {\n                if (_normalMerge.indexOf(key) > -1 || _functionalMerge.indexOf(key) > -1 || propsMerge.indexOf(key) > -1) {\n                    a[key] = {...b[key]}\n                } else if (_toArrayMerge.indexOf(key) > -1) {\n                    a[key] = b[key] instanceof Array ? [...b[key]] : (typeof b[key] === 'object' ? {...b[key]} : b[key]);\n                } else\n                    a[key] = b[key];\n            }\n        }\n        return a\n    }, initial);\n}\n\nconst mergeFn = (fn1, fn2) =>\n    function () {\n        fn1 && fn1.apply(this, arguments);\n        fn2 && fn2.apply(this, arguments);\n    };\n\nexport default mergeProps;\n","import {functionalMerge, normalMerge, toArrayMerge} from '@form-create/utils/lib/mergeprops';\n\n\nexport const keyAttrs = ['type', 'slot', 'emitPrefix', 'value', 'name', 'native', 'hidden', 'display', 'inject', 'options', 'emit', 'nativeEmit', 'link', 'prefix', 'suffix', 'update', 'sync', 'optionsTo', 'key', 'preview', 'component', 'cache'];\n\nexport const arrayAttrs = ['validate', 'children', 'control'];\n\nexport const normalAttrs = ['effect', 'deep'];\n\nexport function attrs() {\n    return [...keyAttrs, ...normalMerge, ...toArrayMerge, ...functionalMerge, ...arrayAttrs, ...normalAttrs];\n}\n","export function format(type, msg, rule) {\n    return (`[form-create ${type}]: ${msg}` + (rule ? ('\\n\\nrule: ' + JSON.stringify(rule.getRule ? rule.getRule() : rule)) : ''))\n}\n\nexport function tip(msg, rule) {\n    console.warn(format('tip', msg, rule));\n}\n\nexport function err(msg, rule) {\n    console.error(format('err', msg, rule));\n}\n\nexport function logError(e) {\n    err(e.toString());\n    console.error(e);\n}\n","import {$set} from './modify';\nimport is from './type';\n\nexport default function deepExtend(origin, target = {}, mode) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || is.Object(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else if (clone._clone && mode !== undefined) {\n                    if (mode) {\n                        clone = clone.getRule();\n                        nst && $set(origin, key, {});\n                    } else {\n                        $set(origin, key, clone._clone());\n                        continue;\n                    }\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                origin[key] = deepExtend(origin[key], clone, mode);\n            } else {\n                $set(origin, key, clone);\n                if (!is.Undef(clone)) {\n                    if (!is.Undef(clone.__json)) {\n                        origin[key].__json = clone.__json;\n                    }\n                    if (!is.Undef(clone.__origin)) {\n                        origin[key].__origin = clone.__origin;\n                    }\n                }\n            }\n        }\n    }\n    return (mode !== undefined && Array.isArray(origin)) ? origin.filter(v => !v || !v.__ctrl) : origin\n}\n\nexport function deepCopy(value) {\n    return deepExtend({}, {value}).value;\n}\n\nexport function deepExtendArgs(origin, ...lst) {\n    lst.forEach(target => {\n        origin = deepExtend(origin, target);\n    });\n    return origin;\n}\n","import deepExtend from './deepextend';\nimport {err} from './console';\nimport is, {hasProperty} from './type';\n\nconst PREFIX = '[[FORM-CREATE-PREFIX-';\nconst SUFFIX = '-FORM-CREATE-SUFFIX]]';\n\nconst $T = '$FN:';\nconst $TX = '$FNX:';\nconst FUNCTION = 'function';\n\nexport function toJson(obj, space) {\n    return JSON.stringify(deepExtend([], obj, true), function (key, val) {\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== FUNCTION) {\n            return val;\n        }\n        if (val.__json) {\n            return val.__json;\n        }\n        if (val.__origin)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n        return PREFIX + val + SUFFIX;\n    }, space);\n}\n\nfunction makeFn(fn) {\n    return eval('(' + FUNCTION + '(){return ' + fn + ' })()')\n}\n\nexport function parseFn(fn, mode) {\n    if (fn && is.String(fn) && fn.length > 4) {\n        let v = fn.trim();\n        let flag = false;\n        try {\n            if (v.indexOf(SUFFIX) > 0 && v.indexOf(PREFIX) === 0) {\n                v = v.replace(SUFFIX, '').replace(PREFIX, '');\n                flag = true;\n            } else if (v.indexOf($T) === 0) {\n                v = v.replace($T, '');\n                flag = true;\n            } else if (v.indexOf($TX) === 0) {\n                v = makeFn('function($inject){' + v.replace($TX, '') + '}');\n                v.__json = fn;\n                v.__inject = true;\n                return v;\n            } else if (!mode && v.indexOf(FUNCTION) === 0 && v !== FUNCTION) {\n                flag = true;\n            }\n            if (!flag) return fn;\n            const val = makeFn((v.indexOf(FUNCTION) === -1 && v.indexOf('(') !== 0) ? (FUNCTION + ' ' + v) : v);\n            val.__json = fn;\n            return val;\n        } catch (e) {\n            err(`解析失败:${v}\\n\\nerr: ${e}`);\n            return undefined;\n        }\n    }\n    return fn;\n}\n\nexport function parseJson(json, mode) {\n    return JSON.parse(json, function (k, v) {\n        if (is.Undef(v) || !v.indexOf) return v;\n        return parseFn(v, mode);\n    });\n}\n","import is from '@form-create/utils/lib/type';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport {arrayAttrs, normalAttrs} from './attrs';\nimport {logError} from '@form-create/utils/lib/console';\nimport {parseJson, toJson} from '@form-create/utils/lib/json';\nimport deepExtend from '@form-create/utils/lib/deepextend';\n\nexport {parseFn} from '@form-create/utils/lib/json';\nexport {parseJson, toJson}\n\nexport function enumerable(value, writable) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false,\n        writable: !!writable\n    }\n}\n\n//todo 优化位置\nexport function copyRule(rule) {\n    return copyRules([rule])[0];\n}\n\nexport function copyRules(rules, mode) {\n    return deepExtend([], [...rules], mode || false);\n}\n\nexport function mergeRule(rule, merge) {\n    mergeProps(Array.isArray(merge) ? merge : [merge], rule, {array: arrayAttrs, normal: normalAttrs});\n    return rule;\n}\n\nexport function getRule(rule) {\n    const r = is.Function(rule.getRule) ? rule.getRule() : rule;\n    if (!r.type) {\n        r.type = 'input';\n    }\n    return r;\n}\n\nexport function mergeGlobal(target, merge) {\n    if (!target) return merge;\n    Object.keys(merge || {}).forEach((k) => {\n        if (merge[k]) {\n            target[k] = mergeRule(target[k] || {}, merge[k])\n        }\n    });\n    return target;\n}\n\nexport function funcProxy(that, proxy) {\n    Object.defineProperties(that, Object.keys(proxy).reduce((initial, k) => {\n        initial[k] = {\n            get() {\n                return proxy[k]();\n            }\n        }\n        return initial;\n    }, {}))\n}\n\nexport function byCtx(rule) {\n    return rule.__fc__ || (rule.__origin__ ? rule.__origin__.__fc__ : null)\n}\n\nexport function invoke(fn, def) {\n    try {\n        def = fn()\n    } catch (e) {\n        logError(e);\n    }\n    return def;\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport {attrs} from '../frame/attrs';\nimport {copyRule, mergeRule} from '../frame/util';\nimport {$set} from '@form-create/utils/lib/modify';\n\nexport function baseRule() {\n    return {\n        props: {},\n        on: {},\n        options: [],\n        children: [],\n        hidden: false,\n        display: true,\n        value: undefined,\n    };\n}\n\nexport function creatorFactory(name, init) {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (init) {\n            if (is.Function(init)) init(maker);\n            else maker.props(init);\n        }\n        return maker;\n    };\n}\n\nexport default function Creator(type, title, field, value, props) {\n    this._data = extend(baseRule(), {type, title, field, value, props: props || {}});\n    this.event = this.on;\n}\n\nextend(Creator.prototype, {\n    getRule() {\n        return this._data;\n    },\n    setProp(key, value) {\n        $set(this._data, key, value);\n        return this;\n    },\n    _clone() {\n        const clone = new this.constructor();\n        clone._data = copyRule(this._data);\n        return clone;\n    },\n})\n\nexport function appendProto(attrs) {\n    attrs.forEach(name => {\n        Creator.prototype[name] = function (key) {\n            mergeRule(this._data, {[name]: arguments.length < 2 ? key : {[key]: arguments[1]}})\n            return this;\n        };\n    });\n}\n\nappendProto(attrs());\n","import {creatorFactory} from './creator';\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    return {\n        create,\n        createTmp,\n        template: createTmp,\n        factory: creatorFactory\n    };\n}\n","import {byCtx, invoke, mergeRule, toJson} from './util';\nimport {$set} from '@form-create/utils/lib/modify';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport extend from '@form-create/utils/lib/extend';\nimport {format} from '@form-create/utils/lib/console';\n\n\nfunction copy(value) {\n    return deepCopy(value);\n}\n\nexport default function Api(h) {\n\n    function tidyFields(fields) {\n        if (is.Undef(fields))\n            fields = h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    function props(fields, key, val) {\n        tidyFields(fields).forEach(field => {\n            h.getCtxs(field).forEach(ctx => {\n                $set(ctx.rule, key, val);\n                h.$render.clearCache(ctx);\n            });\n        })\n    }\n\n    function allSubForm() {\n        const subs = h.subForm;\n        return Object.keys(subs).reduce((initial, k) => {\n            const sub = subs[k];\n            if (!sub) return initial;\n            if (Array.isArray(sub))\n                initial.push(...sub);\n            else\n                initial.push(sub);\n            return initial;\n        }, []);\n    }\n\n    const api = {\n        get config() {\n            return h.options\n        },\n        get options() {\n            return h.options\n        },\n        get form() {\n            return h.form\n        },\n        get rule() {\n            return h.rules\n        },\n        get parent() {\n            return h.vm.$pfc && h.vm.$pfc.$f\n        },\n        get children() {\n            return allSubForm();\n        },\n        formData(fields) {\n            return tidyFields(fields).reduce((initial, id) => {\n                const ctx = h.getFieldCtx(id);\n                if (!ctx) return initial;\n                initial[ctx.field] = copy(ctx.rule.value);\n                return initial;\n            }, h.options.appendValue ? copy(h.appendData) : {});\n        },\n        getValue(field) {\n            const ctx = h.getFieldCtx(field);\n            if (!ctx) return;\n            return copy(ctx.rule.value);\n        },\n        coverValue(formData) {\n            const data = {...(formData || {})};\n            h.deferSyncValue(() => {\n                api.fields().forEach(key => {\n                    const ctxs = h.fieldCtx[key];\n                    if (ctxs) {\n                        const flag = hasProperty(data, key);\n                        ctxs.forEach(ctx => {\n                            ctx.rule.value = flag ? data[key] : undefined;\n                        })\n                        delete data[key];\n                    }\n                });\n                extend(h.appendData, data);\n            })\n        },\n        setValue(field) {\n            let formData = field;\n            if (arguments.length >= 2)\n                formData = {[field]: arguments[1]};\n            h.deferSyncValue(() => {\n                Object.keys(formData).forEach(key => {\n                    const ctxs = h.fieldCtx[key];\n                    if (!ctxs) return h.appendData[key] = formData[key];\n                    ctxs.forEach(ctx => {\n                        ctx.rule.value = formData[key];\n                    });\n                });\n            })\n        },\n        removeField(field) {\n            const ctx = h.getCtx(field);\n            h.deferSyncValue(() => {\n                h.getCtxs(field).forEach(ctx => {\n                    ctx.rm();\n                });\n            }, true);\n            return ctx ? ctx.origin : undefined;\n        },\n        removeRule(rule) {\n            const ctx = rule && byCtx(rule);\n            if (!ctx) return;\n            ctx.rm();\n            return ctx.origin;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode && h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, child) => {\n            let index = h.sort.length - 1, rules;\n            const ctx = h.getCtx(after);\n\n            if (ctx) {\n                if (child) {\n                    rules = ctx.rule.children;\n                    index = ctx.rule.children.length - 1;\n                } else {\n                    index = ctx.root.indexOf(ctx.origin);\n                    rules = ctx.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, child) => {\n            let index = 0, rules;\n            const ctx = h.getCtx(after);\n\n            if (ctx) {\n                if (child) {\n                    rules = ctx.rule.children;\n                } else {\n                    index = ctx.root.indexOf(ctx.origin);\n                    rules = ctx.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index, 0, rule);\n        },\n        hidden(state, fields) {\n            props(fields, 'hidden', !!state);\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const ctx = h.getCtx(id);\n            if (!ctx) return;\n            return !!ctx.rule.hidden;\n        },\n        display(state, fields) {\n            props(fields, 'display', !!state);\n            h.refresh();\n        },\n        displayStatus(id) {\n            const ctx = h.getCtx(id);\n            if (!ctx) return;\n            return !!ctx.rule.display;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields).forEach((field) => {\n                h.getCtxs(field).forEach(ctx => {\n                    ctx.rule.props && $set(ctx.rule.props, 'disabled', !!disabled);\n                });\n            });\n            h.refresh();\n        },\n        all(origin) {\n            return Object.keys(h.ctxs).map(k => {\n                const ctx = h.ctxs[k];\n                return origin ? ctx.origin : ctx.rule;\n            });\n        },\n        model(origin) {\n            return h.fields().reduce((initial, key) => {\n                const ctx = h.fieldCtx[key][0];\n                initial[key] = origin ? ctx.origin : ctx.rule;\n                return initial;\n            }, {});\n        },\n        component(origin) {\n            return Object.keys(h.nameCtx).reduce((initial, key) => {\n                const ctx = h.nameCtx[key].map(ctx => origin ? ctx.origin : ctx.rule);\n                initial[key] = ctx.length === 1 ? ctx[0] : ctx;\n                return initial;\n            }, {});\n        },\n        bind() {\n            return api.form;\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            h.fc.updateOptions(options);\n            api.refresh();\n        },\n        onSubmit(fn) {\n            api.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            if (Array.isArray(field)) {\n                field.forEach(v => api.sync(v));\n                return;\n            }\n            let ctxs = is.Object(field) ? byCtx(field) : h.getCtxs(field);\n            if (!ctxs) {\n                return;\n            }\n            ctxs = Array.isArray(ctxs) ? ctxs : [ctxs];\n            ctxs.forEach(ctx => {\n                if (!ctx.deleted) {\n                    const subForm = h.subForm[ctx.id];\n                    if (subForm) {\n                        if (Array.isArray(subForm)) {\n                            subForm.forEach(form => {\n                                form.refresh();\n                            })\n                        } else if (subForm) {\n                            subForm.refresh();\n                        }\n                    }\n                    //ctx.updateKey(true);\n                    h.$render.clearCache(ctx);\n                }\n            });\n            h.refresh();\n        },\n        refresh: () => {\n            allSubForm().forEach(sub => {\n                sub.refresh();\n            });\n            h.$render.clearCacheAll();\n            h.refresh();\n        },\n        refreshOptions() {\n            h.$manager.updateOptions(h.options);\n            api.refresh();\n        },\n        hideForm: (hide) => {\n            $set(h.vm, 'isShow', !hide);\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule(id, rule) {\n            h.getCtxs(id).forEach(ctx => {\n                extend(ctx.rule, rule);\n            });\n        },\n        updateRules(rules) {\n            Object.keys(rules).forEach(id => {\n                api.updateRule(id, rules[id]);\n            })\n        },\n        mergeRule: (id, rule) => {\n            h.getCtxs(id).forEach(ctx => {\n                mergeRule(ctx.rule, rule);\n            });\n        },\n        mergeRules(rules) {\n            Object.keys(rules).forEach(id => {\n                api.mergeRule(id, rules[id]);\n            })\n        },\n        getRule: (id, origin) => {\n            const ctx = h.getCtx(id);\n            if (ctx) {\n                return origin ? ctx.origin : ctx.rule;\n            }\n        },\n        setEffect(id, attr, value) {\n            const ctx = h.getCtx(id);\n            if (ctx && attr) {\n                if (attr[0] === '$') {\n                    attr = attr.substr(1);\n                }\n                if (hasProperty(ctx.rule, '$' + attr)) {\n                    $set(ctx.rule, '$' + attr, value);\n                }\n                if (!hasProperty(ctx.rule, 'effect')) {\n                    ctx.rule.effect = {};\n                }\n                $set(ctx.rule.effect, attr, value);\n            }\n        },\n        clearEffectData(id, attr) {\n            const ctx = h.getCtx(id);\n            if (ctx) {\n                if (attr && attr[0] === '$') {\n                    attr = attr.substr(1);\n                }\n                ctx.clearEffectData(attr);\n                api.sync(id);\n            }\n        },\n        updateValidate(id, validate, merge) {\n            if (merge) {\n                api.mergeRule(id, {validate})\n            } else {\n                props(id, 'validate', validate);\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                api.updateValidate(id, validates[id], merge);\n            })\n        },\n        refreshValidate() {\n            h.vm.validate = {};\n            api.refresh();\n        },\n        resetFields(fields) {\n            tidyFields(fields).forEach(field => {\n                h.getCtxs(field).forEach(ctx => {\n                    h.$render.clearCache(ctx);\n                    ctx.rule.value = copy(ctx.defaultValue);\n                });\n            });\n        },\n        method(id, name) {\n            const el = api.el(id);\n            if (!el || !el[name])\n                throw new Error(format('err', `${name}方法不存在`));\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        exec(id, name, ...args) {\n            return invoke(() => api.method(id, name)(...args));\n        },\n        toJson(space) {\n            return toJson(api.rule, space);\n        },\n        trigger(id, event, ...args) {\n            const el = api.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const ctx = h.getCtx(id);\n            if (ctx) return ctx.el || h.vm.$refs[ctx.ref];\n        },\n        closeModal: (id) => {\n            const el = api.el(id);\n            el && el.$emit && el.$emit('close-modal');\n        },\n        getSubForm(field) {\n            const ctx = h.getCtx(field);\n            return ctx ? h.subForm[ctx.id] : undefined;\n        },\n        nextTick(fn) {\n            h.bus.$once('next-tick', fn);\n            h.refresh();\n        },\n        nextRefresh(fn) {\n            h.nextRefresh();\n            fn && invoke(fn);\n        },\n        emit(name, ...args) {\n            h.vm.$emit(name, ...args);\n        },\n        deferSyncValue(fn, sync){\n            h.deferSyncValue(fn, sync);\n        },\n        helper: {\n            tidyFields, props\n        }\n    };\n\n    ['on', 'once', 'off', 'set'].forEach(n => {\n        api[n] = function (...args) {\n            h.vm[`$${n}`](...args);\n        }\n    });\n\n    api.changeValue = api.changeField = api.setValue;\n\n    return api;\n}\n","import extend from '@form-create/utils/lib/extend';\n\nexport default function useCache(Render) {\n    extend(Render.prototype, {\n        initCache() {\n            this.clearCacheAll();\n        },\n        clearCache(ctx) {\n            if (!this.cache[ctx.id]) {\n                ctx.parent && this.clearCache(ctx.parent);\n                return;\n            }\n            if (this.cache[ctx.id].use === true || this.cache[ctx.id].parent) {\n                this.$handle.refresh();\n            }\n            const parent = this.cache[ctx.id].parent;\n            this.cache[ctx.id] = null;\n            parent && this.clearCache(parent);\n        },\n        clearCacheAll() {\n            this.cache = {};\n        },\n        setCache(ctx, vnode, parent) {\n            this.cache[ctx.id] = {\n                vnode,\n                use: false,\n                parent,\n                slot: ctx.rule.slot\n            };\n        },\n        getCache(ctx) {\n            const cache = this.cache[ctx.id];\n            if (cache) {\n                cache.use = true;\n                return cache.vnode;\n            }\n            return undefined;\n        }\n    })\n\n}\n","export default function toCase(str) {\n    const to = str.replace(/(-[a-z])/g, function (v) {\n        return v.replace('-', '').toLocaleUpperCase();\n    });\n\n    return lower(to);\n}\n\nexport function lower(str) {\n    return str.replace(str[0], str[0].toLowerCase());\n}\n","export default function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n","export default function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLocaleLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n","let id = 0;\n\nexport default function uniqueId() {\n    return 'F' + Math.random().toString(36).substr(3, 3) + Number(`${Date.now()}${++id}`).toString(36);\n}\n","export default function deepSet(data, idx, val) {\n    let _data = data, to;\n    (idx || '').split('.').forEach(v => {\n        if (to) {\n            if (!_data[to] || typeof _data[to] != 'object') {\n                _data[to] = {}\n            }\n            _data = _data[to];\n        }\n        to = v;\n    })\n    _data[to] = val;\n    return _data;\n}\n","import extend from '@form-create/utils/lib/extend';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {_vue as Vue} from '../frame';\nimport {tip} from '@form-create/utils/lib/console';\nimport {invoke, mergeRule} from '../frame/util';\nimport toCase, {lower} from '@form-create/utils/lib/tocase';\nimport {$set, deepSet, toLine} from '@form-create/utils';\n\nexport default function useRender(Render) {\n    extend(Render.prototype, {\n        initRender() {\n            this.tempList = {};\n            this.clearOrgChildren();\n        },\n        initOrgChildren() {\n            const ctxs = this.$handle.ctxs;\n            this.orgChildren = Object.keys(ctxs).reduce((initial, id) => {\n                if (ctxs[id].parser.loadChildren !== false) {\n                    const children = ctxs[id].rule.children;\n                    initial[id] = is.trueArray(children) ? [...children] : [];\n                }\n\n                return initial;\n            }, {});\n\n        },\n        clearOrgChildren() {\n            this.orgChildren = {};\n        },\n        getTypeSlot(type) {\n            const name = 'type-' + toLine(type);\n            const _fn = (vm) => {\n                if (vm) {\n                    const slot = vm.$scopedSlots[name] || vm.$scopedSlots['type-' + type];\n                    if (slot) {\n                        return slot;\n                    }\n                    return _fn(vm.$pfc);\n                }\n            }\n            return _fn(this.vm);\n        },\n        render() {\n            if (!this.vm.isShow) {\n                return;\n            }\n            this.$h = this.vm.$createElement;\n            this.$manager.beforeRender();\n\n            let vn;\n\n            const make = () => this.renderList();\n            make.renderSlot = slot => this.renderList(slot);\n            make.renderName = name => this.renderId(name);\n            make.renderField = field => this.renderId(field, 'field');\n\n            if (this.vm.$scopedSlots.container) {\n                vn = [this.vm.$scopedSlots.container(make)];\n            } else {\n                vn = make();\n            }\n            return this.$manager.render(vn);\n        },\n        renderList(slot) {\n            return this.sort.map((id) => {\n                return slot ? this.renderSlot(this.$handle.ctxs[id], slot) : this.renderCtx(this.$handle.ctxs[id]);\n            }).filter((val) => val !== undefined);\n        },\n        makeVm(rule) {\n            const vm = rule.vm;\n            if (!vm)\n                return new Vue;\n            else if (is.Function(vm))\n                return invoke(() => rule.vm(this.$handle.getInjectData(rule)));\n            else if (!vm._isVue)\n                return new Vue(vm);\n            return vm;\n        },\n        mergeGlobal(ctx) {\n            const g = this.$handle.options.global;\n            if (!g) return;\n            //todo 缓存配置,更新 option 更新\n            if (!ctx.cacheConfig)\n                ctx.cacheConfig = g[ctx.originType] || g[ctx.type] || g[ctx.trueType] || {};\n            ctx.prop = mergeRule({}, [g['*'], ctx.cacheConfig, ctx.prop]);\n        },\n        setOptions(ctx) {\n            if (ctx.prop.optionsTo && ctx.prop.options) {\n                deepSet(ctx.prop, ctx.prop.optionsTo, ctx.prop.options);\n            }\n        },\n        deepSet(ctx) {\n            const deep = ctx.rule.deep;\n            deep && Object.keys(deep).sort((a, b) => a.length < b.length ? -1 : 1).forEach(str => {\n                deepSet(ctx.prop, str, deep[str]);\n            });\n        },\n        setTempProps(vm, ctx) {\n            if (!vm.$props) return;\n\n            const {prop} = ctx;\n            const keys = Object.keys(vm.$props);\n            const inject = this.injectProp(ctx);\n            const injectKeys = Object.keys(inject);\n\n            keys.forEach(key => {\n                if (hasProperty(prop.props, key))\n                    vm.$props[key] = prop.props[key];\n                else if (injectKeys.indexOf(key) > -1) vm.$props[key] = inject[key];\n            });\n\n            const key = (vm.$options.model && vm.$options.model.prop) || 'value';\n            if (keys.indexOf(key) > -1) {\n                vm.$props[key] = prop.value;\n            }\n        },\n        renderTemp(ctx) {\n            if (!Vue.compile) {\n                tip('当前使用的Vue构建版本不支持compile,无法使用template功能');\n                return [];\n            }\n            const rule = ctx.prop;\n            const {id, key} = ctx;\n\n            if (!this.tempList[id]) {\n                if (!ctx.el) {\n                    ctx.el = this.makeVm(rule);\n                    this.vm.$nextTick(() => ctx.parser.mounted(ctx));\n                }\n\n                let vm = ctx.el;\n                if (ctx.input)\n                    vm.$on((vm.$options.model && vm.$options.model.event) || 'input', (value) => {\n                        this.onInput(ctx, value);\n                    });\n\n                this.tempList[id] = {\n                    vm,\n                    template: Vue.compile(rule.template)\n                };\n            }\n\n            const {vm, template} = this.tempList[id];\n\n            this.setTempProps(vm, ctx);\n\n            const vn = template.render.call(vm);\n\n            if (is.Undef(vn.data)) vn.data = {};\n            vn.key = key;\n            vn.data.ref = ctx.ref;\n            vn.data.key = key;\n            return vn;\n        },\n        parseSide(side) {\n            return is.Object(side) ? mergeRule({}, side) : side;\n        },\n        renderSides(vn, ctx, temp) {\n            const prop = ctx[temp ? 'rule' : 'prop'];\n            return [this.renderRule(this.parseSide(prop.prefix)), vn, this.renderRule(this.parseSide(prop.suffix))];\n        },\n        renderSlot(ctx, slot) {\n            return ctx.rule.slot === slot ? this.renderCtx(ctx) : undefined;\n        },\n        renderId(name, type) {\n            const ctxs = this.$handle[type === 'field' ? 'fieldCtx' : 'nameCtx'][name]\n            return ctxs ? ctxs.map(ctx => this.renderCtx(ctx, ctx.parent)) : undefined;\n        },\n        renderCtx(ctx, parent) {\n            if (ctx.type === 'hidden') return;\n            const rule = ctx.rule;\n            if ((!this.cache[ctx.id]) || this.cache[ctx.id].slot !== rule.slot) {\n                let vn;\n                let cacheFlag = rule.cache !== false;\n                const _type = ctx.trueType;\n                const none = !(is.Undef(rule.display) || !!rule.display);\n                if (_type === 'template' && !rule.template) {\n                    vn = this.renderSides(this.renderChildren(ctx), ctx, true);\n                    if (none) {\n                        this.display(vn);\n                    }\n                    vn = this.item(ctx, vn);\n                } else if (_type === 'fcFragment') {\n                    vn = this.renderChildren(ctx);\n                } else {\n                    ctx.initProp();\n                    this.mergeGlobal(ctx);\n                    this.$manager.tidyRule(ctx);\n                    this.deepSet(ctx);\n                    this.setOptions(ctx);\n                    this.ctxProp(ctx);\n                    let prop = ctx.prop;\n                    prop.preview = !!(hasProperty(prop, 'preview') ? prop.preview : (this.options.preview || false))\n                    prop.props.formCreateInject = this.injectProp(ctx);\n                    const preview = prop.preview;\n\n                    if (prop.hidden) {\n                        this.setCache(ctx, undefined, parent);\n                        return;\n                    }\n\n                    if (_type === 'template' && prop.template) {\n                        vn = this.renderTemp(ctx);\n                        cacheFlag = false;\n                    } else {\n                        let children = [];\n                        if (ctx.parser.renderChildren) {\n                            children = ctx.parser.renderChildren(ctx);\n                        } else if (ctx.parser.loadChildren !== false) {\n                            children = this.renderChildren(ctx);\n                        }\n                        const slot = this.getTypeSlot(ctx.type);\n                        if (slot) {\n                            vn = slot({\n                                rule,\n                                prop,\n                                preview,\n                                children,\n                                api: this.$handle.api,\n                                model: prop.model || {}\n                            });\n                        } else {\n                            vn = preview ? ctx.parser.preview(children, ctx) : ctx.parser.render(children, ctx);\n                        }\n                    }\n                    vn = this.renderSides(vn, ctx);\n                    if ((!(!ctx.input && is.Undef(prop.native))) && prop.native !== true) {\n                        vn = this.$manager.makeWrap(ctx, vn);\n                    }\n                    if (none) {\n                        vn = this.display(vn);\n                    }\n                    vn = this.item(ctx, vn)\n                }\n                if (cacheFlag) {\n                    this.setCache(ctx, vn, parent);\n                }\n                return vn;\n            }\n\n            return this.getCache(ctx);\n        },\n        display(vn) {\n            if (Array.isArray(vn)) {\n                const data = [];\n                vn.forEach(v => {\n                    if (Array.isArray(v)) return this.display(v);\n                    if (this.none(v)) data.push(v);\n                })\n                return data;\n            } else {\n                return this.none(vn);\n            }\n        },\n        none(vn) {\n            if (vn && vn.data) {\n                if (Array.isArray(vn.data.style)) {\n                    vn.data.style.push({display: 'none'});\n                } else if(is.String(vn.data.style)) {\n                    vn.data.style += ';display:none;';\n                } else {\n                    vn.data.style = [vn.data.style, {display: 'none'}];\n                }\n                return vn;\n            }\n        },\n        item(ctx, vn) {\n            return this.$h('fcFragment', {\n                slot: ctx.rule.slot,\n                key: ctx.key,\n            }, [vn]);\n        },\n        injectProp(ctx) {\n            if (!this.vm.ctxInject[ctx.id]) {\n                $set(this.vm.ctxInject, ctx.id, {\n                    api: this.$handle.api,\n                    form: this.fc.create,\n                    subForm: subForm => {\n                        this.$handle.addSubForm(ctx, subForm);\n                    },\n                    getSubForm: () => {\n                        return this.$handle.subForm[ctx.id];\n                    },\n                    options: [],\n                    children: [],\n                    prop: {},\n                    preview: false,\n                    field: ctx.field,\n                    rule: ctx.rule,\n                    input: ctx.input,\n                });\n            }\n            const inject = this.vm.ctxInject[ctx.id];\n            extend(inject, {\n                preview: ctx.prop.preview,\n                options: ctx.prop.options,\n                children: ctx.rule.children,\n                prop: (function () {\n                    const temp = {...ctx.prop};\n                    temp.on = temp.on ? {...temp.on} : {};\n                    delete temp.model;\n                    return temp;\n                }()),\n            });\n            return inject;\n        },\n        ctxProp(ctx, custom) {\n            const {ref, key, rule} = ctx;\n            this.$manager.mergeProp(ctx, custom);\n            ctx.parser.mergeProp(ctx, custom);\n            const props = [\n                {\n                    ref: ref,\n                    key: rule.key || `${key}fc`,\n                    slot: undefined,\n                    on: {\n                        'hook:mounted': () => {\n                            this.onMounted(ctx);\n                        },\n                        'fc.sub-form': (subForm) => {\n                            this.$handle.addSubForm(ctx, subForm);\n                        }\n                    },\n                }\n            ]\n\n            if (!custom && ctx.input) {\n                ctx.prop.model = {\n                    value: this.$handle.getFormData(ctx),\n                    callback: (value) => {\n                        this.onInput(ctx, value);\n                    },\n                    expression: `formData.${ctx.id}`\n                };\n            }\n            mergeProps(props, ctx.prop);\n            return ctx.prop;\n        },\n        onMounted(ctx) {\n            ctx.el = this.vm.$refs[ctx.ref];\n            if (ctx.el) {\n                (ctx.el.$el || ctx.el).__rule__ = ctx.rule;\n            }\n            ctx.parser.mounted(ctx);\n            this.$handle.effect(ctx, 'mounted');\n        },\n        onInput(ctx, value) {\n            this.$handle.onInput(ctx, value);\n        },\n        renderChildren(ctx) {\n            const {children} = ctx.rule, orgChildren = this.orgChildren[ctx.id];\n\n            const isRm = child => {\n                return !is.String(child) && child.__fc__ && !this.$handle.ctxs[child.__fc__.id];\n            }\n\n            if (!is.trueArray(children) && orgChildren) {\n                this.$handle.deferSyncValue(() => {\n                    orgChildren.forEach(child => {\n                        if (!child) return;\n                        if (isRm(child)) {\n                            this.$handle.rmCtx(child.__fc__);\n                        }\n                    });\n                });\n                this.orgChildren[ctx.id] = [];\n                return [];\n            }\n\n            orgChildren && this.$handle.deferSyncValue(() => {\n                orgChildren.forEach(child => {\n                    if (!child) return;\n                    if (children.indexOf(child) === -1 && isRm(child)) {\n                        this.$handle.rmCtx(child.__fc__);\n                    }\n                });\n            });\n\n            return children.map(child => {\n                if (!child) return;\n                if (is.String(child)) return child;\n                if (child.__fc__) {\n                    return this.renderCtx(child.__fc__, ctx);\n                }\n                if (child.type) {\n                    this.vm.$nextTick(() => {\n                        this.$handle.loadChildren(children, ctx);\n                        this.$handle.refresh();\n                    });\n                }\n            });\n\n        },\n        defaultRender(ctx, children) {\n            const prop = ctx.prop;\n            if(prop.component)\n                return this.vNode.makeComponent(prop.component, prop, children)\n            if (this.vNode[ctx.type])\n                return this.vNode[ctx.type](prop, children);\n            if (this.vNode[ctx.originType])\n                return this.vNode[ctx.originType](prop, children);\n            return this.vNode.make(lower(ctx.originType), prop, children);\n        },\n        renderRule(rule, children, origin) {\n            if (!rule) return undefined;\n            if (is.String(rule)) return rule;\n\n            let type;\n            if (origin) {\n                type = rule.type;\n            } else {\n                type = rule.is;\n                if (rule.type) {\n                    type = toCase(rule.type);\n                    const alias = this.vNode.aliasMap[type];\n                    if (alias) type = toCase(alias);\n                }\n            }\n\n            if (!type) return undefined;\n            let data = [[children]];\n            if (is.trueArray(rule.children)) {\n                data.push(rule.children.map(v => this.renderRule(v)));\n            }\n            return this.$h(type, {...rule}, data);\n        }\n    })\n}\n","import useCache from './cache';\nimport useRender from './render';\nimport extend from '@form-create/utils/lib/extend';\nimport {funcProxy} from '../frame/util';\n\nexport default function Render(handle) {\n    extend(this, {\n        $handle: handle,\n        fc: handle.fc,\n        vm: handle.vm,\n        $manager: handle.$manager,\n        vNode: new handle.fc.CreateNode(handle.vm),\n    });\n\n    funcProxy(this, {\n        options() {\n            return handle.options;\n        },\n        sort() {\n            return handle.sort;\n        }\n    })\n\n    this.initCache();\n    this.initRender();\n}\n\nuseCache(Render);\nuseRender(Render)\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport toLine from '@form-create/utils/lib/toline';\nimport {parseFn} from '../frame/util';\n\n\nexport default function useInject(Handler) {\n    extend(Handler.prototype, {\n        parseInjectEvent(rule, on) {\n            const inject = rule.inject || this.options.injectEvent;\n            return this.parseEventLst(rule, on, inject);\n        },\n        parseEventLst(rule, data, inject, deep) {\n            Object.keys(data).forEach(k => {\n                const fn = this.parseEvent(rule, data[k], inject, deep);\n                if (fn) {\n                    data[k] = fn;\n                }\n            });\n            return data;\n        },\n        parseEvent(rule, fn, inject, deep) {\n            if (is.Function(fn) && ((inject !== false && !is.Undef(inject)) || fn.__inject)) {\n                return this.inject(rule, fn, inject)\n            } else if (!deep && Array.isArray(fn) && fn[0] && (is.String(fn[0]) || is.Function(fn[0]))) {\n                return this.parseEventLst(rule, fn, inject, true);\n            } else if (is.String(fn)) {\n                const val = parseFn(fn);\n                if (val && fn !== val) {\n                    return val.__inject ? this.parseEvent(rule, val, inject, true) : val;\n                }\n            }\n        },\n        parseEmit(ctx, on) {\n            let event = {}, rule = ctx.rule, {emitPrefix, field, name, inject} = rule;\n            let emit = rule[on ? 'emit' : 'nativeEmit'] || [];\n            if (is.trueArray(emit)) {\n                let emitKey = emitPrefix || field || name;\n                if (emitKey) {\n                    if (!on) emitKey = `native-${emitKey}`;\n                    emit.forEach(eventName => {\n                        if (!eventName) return;\n                        let eventInject;\n                        if (is.Object(eventName)) {\n                            eventInject = eventName.inject;\n                            eventName = eventName.name;\n                        }\n                        const fieldKey = toLine(`${emitKey}-${eventName}`);\n                        const fn = (...arg) => {\n                            this.vm.$emit(fieldKey, ...arg);\n                            this.vm.$emit('emit-event', fieldKey, ...arg);\n                        };\n                        fn.__emit = true;\n\n                        if (!eventInject && inject === false) {\n                            event[eventName] = fn;\n                        } else {\n                            let _inject = eventInject || inject || this.options.injectEvent;\n                            event[eventName] = is.Undef(_inject) ? fn : this.inject(rule, fn, _inject);\n                        }\n                    });\n                }\n\n            }\n            ctx.computed[on ? 'on' : 'nativeOn'] = event;\n            return event;\n        },\n        getInjectData(self, inject) {\n            const {option, rule} = this.vm.$options.propsData;\n            return {\n                api: this.api,\n                $f: this.api,\n                rule,\n                self: self.__origin__,\n                option,\n                inject\n            };\n        },\n        inject(self, _fn, inject) {\n            if (_fn.__origin) {\n                if (this.watching && !this.loading)\n                    return _fn;\n                _fn = _fn.__origin;\n            }\n\n            const h = this;\n\n            const fn = function (...args) {\n                const data = h.getInjectData(self, inject);\n                data.args = [...args];\n                args.unshift(data);\n                return _fn.apply(this, args);\n            };\n            fn.__origin = _fn;\n            fn.__json = _fn.__json;\n            return fn;\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\n\nconst EVENT = ['hook:updated', 'hook:mounted'];\n\nexport default function usePage(Handler) {\n    extend(Handler.prototype, {\n        usePage() {\n            const page = this.options.page;\n            if (!page) return;\n            let first = 25;\n            let limit = getLimit(this.rules);\n            if (is.Object(page)) {\n                if (page.first) first = parseInt(page.first, 10) || first;\n                if (page.limit) limit = parseInt(page.limit, 10) || limit;\n            }\n            extend(this, {\n                first,\n                limit,\n                pageEnd: this.rules.length <= first,\n            })\n\n            this.bus.$on('page-end', () => this.vm.$emit('page-end', this.api));\n            this.pageLoad();\n        },\n        pageLoad() {\n            const pageFn = () => {\n                if (this.pageEnd) {\n                    this.vm.$off(EVENT, pageFn);\n                    this.bus.$emit('page-end');\n                } else {\n                    this.first += this.limit;\n                    this.pageEnd = this.rules.length <= this.first;\n                    this.loadRule();\n                    this.refresh();\n                }\n            }\n            this.vm.$on(EVENT, pageFn);\n        },\n    })\n}\n\n\nfunction getLimit(rules) {\n    return rules.length < 31 ? 31 : Math.ceil(rules.length / 3);\n}\n","import extend from '@form-create/utils/lib/extend';\n\n\nexport default function useRender(Handler) {\n    extend(Handler.prototype, {\n        clearNextTick() {\n            this.nextTick && clearTimeout(this.nextTick);\n            this.nextTick = null;\n        },\n        bindNextTick(fn) {\n            this.clearNextTick();\n            this.nextTick = setTimeout(() => {\n                fn()\n                this.nextTick = null;\n            }, 10);\n        },\n        render() {\n            // console.warn('%c render', 'color:green');\n            ++this.loadedId;\n\n            if (this.vm.unique > 0)\n                return this.$render.render();\n            else {\n                this.vm.unique = 1;\n                return [];\n            }\n        },\n    });\n}\n","import unique from '@form-create/utils/lib/unique';\nimport toCase from '@form-create/utils/lib/tocase';\nimport extend from '@form-create/utils/lib/extend';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport {enumerable} from '../frame/util';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\n\nfunction bind(ctx) {\n    Object.defineProperties(ctx.origin, {\n        __fc__: enumerable(ctx, true)\n    });\n}\n\nexport default function RuleContext(handle, rule, defaultValue) {\n    const id = unique();\n\n    extend(this, {\n        id,\n        ref: id,\n        wrapRef: id + 'fi',\n        rule,\n        origin: rule.__origin__ || rule,\n        name: rule.name,\n\n        watch: [],\n        linkOn: [],\n        root: [],\n        ctrlRule: [],\n        parent: null,\n        cacheConfig: null,\n        prop: {...rule},\n        computed: {},\n        payload: {},\n        input: !!rule.field,\n        el: undefined,\n        defaultValue: rule.field ? deepCopy(defaultValue) : undefined,\n        field: rule.field || undefined,\n    })\n\n    this.updateType();\n    this.updateKey();\n    bind(this);\n    this.update(handle, true);\n}\n\nextend(RuleContext.prototype, {\n    effectData(name) {\n        if (!this.payload[name]) {\n            this.payload[name] = {};\n        }\n        return this.payload[name];\n    },\n    clearEffectData(name) {\n        if (name === undefined) {\n            this.payload = {};\n        } else {\n            delete this.payload[name];\n        }\n    },\n    updateKey(flag) {\n        this.key = unique();\n        flag && this.parent && this.parent.updateKey(flag);\n    },\n    updateType() {\n        this.originType = this.rule.type;\n        this.type = toCase(this.rule.type);\n    },\n    setParser(parser) {\n        this.parser = parser;\n        parser.init(this);\n    },\n    initProp() {\n        const rule = {...this.rule};\n        delete rule.children;\n        this.prop = mergeProps([rule, ...Object.keys(this.payload).map(k => this.payload[k]), this.computed]);\n    },\n    check(handle) {\n        return this.vm === handle.vm\n    },\n    unwatch() {\n        this.watch.forEach(un => un());\n        this.watch = [];\n    },\n    unlink() {\n        this.linkOn.forEach(un => un());\n        this.linkOn = [];\n    },\n    link() {\n        this.unlink();\n        this.$handle.appendLink(this);\n    },\n    watchTo() {\n        this.$handle.watchCtx(this);\n    },\n    delete() {\n        const undef = void 0;\n        this.unwatch();\n        this.unlink();\n        this.rmCtrl();\n        extend(this, {\n            deleted: true,\n            prop: {...this.rule},\n            computed: {},\n            el: undef,\n            $handle: undef,\n            $render: undef,\n            $api: undef,\n            vm: undef,\n            vNode: undef,\n            parent: null,\n            cacheConfig: null,\n        })\n    },\n    rmCtrl() {\n        this.ctrlRule.forEach(ctrl => ctrl.__fc__ && ctrl.__fc__.rm());\n        this.ctrlRule = [];\n    },\n    rm() {\n        const _rm = () => {\n            let index = this.root.indexOf(this.origin);\n            if (index > -1) {\n                this.root.splice(index, 1);\n                this.$handle && this.$handle.refresh();\n            }\n        }\n        if (this.deleted) {\n            _rm();\n            return;\n        }\n        this.$handle.noWatch(() => {\n            this.$handle.deferSyncValue(() => {\n                this.rmCtrl();\n                _rm();\n                this.$handle.rmCtx(this);\n                extend(this, {\n                    root: []\n                });\n            }, this.input);\n        });\n    },\n    update(handle, init) {\n        extend(this, {\n            deleted: false,\n            $handle: handle,\n            $render: handle.$render,\n            $api: handle.api,\n            vm: handle.vm,\n            trueType: handle.getType(this.originType),\n            vNode: handle.$render.vNode,\n            updated: false,\n        });\n        !init && this.unwatch();\n        this.watchTo();\n        this.link();\n    }\n})\n","import extend from '@form-create/utils/lib/extend';\nimport {byCtx, copyRule, enumerable, getRule, invoke, parseFn} from '../frame/util';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {baseRule} from '../factory/creator';\nimport RuleContext from '../factory/context';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport {$set} from '@form-create/utils';\n\nexport default function useLoader(Handler) {\n    extend(Handler.prototype, {\n        nextRefresh(fn) {\n            const id = this.loadedId;\n            this.vm.$nextTick(() => {\n                id === this.loadedId && (fn ? fn() : this.refresh());\n            });\n        },\n        parseRule(_rule) {\n            const rule = getRule(_rule);\n\n            Object.defineProperties(rule, {\n                __origin__: enumerable(_rule, true)\n            });\n\n            fullRule(rule);\n            this.appendValue(rule);\n\n            rule.options = Array.isArray(rule.options) ? rule.options : [];\n\n            [rule, rule['prefix'], rule['suffix']].forEach(item => {\n                if (!item) {\n                    return;\n                }\n                this.loadFn(item, rule);\n            });\n            this.loadCtrl(rule);\n            if (rule.update) {\n                rule.update = parseFn(rule.update);\n            }\n            return rule;\n        },\n        loadFn(item, rule) {\n            ['on', 'props', 'nativeOn', 'deep'].forEach(k => {\n                item[k] && this.parseInjectEvent(rule, item[k]);\n            });\n        },\n        loadCtrl(rule) {\n            rule.control && rule.control.forEach(ctrl => {\n                if (ctrl.handle) {\n                    ctrl.handle = parseFn(ctrl.handle)\n                }\n            })\n        },\n        syncProp(ctx) {\n            const rule = ctx.rule;\n            is.trueArray(rule.sync) && mergeProps([{\n                on: rule.sync.reduce((pre, prop) => {\n                    pre[`update:${prop}`] = (val) => {\n                        rule.props[prop] = val;\n                        this.vm.$emit('sync', prop, val, rule, this.fapi);\n                    }\n                    return pre\n                }, {})\n            }], ctx.computed)\n        },\n        loadRule() {\n            // console.warn('%c load', 'color:blue');\n            this.cycleLoad = false;\n            this.loading = true;\n            if (this.pageEnd) {\n                this.bus.$emit('load-start');\n            }\n            this.deferSyncValue(() => {\n                this._loadRule(this.rules);\n                this.loading = false;\n                if (this.cycleLoad && this.pageEnd) {\n                    return this.loadRule();\n                }\n                if (this.pageEnd) {\n                    this.bus.$emit('load-end');\n                }\n                this.vm._renderRule();\n                this.$render.initOrgChildren();\n                this.syncForm();\n            });\n        },\n        loadChildren(children, parent) {\n            this.cycleLoad = false;\n            this.loading = true;\n            this.bus.$emit('load-start');\n            this._loadRule(children, parent);\n            this.loading = false;\n            if (this.cycleLoad) {\n                return this.loadRule();\n            } else {\n                this.bus.$emit('load-end');\n                this.syncForm();\n            }\n            this.$render.clearCache(parent);\n        },\n        _loadRule(rules, parent) {\n\n            const preIndex = (i) => {\n                let pre = rules[i - 1];\n                if (!pre || !pre.__fc__) {\n                    return i > 0 ? preIndex(i - 1) : -1;\n                }\n                let index = this.sort.indexOf(pre.__fc__.id);\n                return index > -1 ? index : preIndex(i - 1);\n            }\n\n            const loadChildren = (children, parent) => {\n                if (is.trueArray(children)) {\n                    this._loadRule(children, parent);\n                }\n            };\n\n            rules.map((_rule, index) => {\n                if (parent && (is.String(_rule) || is.Undef(_rule))) return;\n                if (!this.pageEnd && !parent && index >= this.first) return;\n\n                if (_rule.__fc__ && _rule.__fc__.root === rules && this.ctxs[_rule.__fc__.id]) {\n                    loadChildren(_rule.__fc__.rule.children, _rule.__fc__);\n                    return _rule.__fc__;\n                }\n\n                let rule = getRule(_rule);\n\n                const isRepeat = () => {\n                    return !!(rule.field && this.fieldCtx[rule.field] && this.fieldCtx[rule.field][0] !== _rule.__fc__)\n                }\n\n                this.ruleEffect(rule, 'init', {repeat: isRepeat()});\n\n                if (isRepeat()) {\n                    this.vm.$emit('repeat-field', _rule, this.api);\n                }\n\n                let ctx;\n                let isCopy = false;\n                let isInit = !!_rule.__fc__;\n                let defaultValue = rule.value;\n                if (isInit) {\n                    ctx = _rule.__fc__;\n                    defaultValue = ctx.defaultValue;\n                    const check = !ctx.check(this);\n                    if (ctx.deleted) {\n                        if (check) {\n                            if (isCtrl(ctx)) {\n                                return;\n                            }\n                            ctx.update(this);\n                        }\n                    } else {\n                        if (check) {\n                            if (isCtrl(ctx)) {\n                                return;\n                            }\n                            rules[index] = _rule = _rule._clone ? _rule._clone() : copyRule(_rule);\n                            ctx = null;\n                            isCopy = true;\n                        }\n                    }\n                }\n                if (!ctx) {\n                    const rule = this.parseRule(_rule);\n                    ctx = new RuleContext(this, rule, isInit ? defaultValue : rule.value);\n                    this.bindParser(ctx);\n                } else {\n                    if (ctx.originType !== ctx.rule.type) {\n                        ctx.updateType();\n                        this.bindParser(ctx);\n                    }\n                    this.appendValue(ctx.rule);\n                }\n                [false, true].forEach(b => this.parseEmit(ctx, b));\n                this.syncProp(ctx);\n                ctx.parent = parent || null;\n                ctx.root = rules;\n                this.setCtx(ctx);\n\n                !isCopy && !isInit && this.effect(ctx, 'load');\n\n                ctx.parser.loadChildren === false || loadChildren(ctx.rule.children, ctx);\n\n                if (!parent) {\n                    const _preIndex = preIndex(index);\n                    if (_preIndex > -1 || !index) {\n                        this.sort.splice(_preIndex + 1, 0, ctx.id);\n                    } else {\n                        this.sort.push(ctx.id);\n                    }\n                }\n\n                const r = ctx.rule;\n                if (!ctx.updated) {\n                    ctx.updated = true;\n                    if (is.Function(r.update)) {\n                        this.bus.$once('load-end', () => {\n                            this.refreshUpdate(ctx, r.value);\n                        });\n                    }\n                    this.effect(ctx, 'loaded');\n                }\n\n                if (ctx.input)\n                    Object.defineProperty(r, 'value', this.valueHandle(ctx));\n                if (this.refreshControl(ctx)) this.cycleLoad = true;\n                return ctx;\n            });\n        },\n        refreshControl(ctx) {\n            return ctx.input && ctx.rule.control && this.useCtrl(ctx);\n        },\n        useCtrl(ctx) {\n            const controls = getCtrl(ctx), validate = [], api = this.api;\n            if (!controls.length) return false;\n\n            for (let i = 0; i < controls.length; i++) {\n                const control = controls[i], handleFn = control.handle || (val => val === control.value);\n                if (!is.trueArray(control.rule)) continue;\n                const data = {\n                    ...control,\n                    valid: invoke(() => handleFn(ctx.rule.value, api)),\n                    ctrl: findCtrl(ctx, control.rule),\n                    isHidden: is.String(control.rule[0]),\n                };\n                if ((data.valid && data.ctrl) || (!data.valid && !data.ctrl && !data.isHidden)) continue;\n                validate.push(data);\n            }\n            if (!validate.length) return false;\n\n            const hideLst = [];\n            let flag = false;\n            this.deferSyncValue(() => {\n                validate.reverse().forEach(({isHidden, valid, rule, prepend, append, child, ctrl}) => {\n                    if (isHidden) {\n                        valid ? ctx.ctrlRule.push({\n                            __ctrl: true,\n                            children: rule,\n                            valid\n                        })\n                            : ctx.ctrlRule.splice(ctx.ctrlRule.indexOf(ctrl), 1);\n                        hideLst[valid ? 'push' : 'unshift'](() => {\n                            this.api.hidden(!valid, rule);\n                        });\n                        return;\n                    }\n                    if (valid) {\n                        flag = true;\n                        const ruleCon = {\n                            type: 'fcFragment',\n                            native: true,\n                            __ctrl: true,\n                            children: rule,\n                        }\n                        ctx.ctrlRule.push(ruleCon);\n                        this.bus.$once('load-start', () => {\n                            // this.cycleLoad = true;\n                            if (prepend) {\n                                api.prepend(ruleCon, prepend, child)\n                            } else if (append || child) {\n                                api.append(ruleCon, append || ctx.id, child)\n                            } else {\n                                ctx.root.splice(ctx.root.indexOf(ctx.origin) + 1, 0, ruleCon);\n                            }\n                        });\n                    } else {\n                        ctx.ctrlRule.splice(ctx.ctrlRule.indexOf(ctrl), 1);\n                        const ctrlCtx = byCtx(ctrl);\n                        ctrlCtx && ctrlCtx.rm();\n                    }\n                });\n            });\n            hideLst.length && this.vm.$nextTick(() => {\n                hideLst.forEach(v => v());\n            });\n            this.vm.$emit('control', ctx.origin, this.api);\n            this.effect(ctx, 'control');\n            return flag;\n        },\n        reloadRule(rules) {\n            return this._reloadRule(rules);\n        },\n        _reloadRule(rules) {\n            // console.warn('%c reload', 'color:red');\n            if (!rules) rules = this.rules;\n\n            const ctxs = {...this.ctxs};\n\n            this.clearNextTick();\n            this.$render.clearOrgChildren();\n            this.initData(rules);\n            this.fc.rules = rules;\n            this.deferSyncValue(() => {\n                this.bus.$once('load-end', () => {\n                    Object.keys(ctxs).filter(id => this.ctxs[id] === undefined)\n                        .forEach(id => this.rmCtx(ctxs[id]));\n                    this.$render.clearCacheAll();\n                });\n                this.reloading = true;\n                this.loadRule();\n                this.reloading = false;\n                this.refresh();\n                this.vm.$emit('reloading', this.api);\n            });\n            this.bus.$off('next-tick', this.nextReload);\n            this.bus.$once('next-tick', this.nextReload);\n            this.vm.$emit('update', this.api);\n        },\n        //todo 组件生成全部通过 alias\n        refresh() {\n            this.vm._refresh();\n        },\n    });\n}\n\nfunction fullRule(rule) {\n    const def = baseRule();\n\n    Object.keys(def).forEach(k => {\n        if (!hasProperty(rule, k)) $set(rule, k, def[k]);\n    });\n    return rule;\n}\n\nfunction getCtrl(ctx) {\n    const control = ctx.rule.control || [];\n    if (is.Object(control)) return [control];\n    else return control;\n}\n\nfunction findCtrl(ctx, rule) {\n    for (let i = 0; i < ctx.ctrlRule.length; i++) {\n        const ctrl = ctx.ctrlRule[i];\n        if (ctrl.children === rule)\n            return ctrl;\n    }\n}\n\nfunction isCtrl(ctx) {\n    return !!ctx.rule.__ctrl;\n}\n","import extend from '@form-create/utils/lib/extend';\nimport {$set} from '@form-create/utils/lib/modify';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\nimport toArray from '@form-create/utils/lib/toarray';\n\nexport default function useInput(Handler) {\n    extend(Handler.prototype, {\n        getValue(ctx) {\n            if (is.Undef(ctx.cacheValue)) {\n                ctx.cacheValue = ctx.parser.toValue(this.getFormData(ctx), ctx);\n            }\n            return ctx.cacheValue;\n        },\n        setValue(ctx, value, formValue, setFlag) {\n            if (ctx.deleted) return;\n            ctx.cacheValue = value;\n            this.changeStatus = true;\n            this.nextRefresh();\n            this.$render.clearCache(ctx);\n            this.setFormData(ctx, formValue);\n            this.syncValue();\n            this.valueChange(ctx, value);\n            this.vm.$emit('change', ctx.field, value, ctx.origin, this.api, setFlag || false);\n            this.effect(ctx, 'value');\n        },\n        onInput(ctx, value) {\n            let val;\n            if (ctx.input && (this.isQuote(ctx, val = ctx.parser.toValue(value, ctx)) || this.isChange(ctx, val))) {\n                this.setValue(ctx, val, value);\n            }\n        },\n        setFormData(ctx, value) {\n            $set(this.formData, ctx.id, value === null ? undefined : value);\n        },\n        getFormData(ctx) {\n            return this.formData[ctx.id];\n        },\n        validate() {\n            toEmpty(this.vm.validate);\n            this.fields().forEach(id => {\n                this.fieldCtx[id].forEach(ctx => {\n                    this.vm.validate[ctx.id] = toArray(ctx.rule.validate);\n                });\n            });\n            return this.vm.validate;\n        },\n        syncForm() {\n            toEmpty(this.form);\n            Object.defineProperties(this.form, this.fields().reduce((initial, field) => {\n                const ctx = this.getFieldCtx(field);\n                const handle = this.valueHandle(ctx);\n                handle.configurable = true;\n                initial[field] = handle;\n                return initial;\n            }, this.options.appendValue ? Object.keys(this.appendData).reduce((initial, field) => {\n                initial[field] = {\n                    enumerable: true,\n                    configurable: true,\n                    get: () => {\n                        return this.appendData[field];\n                    },\n                    set: (val) => {\n                        this.appendData[field] = val;\n                    }\n                }\n                return initial;\n            }, {}) : {}));\n            this.syncValue();\n        },\n        valueHandle(ctx) {\n            return {\n                enumerable: true,\n                get: () => {\n                    return this.getValue(ctx);\n                },\n                set: (value) => {\n                    if (this.isChange(ctx, value)) {\n                        this.setValue(ctx, value, ctx.parser.toFormValue(value, ctx), true);\n                    }\n                }\n            };\n        },\n        appendValue(rule) {\n            if (!rule.field || !hasProperty(this.appendData, rule.field)) return;\n            rule.value = this.appendData[rule.field];\n            delete this.appendData[rule.field];\n        },\n        addSubForm(ctx, subForm) {\n            this.subForm[ctx.id] = subForm;\n        },\n        deferSyncValue(fn, sync) {\n            if (!this.deferSyncFn) {\n                this.deferSyncFn = fn;\n            }\n            if (!this.deferSyncFn.sync) {\n                this.deferSyncFn.sync = sync;\n            }\n            invoke(fn);\n            if (this.deferSyncFn === fn) {\n                this.deferSyncFn = null;\n                if (fn.sync) {\n                    this.syncValue();\n                }\n            }\n        },\n        syncValue() {\n            if (this.deferSyncFn) {\n                return this.deferSyncFn.sync = true;\n            }\n            this.vm._updateValue({...(this.options.appendValue ? this.appendData : {}), ...this.form});\n        },\n        isChange(ctx, value) {\n            return JSON.stringify(ctx.rule.value, strFn) !== JSON.stringify(value === null ? undefined : value, strFn);\n        },\n        isQuote(ctx, value) {\n            return (is.Object(value) || Array.isArray(value)) && value === ctx.rule.value;\n        },\n        refreshUpdate(ctx, val) {\n            if (is.Function(ctx.rule.update)) {\n                const state = invoke(() => ctx.rule.update(val, ctx.origin, this.api));\n                if (state === undefined) return;\n                ctx.rule.hidden = state === true;\n            }\n        },\n        valueChange(ctx, val) {\n            this.refreshRule(ctx, val);\n            this.bus.$emit('change-' + ctx.field, val);\n        },\n        refreshRule(ctx, val) {\n            if (this.refreshControl(ctx)) {\n                this.$render.clearCacheAll();\n                this.loadRule();\n                this.vm.$emit('update', this.api);\n                this.refresh();\n            }\n            this.refreshUpdate(ctx, val);\n        },\n        appendLink(ctx) {\n            const link = ctx.rule.link;\n            is.trueArray(link) && link.forEach(field => {\n                const fn = () => this.refreshRule(ctx, ctx.rule.value);\n\n                this.bus.$on('change-' + field, fn);\n                ctx.linkOn.push(() => this.bus.$off('change-' + field, fn));\n            });\n        },\n        fields() {\n            return Object.keys(this.fieldCtx);\n        },\n    });\n}\n\n\nfunction strFn(key, val) {\n    return typeof val === 'function' ? '' + val : val;\n}\n\nfunction toEmpty(obj) {\n    Object.keys(obj).forEach(k => delete obj[k]);\n}\n","const BaseParser = {\n    init(ctx) {\n    },\n    toFormValue(value, ctx) {\n        return value\n    },\n    toValue(formValue, ctx) {\n        return formValue;\n    },\n    mounted(ctx) {\n    },\n    render(children, ctx) {\n        return ctx.$render.defaultRender(ctx, children);\n    },\n    preview(children, ctx) {\n        return this.render(children, ctx);\n    },\n    mergeProp(ctx) {\n    }\n}\n\nexport default BaseParser;\n","import extend from '@form-create/utils/lib/extend';\nimport toCase from '@form-create/utils/lib/tocase';\nimport BaseParser from '../factory/parser';\nimport {$del} from '@form-create/utils/lib/modify';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\n\nconst noneKey = ['field', 'value', 'vm', 'template', 'name', 'config', 'control', 'inject', 'sync', 'payload', 'optionsTo', 'update', 'component', 'cache'];\n\nexport default function useContext(Handler) {\n    extend(Handler.prototype, {\n        getCtx(id) {\n            return this.getFieldCtx(id) || this.getNameCtx(id)[0] || this.ctxs[id];\n        },\n        getCtxs(id) {\n            return this.fieldCtx[id] || this.nameCtx[id] || (this.ctxs[id] ? [this.ctxs[id]] : []);\n        },\n        setIdCtx(ctx, key, type) {\n            const field = `${type}Ctx`;\n            if (!this[field][key]) {\n                this[field][key] = [ctx];\n            } else {\n                this[field][key].push(ctx);\n            }\n        },\n        rmIdCtx(ctx, key, type) {\n            const field = `${type}Ctx`;\n            const lst = this[field][key];\n            if (!lst) return false;\n            const flag = lst.splice(lst.indexOf(ctx) >>> 0, 1).length > 0;\n            if (!lst.length) {\n                delete this[field][key];\n            }\n            return flag;\n        },\n        getFieldCtx(field) {\n            return (this.fieldCtx[field] || [])[0];\n        },\n        getNameCtx(name) {\n            return this.nameCtx[name] || [];\n        },\n        setCtx(ctx) {\n            let {id, field, name, rule} = ctx;\n            this.ctxs[id] = ctx;\n            name && this.setIdCtx(ctx, name, 'name');\n            if (!ctx.input) return;\n            this.setIdCtx(ctx, field, 'field');\n            this.setFormData(ctx, ctx.parser.toFormValue(rule.value, ctx));\n            if (this.isMounted && !this.reloading) {\n                this.vm.$emit('change', ctx.field, rule.value, ctx.origin, this.api);\n            }\n        },\n        getParser(ctx) {\n            const list = this.fc.parsers;\n            return list[ctx.originType] || list[toCase(ctx.type)] || list[ctx.trueType] || BaseParser;\n        },\n        bindParser(ctx) {\n            ctx.setParser(this.getParser(ctx));\n        },\n        getType(alias) {\n            const map = this.fc.CreateNode.aliasMap;\n            const type = map[alias] || map[toCase(alias)] || alias;\n            return toCase(type);\n        },\n        noWatch(fn) {\n            if (!this.noWatchFn) {\n                this.noWatchFn = fn;\n            }\n            invoke(fn);\n            if (this.noWatchFn === fn) {\n                this.noWatchFn = null;\n            }\n        },\n        watchCtx(ctx) {\n            const vm = this.vm;\n            Object.keys(ctx.rule).filter(k => k[0] !== '_' && k[0] !== '$' && noneKey.indexOf(k) === -1).forEach((key) => {\n                const flag = key === 'children';\n                ctx.watch.push(vm.$watch(() => ctx.rule[key], (n, o) => {\n                    if (this.loading || this.noWatchFn || this.reloading) return;\n                    if (flag && ctx.parser.loadChildren === false) {\n                        this.$render.clearCache(ctx);\n                        this.nextRefresh();\n                        return;\n                    }\n                    this.watching = true;\n                    // if (key === 'hidden')\n                    //     ctx.updateKey(true);\n                    // else\n                    if (key === 'link') {\n                        ctx.link();\n                        return;\n                    } else if (['props', 'on', 'nativeOn', 'deep'].indexOf(key) > -1) {\n                        this.parseInjectEvent(ctx.rule, n || {});\n                        if (key === 'props' && ctx.input) {\n                            this.setFormData(ctx, ctx.parser.toFormValue(ctx.rule.value, ctx));\n                        }\n                    } else if (['emit', 'nativeEmit'].indexOf(key) > -1)\n                        this.parseEmit(ctx, key === 'emit');\n                    else if (['prefix', 'suffix'].indexOf(key) > -1)\n                        n && this.loadFn(n, ctx.rule);\n                    else if (key === 'type') {\n                        ctx.updateType();\n                        this.bindParser(ctx);\n                    } else if (key === 'children') {\n                        const flag = is.trueArray(n);\n                        this.deferSyncValue(() => {\n                            if (n !== o) {\n                                this.rmSub(o, ctx);\n                                this.$render.initOrgChildren();\n                            }\n                            flag && this.loadChildren(n, ctx);\n                            this.vm.$emit('update', this.api);\n                        });\n                    }\n                    this.$render.clearCache(ctx);\n                    this.refresh();\n                    this.watching = false;\n                }, {deep: !flag, sync: flag}));\n            });\n            this.watchEffect(ctx);\n        },\n        rmSub(sub, ctx) {\n            is.trueArray(sub) && sub.forEach(r => {\n                r && r.__fc__ && r.__fc__.parent === ctx && this.rmCtx(r.__fc__);\n            })\n        },\n        rmCtx(ctx) {\n            if (ctx.deleted) return;\n            const {id, field, input, name} = ctx;\n            if (ctx.input) {\n                Object.defineProperty(ctx.rule, 'value', {\n                    value: ctx.rule.value,\n                    writable: true\n                });\n            }\n\n            $del(this.ctxs, id);\n            $del(this.$render.tempList, id);\n            $del(this.$render.orgChildren, id);\n            $del(this.vm.ctxInject, id);\n            $del(this.formData, id);\n            $del(this.subForm, id);\n            $del(ctx, 'cacheValue');\n\n            input && this.rmIdCtx(ctx, field, 'field');\n            name && this.rmIdCtx(ctx, name, 'name');\n\n            if (input && !hasProperty(this.fieldCtx, field)) {\n                $del(this.form, field);\n            }\n\n            this.deferSyncValue(() => {\n                if (!this.reloading) {\n                    if (ctx.parser.loadChildren !== false) {\n                        if (is.trueArray(ctx.rule.children)) {\n                            ctx.rule.children.forEach(h => h.__fc__ && this.rmCtx(h.__fc__));\n                        }\n                    }\n                    if (ctx.root === this.rules) {\n                        this.vm._renderRule();\n                    }\n                }\n            }, input);\n\n            const index = this.sort.indexOf(id);\n            if (index > -1) {\n                this.sort.splice(index, 1);\n            }\n\n            this.$render.clearCache(ctx);\n            ctx.delete();\n            this.effect(ctx, 'deleted');\n            input && !this.fieldCtx[field] && this.vm.$emit('removeField', field, ctx.rule, this.api);\n            ctx.rule.__ctrl || this.vm.$emit('removeRule', ctx.rule, this.api);\n            return ctx;\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\n\n\nexport default function useLifecycle(Handler) {\n    extend(Handler.prototype, {\n        mounted() {\n            const _mounted = () => {\n                this.isMounted = true;\n                this.lifecycle('mounted');\n            }\n            if (this.pageEnd) {\n                _mounted();\n            } else {\n                this.bus.$once('page-end', _mounted);\n            }\n        },\n        lifecycle(name) {\n            const fn = this.options[name];\n            is.Function(fn) && invoke(() => fn(this.api));\n            this.vm.$emit(name, this.api);\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\n\n\nexport default function useEffect(Handler) {\n    extend(Handler.prototype, {\n        useProvider() {\n            const ps = this.fc.providers;\n            Object.keys(ps).forEach(k => {\n                let prop = ps[k];\n                if (is.Function(prop)) {\n                    prop = prop(this.fc);\n                }\n                prop._c = getComponent(prop);\n                this.onEffect(prop);\n                this.providers[k] = prop;\n            });\n        },\n        onEffect(provider) {\n            const used = [];\n            (provider._c || ['*']).forEach(name => {\n                const type = name === '*' ? '*' : this.getType(name);\n                if (used.indexOf(type) > -1) return;\n                used.push(type);\n                this.bus.$on(`p:${provider.name}:${type}:${provider.input ? 1 : 0}`, (event, args) => {\n                    provider[event] && provider[event](...args);\n                });\n            });\n            provider._used = used;\n        },\n        watchEffect(ctx) {\n            const vm = this.vm;\n            let effect = {};\n            Object.keys(ctx.rule.effect || {}).forEach(k => {\n                effect[k] = () => ctx.rule.effect[k];\n            })\n            Object.keys(ctx.rule).forEach(k => {\n                if (k[0] === '$') {\n                    effect[k.substr(1)] = () => ctx.rule[k];\n                }\n            })\n            Object.keys(effect || {}).forEach(k => {\n                ctx.watch.push(vm.$watch(effect[k], (n) => {\n                    this.effect(ctx, 'watch', {[k]: n});\n                }, {deep: true}));\n            });\n        },\n        ruleEffect(rule, event, append) {\n            this.emitEffect({\n                rule,\n                input: !!rule.field,\n                type: this.getType(rule.type)\n            }, event, append);\n        },\n        effect(ctx, event, custom) {\n            this.emitEffect({\n                rule: ctx.rule,\n                input: ctx.input,\n                type: ctx.trueType,\n                ctx,\n                custom\n            }, event);\n        },\n        getEffect(rule, name) {\n            if (hasProperty(rule, '$' + name)) {\n                return rule['$' + name];\n            }\n            if (hasProperty(rule, 'effect') && hasProperty(rule.effect, name))\n                return rule.effect[name];\n            return undefined;\n        },\n        emitEffect({ctx, rule, input, type, custom}, event, append) {\n            if (!type || type === 'fcFragment') return;\n            const effect = custom ? custom : (Object.keys(rule).reduce((i, k) => {\n                if (k[0] === '$') {\n                    i[k.substr(1)] = rule[k];\n                }\n                return i;\n            }, {...rule.effect || {}}));\n            Object.keys(effect).forEach(attr => {\n                const p = this.providers[attr];\n                if (!p || (p.input && !input)) return;\n                let _type;\n                if (!p._c) {\n                    _type = '*';\n                } else if (p._used.indexOf(type) > -1) {\n                    _type = type;\n                } else {\n                    return;\n                }\n                const data = {value: effect[attr], getValue: () => this.getEffect(rule, attr), ...(append || {})};\n                if (ctx) {\n                    data.getProp = () => ctx.effectData(attr);\n                    data.clearProp = () => ctx.clearEffectData(attr);\n                    data.mergeProp = (prop) => mergeProps([prop], data.getProp());\n                }\n                this.bus.$emit(`p:${attr}:${_type}:${p.input ? 1 : 0}`, event, [data, rule, this.api]);\n            });\n        }\n    });\n}\n\nfunction unique(arr) {\n    return arr.filter(function (item, index, arr) {\n        return arr.indexOf(item, 0) === index;\n    });\n}\n\nfunction getComponent(p) {\n    const c = p.components;\n    if (Array.isArray(c)) return unique(c.filter(v => v !== '*'));\n    else if (is.String(c)) return [c];\n    else return false;\n}\n","import Api from '../frame/api';\nimport Render from '../render';\nimport extend from '@form-create/utils/lib/extend';\nimport {funcProxy} from '../frame/util';\nimport useInject from './inject';\nimport usePage from './page';\nimport useRender from './render';\nimport useLoader from './loader';\nimport useInput from './input';\nimport useContext from './context';\nimport useLifecycle from './lifecycle';\nimport useEffect from './effect';\n\n\nexport default function Handler(fc) {\n    extend(this, {\n        fc,\n        vm: fc.vm,\n        watching: false,\n        loading: false,\n        reloading: false,\n        noWatchFn: null,\n        deferSyncFn: null,\n        isMounted: false,\n        formData: {},\n        subForm: {},\n        form: {},\n        appendData: {},\n        providers: {},\n        cycleLoad: null,\n        loadedId: 1,\n        nextTick: null,\n        changeStatus: false,\n        pageEnd: true,\n        nextReload: () => {\n            this.lifecycle('reload');\n        }\n    });\n\n    funcProxy(this, {\n        options() {\n            return fc.options;\n        },\n        bus() {\n            return fc.bus;\n        },\n    })\n\n    this.initData(fc.rules);\n\n    this.$manager = new fc.manager(this);\n    this.$render = new Render(this);\n    this.api = fc.extendApi(Api(this), this);\n}\n\nextend(Handler.prototype, {\n    initData(rules) {\n        extend(this, {\n            ctxs: {},\n            fieldCtx: {},\n            nameCtx: {},\n            sort: [],\n            rules,\n        });\n    },\n    init() {\n        this.appendData = {...this.fc.options.formData || {}, ...this.vm.value || {}, ...this.appendData};\n        this.useProvider();\n        this.usePage();\n        this.loadRule();\n        this.$manager.__init();\n        this.vm.$set(this.vm, 'formData', this.formData);\n    },\n})\n\nuseInject(Handler);\nusePage(Handler);\nuseRender(Handler);\nuseLoader(Handler);\nuseInput(Handler);\nuseContext(Handler);\nuseLifecycle(Handler);\nuseEffect(Handler);\n","// https://github.com/ElemeFE/element/blob/dev/packages/upload/src/ajax.js\n\nfunction getError(action, option, xhr) {\n    const msg = `fail to ${action} ${xhr.status}'`;\n    const err = new Error(msg);\n    err.status = xhr.status;\n    err.url = action;\n    return err;\n}\n\nfunction getBody(xhr) {\n    const text = xhr.responseText || xhr.response;\n    if (!text) {\n        return text;\n    }\n\n    try {\n        return JSON.parse(text);\n    } catch (e) {\n        return text;\n    }\n}\n\nexport default function fetch(option) {\n    if (typeof XMLHttpRequest === 'undefined') {\n        return;\n    }\n\n    const xhr = new XMLHttpRequest();\n    const action = option.action;\n\n    xhr.onerror = function error(e) {\n        option.onError(e);\n    };\n\n    xhr.onload = function onload() {\n        if (xhr.status < 200 || xhr.status >= 300) {\n            return option.onError(getError(action, option, xhr), getBody(xhr));\n        }\n\n        option.onSuccess(getBody(xhr));\n    };\n\n    xhr.open(option.method || 'get', action, true);\n\n    let formData;\n    if (option.data) {\n        if ((option.dataType || '').toLowerCase() !== 'json') {\n            formData = new FormData();\n            Object.keys(option.data).map(key => {\n                formData.append(key, option.data[key]);\n            });\n        } else {\n            formData = JSON.stringify(option.data);\n            xhr.setRequestHeader('content-type', 'application/json');\n        }\n    }\n\n\n    if (option.withCredentials && 'withCredentials' in xhr) {\n        xhr.withCredentials = true;\n    }\n\n    const headers = option.headers || {};\n\n    Object.keys(headers).forEach(item => {\n        if (headers[item] !== null) {\n            xhr.setRequestHeader(item, headers[item]);\n        }\n    });\n    xhr.send(formData);\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: ['vnode'],\n    render(h, ctx) {\n        return ctx.props.vnode ? ctx.props.vnode : ctx.children\n    }\n}\n","import toLine from '@form-create/utils/lib/toline';\nimport is from '@form-create/utils/lib/type';\nimport toString from '@form-create/utils/lib/tostring';\nimport extend from '@form-create/utils/lib/extend';\nimport Vue from 'vue';\n\nfunction parseProp(prop) {\n    if (is.String(prop))\n        return {domProps: {innerHTML: prop}};\n    return prop;\n}\n\nexport function CreateNodeFactory() {\n\n    const aliasMap = {};\n\n    function CreateNode(vm) {\n        vm && this.setVm(vm);\n    }\n\n    extend(CreateNode.prototype, {\n        setVm(vm) {\n            this.vm = vm;\n            this.$h = vm.$createElement;\n        },\n        make(tag, data, children) {\n            if (Vue.config.isReservedTag(tag) && data.nativeOn) delete data.nativeOn;\n            return this.makeComponent(tag, data, children);\n        },\n        makeComponent(type, data, children) {\n            let Node = this.$h(type, parseProp(data), children || []);\n            Node.context = this.vm;\n            return Node;\n        },\n        aliasMap\n    });\n\n    extend(CreateNode, {\n        aliasMap,\n        alias(alias, name) {\n            aliasMap[alias] = name;\n        },\n        use(nodes) {\n            Object.keys(nodes).forEach((k) => {\n                const line = toLine(k);\n                const lower = toString(k).toLocaleLowerCase();\n                const v = nodes[k];\n                [k, line, lower].forEach(n => {\n                    CreateNode.alias(k, v);\n                    CreateNode.prototype[n] = function (data, children) {\n                        return this.make(v, data, children);\n                    };\n                });\n            });\n        }\n    })\n\n    return CreateNode;\n}\n","import mergeProps from '@form-create/utils/lib/mergeprops';\nimport unique from '@form-create/utils/lib/unique';\nimport extend from '@form-create/utils/lib/extend';\n\nexport function createManager(proto) {\n    class CustomManager extends Manager {\n    }\n\n    Object.assign(CustomManager.prototype, proto);\n    return CustomManager;\n}\n\nexport default function Manager(handler) {\n    extend(this, {\n        $handle: handler,\n        vm: handler.vm,\n        options: {},\n        ref: 'fcForm',\n        mergeOptionsRule: {\n            normal: ['form', 'row', 'info', 'submitBtn', 'resetBtn']\n        }\n    });\n    this.updateKey();\n    this.init();\n}\n\nextend(Manager.prototype, {\n    __init() {\n        this.$render = this.$handle.$render;\n        this.$r = (...args) => this.$render.renderRule(...args);\n    },\n    updateKey() {\n        this.key = unique();\n    },\n    //TODO interface\n    init() {\n    },\n    update() {\n    },\n    beforeRender() {\n    },\n    form() {\n        return this.vm.$refs[this.ref];\n    },\n    mergeOptions(args, opt) {\n        return mergeProps(args.map(v => this.tidyOptions(v)), opt, this.mergeOptionsRule);\n    },\n    updateOptions(options) {\n        this.options = this.mergeOptions([options], this.getDefaultOptions());\n        this.update();\n    },\n    tidyOptions(options) {\n        return options;\n    },\n    tidyRule(ctx) {\n    },\n    mergeProp(ctx) {\n    },\n    getDefaultOptions() {\n        return {};\n    },\n    render(children) {\n    }\n})\n","import {err} from '@form-create/utils/lib/console';\nimport {invoke} from './util';\nimport is from '@form-create/utils/lib/type';\nimport deepSet from '@form-create/utils/lib/deepset';\n\nconst fetch = function (fc) {\n\n    function parseOpt(option) {\n        if (is.String(option)) {\n            option = {\n                action: option,\n                to: 'options'\n            }\n        }\n        return option;\n    }\n\n    function run(inject, rule, api) {\n        let option = inject.value;\n        if (is.Function(option)) {\n            option = option(rule, api);\n        }\n        option = parseOpt(option);\n        if (!option || !option.action) {\n            return false;\n        }\n        if (!option.to) {\n            option.to = 'options';\n        }\n        const onError = option.onError;\n\n        const check = () => {\n            if (!inject.getValue()) {\n                inject.clearProp();\n                api.sync(rule);\n                return true;\n            }\n        }\n\n        const set = (val) => {\n            if (val === undefined) {\n                inject.clearProp();\n                api.sync(rule);\n            } else {\n                deepSet(inject.getProp(), option.to, val);\n            }\n        }\n\n        invoke(() => fc.create.fetch({\n            ...option,\n            onSuccess(body) {\n                if (check()) return;\n                let fn = (v) => v.data;\n                if (is.Function(option.parse)) {\n                    fn = option.parse;\n                }\n                set(fn(body, rule, api))\n                api.sync(rule);\n            },\n            onError(e) {\n                set(undefined)\n                if (check()) return;\n                (onError || ((e) => err(e.message || 'fetch fail ' + option.action)))(e, rule, api);\n            }\n        }, {inject, rule, api}));\n        return true;\n    }\n\n    return {\n        name: 'fetch',\n        loaded(...args) {\n            run(...args);\n        },\n        watch(inject, rule, api) {\n            if (!run(inject, rule, api)) {\n                inject.clearProp();\n                api.sync(rule);\n            }\n        }\n    };\n}\n\n\nconst $required = {\n    name: 'required',\n    load(inject, rule, api) {\n        const val = parseVal(inject.getValue());\n        if (val.required === false) {\n            inject.clearProp();\n        } else {\n            const validate = {\n                required: true,\n                validator(_, v, call) {\n                    is.empty(v) ? call(validate.message) : call();\n                },\n                ...val,\n            };\n            if (!validate.message) {\n                let title = rule.title || '';\n                validate.message = ((typeof title === 'object' ? title.title : title) || '') + '不能为空';\n            }\n            inject.getProp().validate = [validate];\n        }\n        api.sync(rule);\n    },\n    watch(...args) {\n        $required.load(...args);\n    }\n}\n\nfunction parseVal(val) {\n    if (is.Boolean(val)) {\n        return {required: val}\n    } else if (is.String(val)) {\n        return {message: val};\n    } else if (is.Function(val)) {\n        return {validator: val};\n    } else if (!is.Object(val)) {\n        return {};\n    } else {\n        return val;\n    }\n}\n\nexport default {\n    fetch,\n    required: $required,\n};\n","import is from '@form-create/utils/lib/type';\n\nconst name = 'html';\n\nexport default {\n    name,\n    loadChildren: false,\n    render(children, ctx) {\n        if (!ctx.prop.domProps) ctx.prop.domProps = {};\n        ctx.prop.domProps.innerHTML = children;\n        return ctx.vNode.make(ctx.prop.props.tag || 'div', ctx.prop);\n    },\n    renderChildren(ctx) {\n        if (Array.isArray(ctx.rule.children)) {\n            return ctx.rule.children.filter(v => is.String(v)).join('');\n        }\n        return '';\n    }\n}\n","import $FormCreate from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from '../handler';\nimport fetch from './fetch';\nimport {creatorFactory} from '..';\nimport BaseParser from '../factory/parser';\nimport {copyRule, copyRules, mergeGlobal, parseJson, toJson, parseFn} from './util';\nimport fragment from '../components/fragment';\nimport is from '@form-create/utils/lib/type';\nimport toCase from '@form-create/utils/lib/tocase';\nimport extend from '@form-create/utils/lib/extend';\nimport {CreateNodeFactory} from '../factory/node';\nimport {createManager} from '../factory/manager';\nimport {arrayAttrs, keyAttrs, normalAttrs} from './attrs';\nimport {appendProto} from '../factory/creator';\nimport $provider from './provider';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\nimport html from '../parser/html';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nfunction _parseProp(name, id) {\n    let prop;\n    if (arguments.length === 2) {\n        prop = arguments[1];\n        id = prop[name];\n    } else {\n        prop = arguments[2];\n    }\n    return {id, prop};\n}\n\nfunction nameProp() {\n    return _parseProp('name', ...arguments);\n}\n\nfunction _getEl(options) {\n    if (!options || !options.el) return window.document.body;\n    return is.Element(options.el)\n        ? options.el\n        : document.querySelector(options.el);\n}\n\nfunction mountForm(rules, option) {\n    const $vm = new _vue({\n        data() {\n            //todo 外部无法修改\n            return {rule: rules, option: option || {}};\n        },\n        render(h) {\n            return h('FormCreate', {ref: 'fc', props: this.$data});\n        }\n    });\n    $vm.$mount();\n    return $vm;\n}\n\nfunction exportAttrs(attrs) {\n    const key = attrs.key || [];\n    const array = attrs.array || [];\n    const normal = attrs.normal || [];\n    keyAttrs.push(...key);\n    arrayAttrs.push(...array);\n    normalAttrs.push(...normal);\n\n    appendProto([...key, ...array, ...normal]);\n}\n\nlet id = 1;\nconst instance = {};\n\n//todo 表单嵌套\nexport default function FormCreateFactory(config) {\n\n    const components = {\n        [fragment.name]: fragment\n    };\n    const parsers = {};\n    const directives = {};\n    const providers = {\n        ...$provider\n    };\n    const maker = makerFactory();\n    let globalConfig = {global: {}};\n    const data = {};\n    const CreateNode = CreateNodeFactory();\n\n    exportAttrs(config.attrs || {});\n\n    function getApi(name) {\n        const val = instance[name];\n        if (Array.isArray(val))\n            return [...val];\n        return val;\n    }\n\n    function directive() {\n        const data = nameProp(...arguments);\n        if (data.id && data.prop) directives[data.id] = data.prop;\n    }\n\n    function register() {\n        const data = nameProp(...arguments);\n        if (data.id && data.prop) providers[data.id] = {...data.prop, name: data.id};\n    }\n\n    function componentAlias(alias) {\n        CreateNode.use(alias);\n    }\n\n    function parser() {\n        const data = nameProp(...arguments);\n        if (!data.id || !data.prop) return;\n        const name = toCase(data.id);\n        const parser = data.prop;\n        const base = parser.merge === true ? parsers[name] : undefined;\n        parsers[name] = {...(base || BaseParser), ...parser};\n        maker[name] = creatorFactory(name);\n        parser.maker && extend(maker, parser.maker);\n    }\n\n    function component(id, component) {\n        let name;\n        if (is.String(id)) {\n            name = toCase(id);\n            if (['form-create', 'formcreate'].indexOf(name) > -1) {\n                return $form();\n            } else if (component === undefined) {\n                return components[name];\n            }\n        } else {\n            name = toCase(id.name);\n            component = id;\n        }\n        if (!name || !component) return;\n        components[name] = component;\n        if (component.formCreateParser) parser(name, component.formCreateParser);\n    }\n\n    function $form() {\n        return _vue.extend($FormCreate(FormCreate));\n    }\n\n    function $vnode() {\n        return _vue.extend(fragment);\n    }\n\n    //todo 检查回调函数作用域\n    function use(fn, opt) {\n        if (is.Function(fn.install)) fn.install(create, opt);\n        else if (is.Function(fn)) fn(create, opt);\n        return this;\n    }\n\n    function create(rules, _opt, parent) {\n        let $vm = mountForm(rules, _opt || {});\n        const _this = $vm.$refs.fc.formCreate;\n        _this.$parent = parent;\n        _getEl(_this.options).appendChild($vm.$el);\n        return _this.api();\n    }\n\n    function factory(inherit) {\n        let _config = {...config};\n        if (inherit) {\n            _config.inherit = {\n                components,\n                parsers,\n                directives,\n                providers,\n                maker,\n                data\n            }\n        } else {\n            delete _config.inherit;\n        }\n        return FormCreateFactory(_config);\n    }\n\n    function FormCreate(vm, rules, options) {\n        extend(this, {\n            id: id++,\n            vm,\n            create,\n            manager: createManager(config.manager),\n            parsers,\n            providers,\n            rules: Array.isArray(rules) ? rules : [],\n            name: vm.$options.propsData.name,\n            inFor: vm.$options.propsData.inFor,\n            prop: {\n                components,\n                directives,\n            },\n            CreateNode,\n            bus: new _vue,\n            unwatch: null,\n            options: options || {},\n            extendApi: config.extendApi || (api => api)\n        })\n        this.init();\n        this.initOptions(this.options);\n        if (this.name) {\n            if (this.inFor) {\n                if (!instance[this.name]) instance[this.name] = [];\n                instance[this.name].push(this.api());\n            } else {\n                instance[this.name] = this.api();\n            }\n        }\n    }\n\n    extend(FormCreate.prototype, {\n        init() {\n            const vm = this.vm;\n            const h = new Handle(this);\n            this.$handle = h;\n            vm.$f = h.api;\n            vm.$emit('input', h.api);\n\n            vm.$on('hook:created', () => {\n                if (this.isSub()) {\n                    this.unwatch = vm.$watch(() => vm.$pfc.option, () => {\n                        this.initOptions(this.options);\n                        vm.$f.refresh();\n                    }, {deep: true});\n                    this.initOptions(this.options);\n                }\n                this.created();\n            })\n            vm.$on('hook:mounted', () => {\n                this.mounted();\n            });\n            vm.$on('hook:beforeDestroy', () => {\n                vm.destroyed = true;\n                this.unwatch && this.unwatch();\n                h.reloadRule([]);\n                if (this.name) {\n                    if (this.inFor) {\n                        const idx = instance[this.name].indexOf(this.api());\n                        instance[this.name].splice(idx, 1);\n                    } else {\n                        delete instance[this.name];\n                    }\n                }\n            });\n            vm.$on('hook:updated', () => {\n                h.bindNextTick(() => this.bus.$emit('next-tick', h.api));\n            });\n        },\n        isSub() {\n            return this.vm.$pfc && this.vm.extendOption;\n        },\n        initOptions(options) {\n            this.options = {formData: {}, submitBtn: {}, resetBtn: {}, ...deepCopy(globalConfig)};\n            if (this.isSub()) {\n                this.mergeOptions(this.options, this.vm.$pfc.$f.config || {}, true);\n            }\n            this.updateOptions(options);\n        },\n        mergeOptions(target, opt, parent) {\n            opt = deepCopy(opt);\n            parent && ['page', 'onSubmit', 'mounted', 'reload', 'formData', 'el'].forEach((n) => {\n                delete opt[n];\n            });\n            if (opt.global) {\n                target.global = mergeGlobal(target.global, opt.global);\n                delete opt.global;\n            }\n            this.$handle.$manager.mergeOptions([opt], target);\n            return target;\n        },\n        updateOptions(options) {\n            this.mergeOptions(this.options, options);\n            this.$handle.$manager.updateOptions(this.options);\n        },\n        created() {\n            this.$handle.init();\n            this.vm.$emit('created', this.api());\n        },\n        api() {\n            return this.$handle.api;\n        },\n        render() {\n            return this.$handle.render();\n        },\n        mounted() {\n            this.$handle.mounted();\n        },\n    })\n\n\n    function useAttr(formCreate) {\n        extend(formCreate, {\n            version: config.version,\n            ui: config.ui,\n            data,\n            maker,\n            component,\n            directive,\n            register,\n            $vnode,\n            parser,\n            use,\n            factory,\n            componentAlias,\n            copyRule,\n            copyRules,\n            fetch,\n            $form,\n            parseFn,\n            parseJson,\n            toJson,\n            getApi,\n            init(rules, _opt = {}) {\n                let $vm = mountForm(rules, _opt), _this = $vm.$refs.fc.formCreate;\n                return {\n                    mount($el) {\n                        if ($el && is.Element($el))\n                            _this.options.el = $el;\n                        _getEl(_this.options).appendChild($vm.$el);\n                        return _this.api();\n                    },\n                    remove() {\n                        $vm.$el.parentNode && $vm.$el.parentNode.removeChild($vm.$el);\n                    },\n                    destroy() {\n                        this.remove();\n                        $vm.$destroy();\n                    },\n                    $f: _this.api()\n                };\n            }\n        });\n    }\n\n    function useStatic(formCreate) {\n        extend(formCreate, {\n            create,\n            install(Vue, options) {\n                globalConfig = {...globalConfig, ...(options || {})}\n                if (Vue._installedFormCreate === true) return;\n                Vue._installedFormCreate = true;\n                _vue = Vue;\n\n                const $formCreate = function (rules, opt = {}) {\n                    return create(rules, opt, this);\n                };\n\n                useAttr($formCreate);\n\n                Vue.prototype.$formCreate = $formCreate;\n                Vue.component('FormCreate', $form());\n                Vue.component('FcFragment', $vnode());\n            }\n        })\n    }\n\n    useAttr(create);\n    useStatic(create);\n\n    CreateNode.use({fragment: 'fcFragment'});\n\n    parser(html);\n\n    if (config.install) create.use(config);\n\n    if (config.inherit) {\n        const inherit = config.inherit;\n        inherit.components && extend(components, inherit.components);\n        inherit.parsers && extend(parsers, inherit.parsers);\n        inherit.directives && extend(directives, inherit.directives);\n        inherit.providers && extend(providers, inherit.providers);\n        inherit.maker && extend(maker, inherit.maker);\n        inherit.data && extend(data, inherit.data);\n    }\n\n    return create;\n}\n"],"names":["$set","target","field","value","Vue","set","$del","_extends","Object","assign","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","extend","apply","this","toArray","Array","isArray","undefined","indexOf","NAME","getRuleInject","vm","parent","formCreateInject","$parent","$FormCreate","FormCreate","name","componentName","model","prop","provide","$pfc","inject","props","rule","type","required","option","extendOption","Boolean","api","String","subForm","inFor","data","formData","destroyed","validate","$f","isShow","unique","renderRule","ctxInject","updateValue","JSON","stringify","isMore","render","formCreate","methods","_refresh","_renderRule","_updateValue","$emit","watch","handler","n","config","forceCoverValue","coverValue","setValue","deep","initOptions","refresh","every","v","_this","$handle","reloadRule","beforeCreate","$options","propsData","keys","forEach","k","_this2","created","fapi","rmSubForm","sub","getSubForm","idx","splice","$on","$watch","_this3","push","addSubForm","immediate","is","arg","toString","Undef","Element","_typeof","nodeType","trueArray","Function","getType","str","exec","empty","hasProperty","t","normalMerge","toArrayMerge","functionalMerge","mergeProps","objects","initial","opt","_normalMerge","_toArrayMerge","_functionalMerge","propsMerge","reduce","key","arrA","arrB","event","hook","mergeFn","fn1","fn2","keyAttrs","arrayAttrs","normalAttrs","attrs","format","msg","getRule","tip","console","warn","err","error","logError","e","deepExtend","origin","mode","isArr","clone","nst","_clone","__json","__origin","filter","__ctrl","deepCopy","PREFIX","SUFFIX","$T","$TX","FUNCTION","toJson","obj","space","val","_isVue","__emit","makeFn","fn","eval","parseFn","trim","flag","replace","__inject","parseJson","json","parse","enumerable","writable","configurable","copyRule","copyRules","rules","mergeRule","merge","array","normal","r","mergeGlobal","funcProxy","that","proxy","defineProperties","get","byCtx","__fc__","__origin__","invoke","def","baseRule","on","options","children","hidden","display","creatorFactory","init","title","maker","Creator","_data","appendProto","setProp","constructor","commonMaker","create","make","createTmp","template","makerFactory","factory","copy","Api","h","tidyFields","fields","getCtxs","ctx","$render","clearCache","allSubForm","subs","form","id","getFieldCtx","appendValue","appendData","getValue","deferSyncValue","ctxs","fieldCtx","removeField","getCtx","rm","removeRule","destroy","$el","parentNode","removeChild","$destroy","append","after","child","index","sort","root","prepend","state","hiddenStatus","displayStatus","disabled","all","map","component","nameCtx","bind","reload","updateOptions","fc","onSubmit","sync","deleted","clearCacheAll","refreshOptions","$manager","hideForm","hide","changeStatus","clearChangeStatus","updateRule","updateRules","mergeRules","setEffect","attr","substr","effect","clearEffectData","updateValidate","updateValidates","validates","refreshValidate","resetFields","defaultValue","method","el","Error","args","trigger","$refs","ref","closeModal","nextTick","bus","$once","nextRefresh","emit","helper","changeValue","changeField","useCache","Render","initCache","cache","use","setCache","vnode","slot","getCache","toCase","lower","toLocaleUpperCase","toLowerCase","toLine","line","toLocaleLowerCase","uniqueId","Math","random","Number","Date","now","deepSet","to","split","useRender","initRender","tempList","clearOrgChildren","initOrgChildren","orgChildren","parser","loadChildren","getTypeSlot","_fn","$scopedSlots","vn","$h","$createElement","beforeRender","renderList","renderSlot","renderName","renderId","renderField","container","renderCtx","makeVm","getInjectData","g","global","cacheConfig","originType","trueType","setOptions","optionsTo","setTempProps","$props","injectProp","injectKeys","renderTemp","compile","$nextTick","mounted","input","_this4","onInput","parseSide","side","renderSides","temp","prefix","suffix","_this5","cacheFlag","_type","none","renderChildren","initProp","tidyRule","ctxProp","preview","makeWrap","item","_this6","style","_this7","custom","mergeProp","_this8","onMounted","getFormData","callback","expression","__rule__","isRm","_this9","rmCtx","defaultRender","vNode","makeComponent","alias","aliasMap","_this10","handle","CreateNode","useInject","Handler","parseInjectEvent","injectEvent","parseEventLst","parseEvent","parseEmit","emitPrefix","emitKey","eventName","eventInject","fieldKey","_inject","computed","self","watching","loading","unshift","EVENT","usePage","page","first","limit","getLimit","parseInt","pageEnd","pageLoad","pageFn","$off","loadRule","ceil","clearNextTick","clearTimeout","bindNextTick","setTimeout","loadedId","RuleContext","wrapRef","linkOn","ctrlRule","payload","updateType","updateKey","update","useLoader","parseRule","_rule","fullRule","loadFn","loadCtrl","control","ctrl","syncProp","pre","cycleLoad","_loadRule","syncForm","isRepeat","ruleEffect","repeat","isCopy","isInit","check","isCtrl","bindParser","setCtx","_preIndex","preIndex","i","updated","refreshUpdate","defineProperty","valueHandle","refreshControl","useCtrl","controls","getCtrl","handleFn","valid","findCtrl","isHidden","hideLst","reverse","ruleCon","ctrlCtx","_reloadRule","initData","reloading","nextReload","useInput","cacheValue","toValue","formValue","setFlag","setFormData","syncValue","valueChange","isQuote","isChange","toEmpty","toFormValue","deferSyncFn","strFn","refreshRule","appendLink","link","effectData","setParser","unwatch","un","unlink","watchTo","watchCtx","rmCtrl","$api","_rm","noWatch","BaseParser","noneKey","useContext","getNameCtx","setIdCtx","rmIdCtx","lst","isMounted","getParser","list","parsers","noWatchFn","o","rmSub","watchEffect","useLifecycle","_mounted","lifecycle","useEffect","useProvider","ps","providers","_c","getComponent","onEffect","provider","used","_used","emitEffect","getEffect","p","getProp","clearProp","arr","components","manager","extendApi","getError","action","xhr","status","url","getBody","text","responseText","response","fetch","XMLHttpRequest","onerror","onError","onload","onSuccess","open","dataType","FormData","setRequestHeader","withCredentials","headers","send","__init","functional","parseProp","domProps","innerHTML","CreateNodeFactory","setVm","tag","isReservedTag","nativeOn","Node","context","nodes","createManager","proto","CustomManager","Manager","mergeOptionsRule","$r","mergeOptions","tidyOptions","getDefaultOptions","run","parseOpt","body","message","loaded","$required","load","parseVal","validator","_","join","_vue","window","_parseProp","nameProp","_getEl","document","querySelector","mountForm","$vm","$data","$mount","exportAttrs","instance","FormCreateFactory","fragment","directives","$provider","globalConfig","getApi","directive","register","componentAlias","base","$form","formCreateParser","$vnode","install","_opt","appendChild","inherit","_config","useAttr","version","ui","mount","remove","Handle","isSub","submitBtn","resetBtn","_installedFormCreate","$formCreate","html"],"mappings":"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"}